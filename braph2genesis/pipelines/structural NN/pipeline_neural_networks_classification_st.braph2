%% Pipeline Neural Networks Classification ST
%
% This is the pipeline script to perform classification by neural networks for two groups of subjects with structural data.
% 1. It loads a brain atlas from an XLS file (e.g., desikan_atlas.xlsx).
% 2. It loads the data of two groups of subjects from XLS files.
% 3. It constructs the dataset using structural data.
% 4. It splits the dataset into training set and validation set.
% 5. It trains the neural netork model.
% 6. It evaluates the performance on training set.
% 7. It evaluates the performance on validation set.

%% Brain Atlas
ba = ImporterBrainAtlasXLS('WAITBAR', true).get('BA'); % Load a Brain Atlas XLS % Brain Atlas

%% Groups
gr1 = ImporterGroupSubjectST_XLS('BA', ba, 'WAITBAR', true).get('GR'); % Load Group ST 1 from XLS % Group ST 1
gr2 = ImporterGroupSubjectST_XLS('BA', ba, 'WAITBAR', true).get('GR'); % Load Group ST 2 from XLS % Group ST 2

%% Dataset Construction
nnd1 = NNData_ST('GR', gr1, 'TARGET_NAME', gr1.get('ID')); % NN Dataset for Group 1 % NN Group ST 1
nnd2 = NNData_ST('GR', gr2, 'TARGET_NAME', gr2.get('ID')); % NN Dataset for Group 2 % NN Group ST 2

%% Dataset Splitting
nnds = NNClassifierDataSplit('GR1', nnd1.get('GR_NN'), 'GR2', nnd2.get('GR_NN'), 'SPLIT_GR1', 0.2, 'SPLIT_GR2', 0.2, 'FEATURE_MASK', 0.05); % Split the dataset % NN Dataset

%% Model Training
classifier = NNClassifierDNN('GR', nnds.get('GR_TRAIN_FS'), 'VERBOSE', true, 'SHUFFLE', 'every-epoch'); % Train the NN % NN Classifier

%% Evaluation on Training Set
nne_train = NNClassifierEvaluator('GR', nnds.get('GR_TRAIN_FS'), 'NN', classifier); % Evaluate the NN % Evaluation on Training Group

%% Evaluation on Validation Set
nne_val = NNClassifierEvaluator('GR', nnds.get('GR_VAL_FS'), 'NN', classifier); % Evaluate the NN % Evaluation on Validation Group
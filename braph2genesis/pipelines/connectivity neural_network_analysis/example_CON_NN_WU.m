%EXAMPLE_CON_NN_WU
% Script example pipeline CON NN WU

clear variables %#ok<*NASGU>

%% Load BrainAtlas
im_ba = ImporterBrainAtlasXLS( ...
    'FILE', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'desikan_atlas.xlsx'], ...
    'WAITBAR', true ...
    );

ba = im_ba.get('BA');

%% Load Groups of SubjectCON as Training set
im_gr1 = ImporterGroupSubjectCON_XLS( ...
    'DIRECTORY', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'xls' filesep 'GroupName1'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr1 = im_gr1.get('GR');

im_gr2 = ImporterGroupSubjectCON_XLS( ...
    'DIRECTORY', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'xls' filesep 'GroupName2'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr2 = im_gr2.get('GR');

%% graph contruction
a_WU1 = AnalyzeEnsemble_CON_WU( ...
    'GR', gr1 ...
    );

a_WU2 = AnalyzeEnsemble_CON_WU( ...
    'GR', gr2 ...
    );

%% k-fold cross validation
cv = AnalyzeKFoldCrossValidation_CON_WU( ...
    'A_1', a_WU1, ...
    'A_2', a_WU2, ...
    'KFOLD', 5, ...
    'DENSITY_OF_FEATURE_SELECTION', 0.05);

average_auc = cv.get('AVERAGE_AUC');
average_auc = cv.get('AUC_CIL');
average_auc = cv.get('AUC_CIU');
cv.getHeatMap('HeatMap'); % fig
cv.getConfusionMatrix('ConfusionMatrix'); % fig

%% Load Groups of SubjectCON as Test Set 
im_gr1 = ImporterGroupSubjectCON_XLS( ...
    'DIRECTORY', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'xls' filesep 'GroupName1'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr1 = im_gr1.get('GR');

im_gr2 = ImporterGroupSubjectCON_XLS( ...
    'DIRECTORY', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'xls' filesep 'GroupName2'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr2 = im_gr2.get('GR');

%% graph contruction
a_WU1_test = AnalyzeEnsemble_CON_WU( ...
    'GR', gr1 ...
    );

a_WU2_test = AnalyzeEnsemble_CON_WU( ...
    'GR', gr2 ...
    );

%% Train the Classifier with trainingTest trained NN on test set
classifier = ClassifierNN_CON_WU( ...
    'A_1_train', a_WU1, ...
    'A_2_train', a_WU2, ...
    'A_1_test', a_WU1_test, ...
    'A_2_test', a_WU2_test, ...
    'DENSITY_OF_FEATURE_SELECTION', 0.05);

auc_train = classifier.get('AUC_TRAIN');
auc_test = classifier.get('AUC_TEST');

classifier.getHeatMap('HeatMap'); % fig
classifier.getConfusionMatrix('ConfusionMatrix'); % fig
%EXAMPLE_CON_NN_WU
% Script example pipeline CON NN WU

clear variables %#ok<*NASGU>

%% Load BrainAtlas
im_ba = ImporterBrainAtlasXLS( ...
    'FILE', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'desikan_atlas.xlsx'], ...
    'WAITBAR', true ...
    );

ba = im_ba.get('BA');

%% Load Groups of SubjectCON as Training set
im_gr1 = ImporterGroupSubjectCON_XLS( ...
    'DIRECTORY', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'xls' filesep 'GroupName1'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr1_train = im_gr1.get('GR');

im_gr2 = ImporterGroupSubjectCON_XLS( ...
    'DIRECTORY', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'xls' filesep 'GroupName2'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr2_train = im_gr2.get('GR');

%% Train the Classifier with training set
ds_processor = DatasetProcessor_Classification_CON_WU( ...
    'GR1', gr1_train, ...
    'GR2', gr2_train, ...
    'DENSITY_OF_FEATURE_SELECTION', 0.05);

classifier_nn = ds_processor.get('CLASSIFIER_NN');
classifier_nn.memorize('TRAINED_NN');

%% Evaluate the model with training dataset
model_evaluator_train = ModelEvaluator_Classification( ...
    'TRAINED_CLASSIFIER', classifier_nn, ...
    'GR1', gr1_train, ...
    'GR2', gr2_train);

auc_train = model_evaluator_train.get('AUC');
model_evaluator_train.get('CONFUSION_MATRIX'); % fig

%% Load Groups of SubjectCON as Test Set 
im_gr1 = ImporterGroupSubjectCON_XLS( ...
    'DIRECTORY', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'xls' filesep 'GroupName1'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr1_test = im_gr1.get('GR');

im_gr2 = ImporterGroupSubjectCON_XLS( ...
    'DIRECTORY', [fileparts(which('example_CON_WU')) filesep 'example data CON (DTI)' filesep 'xls' filesep 'GroupName2'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr2_test = im_gr2.get('GR');


%% Evaluate the model with unseen dataset
model_evaluator_test = ModelEvaluator_Classification( ...
    'TRAINED_CLASSIFIER', classifier_nn, ...
    'GR1', gr1_test, ...
    'GR2', gr2_test);

auc_test = model_evaluator_test.get('AUC');
model_evaluator_test.get('CONFUSION_MATRIX'); % fig

%TEST_REMOVE_FROM_VARARGIN

%% Test 1
handle = 'H';

varargin = {};
expected_res = {};
assert(isequal(remove_from_varargin(handle, varargin{:}), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')
assert(isequal(remove_from_varargin(handle, varargin), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')

varargin = {'H', ''};
expected_res = cell(1, 0);
assert(isequal(remove_from_varargin(handle, varargin{:}), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')
assert(isequal(remove_from_varargin(handle, varargin), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')

varargin = {'H', '', 'H', ''};
expected_res = {'H', ''};
assert(isequal(remove_from_varargin(handle, varargin{:}), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')
assert(isequal(remove_from_varargin(handle, varargin), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')

varargin = {'H', '', 'H1', 'none', 'H', 1, 'H3', 'none', 'H', 2};
expected_res = {'H1', 'none', 'H', 1, 'H3', 'none', 'H', 2};
assert(isequal(remove_from_varargin(handle, varargin{:}), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')
assert(isequal(remove_from_varargin(handle, varargin), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')

varargin = {'H1', 'none', 'H', 1, 'H3', 'none', 'H', 2};
expected_res = {'H1', 'none', 'H3', 'none', 'H', 2};
assert(isequal(remove_from_varargin(handle, varargin{:}), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')
assert(isequal(remove_from_varargin(handle, varargin), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')

varargin = {'H1', 'none', 'H3', 'none', 'H', 2};
expected_res = {'H1', 'none', 'H3', 'none'};
assert(isequal(remove_from_varargin(handle, varargin{:}), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')
assert(isequal(remove_from_varargin(handle, varargin), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')

varargin = {'H1', 'none', 'H3', 'none'};
expected_res = {'H1', 'none', 'H3', 'none'};
assert(isequal(remove_from_varargin(handle, varargin{:}), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')
assert(isequal(remove_from_varargin(handle, varargin), expected_res), ...
    [BRAPH2.STR ':remove_from_varargin:' BRAPH2.BUG_FUNC], ...
    'Error with full varargin.')
%TEST_ANALYZEGROUP_ST_BUD

%% Test 1.1: Instantiation - empty

a = AnalyzeGroup_ST_BUD();

prop_number = AnalyzeGroup_ST_BUD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(AnalyzeGroup_ST_BUD.getPropTag(prop));
	assert( ...
		isa(a.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
		['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in AnalyzeGroup_ST_BUD.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(a.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
		['AnalyzeGroup_ST_BUD.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in AnalyzeGroup_ST_BUD.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:AnalyzeGroup_ST_BUD')
a = AnalyzeGroup_ST_BUD( ...
	AnalyzeGroup_ST_BUD.ID, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.ID), ...
	AnalyzeGroup_ST_BUD.LABEL, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.LABEL), ...
	AnalyzeGroup_ST_BUD.NOTES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NOTES), ...
	AnalyzeGroup_ST_BUD.GR, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.GR), ...
	AnalyzeGroup_ST_BUD.G, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.G), ...
	AnalyzeGroup_ST_BUD.CORRELATION_RULE, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.CORRELATION_RULE), ...
	AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE), ...
	AnalyzeGroup_ST_BUD.DENSITIES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.DENSITIES) ...
	);
warning('on', 'BRAPH2:AnalyzeGroup_ST_BUD')

for prop = 1:1:AnalyzeGroup_ST_BUD.getPropNumber()
	TAG = upper(AnalyzeGroup_ST_BUD.getPropTag(prop));
	switch AnalyzeGroup_ST_BUD.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(a.getr(prop), AnalyzeGroup_ST_BUD.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by AnalyzeGroup_ST_BUD.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in AnalyzeGroup_ST_BUD.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(a.getr(TAG), AnalyzeGroup_ST_BUD.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by AnalyzeGroup_ST_BUD.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in AnalyzeGroup_ST_BUD.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(a.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['Being a result, AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in AnalyzeGroup_ST_BUD.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(a.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['Being a result, AnalyzeGroup_ST_BUD.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in AnalyzeGroup_ST_BUD.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:AnalyzeGroup_ST_BUD')
a_0 = AnalyzeGroup_ST_BUD( ...
	AnalyzeGroup_ST_BUD.ID, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.ID), ...
	AnalyzeGroup_ST_BUD.LABEL, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.LABEL), ...
	AnalyzeGroup_ST_BUD.NOTES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NOTES), ...
	AnalyzeGroup_ST_BUD.GR, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.GR), ...
	AnalyzeGroup_ST_BUD.G, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.G), ...
	AnalyzeGroup_ST_BUD.CORRELATION_RULE, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.CORRELATION_RULE), ...
	AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE), ...
	AnalyzeGroup_ST_BUD.DENSITIES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.DENSITIES) ...
	);
warning('on', 'BRAPH2:AnalyzeGroup_ST_BUD')

a_1 = AnalyzeGroup_ST_BUD( ...
	AnalyzeGroup_ST_BUD.ID, Callback('EL', a_0, 'PROP', 1), ...
	AnalyzeGroup_ST_BUD.LABEL, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.LABEL), ...
	AnalyzeGroup_ST_BUD.NOTES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NOTES), ...
	AnalyzeGroup_ST_BUD.GR, Callback('EL', a_0, 'PROP', 4), ...
	AnalyzeGroup_ST_BUD.G, NoValue(), ...
	AnalyzeGroup_ST_BUD.CORRELATION_RULE, Callback('EL', a_0, 'PROP', 6), ...
	AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE, Callback('EL', a_0, 'PROP', 7), ...
	AnalyzeGroup_ST_BUD.DENSITIES, Callback('EL', a_0, 'PROP', 8) ...
	);
	
prop_number = AnalyzeGroup_ST_BUD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(AnalyzeGroup_ST_BUD.getPropTag(prop));
	switch AnalyzeGroup_ST_BUD.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(a_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(a_1.get(prop), a_0.get(prop)) && ~isa(a_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(a_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
a_2 = AnalyzeGroup_ST_BUD( ...
	AnalyzeGroup_ST_BUD.ID, Callback('EL', a_1, 'PROP', 1), ...
	AnalyzeGroup_ST_BUD.LABEL, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.LABEL), ...
	AnalyzeGroup_ST_BUD.NOTES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NOTES), ...
	AnalyzeGroup_ST_BUD.GR, Callback('EL', a_1, 'PROP', 4), ...
	AnalyzeGroup_ST_BUD.G, NoValue(), ...
	AnalyzeGroup_ST_BUD.CORRELATION_RULE, Callback('EL', a_1, 'PROP', 6), ...
	AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE, Callback('EL', a_1, 'PROP', 7), ...
	AnalyzeGroup_ST_BUD.DENSITIES, Callback('EL', a_1, 'PROP', 8) ...
	);
	
prop_number = AnalyzeGroup_ST_BUD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(AnalyzeGroup_ST_BUD.getPropTag(prop));
	switch AnalyzeGroup_ST_BUD.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(a_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(a_2.get(prop), a_0.get(prop)) && ~isa(a_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(a_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
a_3 = AnalyzeGroup_ST_BUD( ...
	AnalyzeGroup_ST_BUD.ID, Callback('EL', a_2, 'PROP', 1), ...
	AnalyzeGroup_ST_BUD.LABEL, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.LABEL), ...
	AnalyzeGroup_ST_BUD.NOTES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NOTES), ...
	AnalyzeGroup_ST_BUD.GR, Callback('EL', a_2, 'PROP', 4), ...
	AnalyzeGroup_ST_BUD.G, NoValue(), ...
	AnalyzeGroup_ST_BUD.CORRELATION_RULE, Callback('EL', a_2, 'PROP', 6), ...
	AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE, Callback('EL', a_2, 'PROP', 7), ...
	AnalyzeGroup_ST_BUD.DENSITIES, Callback('EL', a_2, 'PROP', 8) ...
	);
	
prop_number = AnalyzeGroup_ST_BUD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(AnalyzeGroup_ST_BUD.getPropTag(prop));
	switch AnalyzeGroup_ST_BUD.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(a_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(a_3.get(prop), a_0.get(prop)) && ~isa(a_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(a_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:AnalyzeGroup_ST_BUD')
a = AnalyzeGroup_ST_BUD( ...
	AnalyzeGroup_ST_BUD.ID, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.ID), ...
	AnalyzeGroup_ST_BUD.LABEL, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.LABEL), ...
	AnalyzeGroup_ST_BUD.NOTES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NOTES), ...
	AnalyzeGroup_ST_BUD.GR, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.GR), ...
	AnalyzeGroup_ST_BUD.G, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.G), ...
	AnalyzeGroup_ST_BUD.CORRELATION_RULE, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.CORRELATION_RULE), ...
	AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE), ...
	AnalyzeGroup_ST_BUD.DENSITIES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.DENSITIES) ...
	);
warning('on', 'BRAPH2:AnalyzeGroup_ST_BUD')

prop_number = AnalyzeGroup_ST_BUD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(AnalyzeGroup_ST_BUD.getPropTag(prop));
	switch AnalyzeGroup_ST_BUD.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(a.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(a.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(a.getPropSettings(prop))
				assert( ...
					a.checkFormat(a.getPropFormat(prop), a.get(prop)), ...
					[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
					['AnalyzeGroup_ST_BUD.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					a.checkFormat(a.getPropFormat(prop), a.get(prop), a.getPropSettings(prop)), ...
					[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
					['AnalyzeGroup_ST_BUD.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:AnalyzeGroup_ST_BUD')
a = AnalyzeGroup_ST_BUD( ...
	AnalyzeGroup_ST_BUD.ID, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.ID), ...
	AnalyzeGroup_ST_BUD.LABEL, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.LABEL), ...
	AnalyzeGroup_ST_BUD.NOTES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NOTES), ...
	AnalyzeGroup_ST_BUD.GR, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.GR), ...
	AnalyzeGroup_ST_BUD.G, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.G), ...
	AnalyzeGroup_ST_BUD.CORRELATION_RULE, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.CORRELATION_RULE), ...
	AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.NEGATIVE_WEIGHT_RULE), ...
	AnalyzeGroup_ST_BUD.DENSITIES, AnalyzeGroup_ST_BUD.getPropDefault(AnalyzeGroup_ST_BUD.DENSITIES) ...
	);
warning('on', 'BRAPH2:AnalyzeGroup_ST_BUD')

for prop = 1:1:AnalyzeGroup_ST_BUD.getPropNumber()
	TAG = upper(AnalyzeGroup_ST_BUD.getPropTag(prop));
	switch AnalyzeGroup_ST_BUD.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(a.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(a.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(a.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(a.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				a.checkFormat(a.getPropFormat(prop), a.getr(prop),a.getPropSettings(prop)), ...
				[BRAPH2.STR ':AnalyzeGroup_ST_BUD:' BRAPH2.BUG_FUNC], ...
				['AnalyzeGroup_ST_BUD.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: Example

example_ST_BUD


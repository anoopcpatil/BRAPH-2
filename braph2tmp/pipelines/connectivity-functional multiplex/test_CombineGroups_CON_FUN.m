%TEST_COMBINEGROUPS_CON_FUN

%% Test 1.1: Instantiation - empty

co = CombineGroups_CON_FUN();

prop_number = CombineGroups_CON_FUN.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CombineGroups_CON_FUN.getPropTag(prop));
	assert( ...
		isa(co.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
		['CombineGroups_CON_FUN.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in CombineGroups_CON_FUN.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(co.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
		['CombineGroups_CON_FUN.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in CombineGroups_CON_FUN.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:CombineGroups_CON_FUN')
co = CombineGroups_CON_FUN( ...
	CombineGroups_CON_FUN.ID, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.ID), ...
	CombineGroups_CON_FUN.LABEL, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.LABEL), ...
	CombineGroups_CON_FUN.NOTES, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.NOTES), ...
	CombineGroups_CON_FUN.WAITBAR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.WAITBAR), ...
	CombineGroups_CON_FUN.GR1, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR1), ...
	CombineGroups_CON_FUN.GR2, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR2), ...
	CombineGroups_CON_FUN.GR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR) ...
	);
warning('on', 'BRAPH2:CombineGroups_CON_FUN')

for prop = 1:1:CombineGroups_CON_FUN.getPropNumber()
	TAG = upper(CombineGroups_CON_FUN.getPropTag(prop));
	switch CombineGroups_CON_FUN.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(co.getr(prop), CombineGroups_CON_FUN.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by CombineGroups_CON_FUN.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in CombineGroups_CON_FUN.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(co.getr(TAG), CombineGroups_CON_FUN.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by CombineGroups_CON_FUN.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in CombineGroups_CON_FUN.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(co.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['Being a result, CombineGroups_CON_FUN.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in CombineGroups_CON_FUN.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(co.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['Being a result, CombineGroups_CON_FUN.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in CombineGroups_CON_FUN.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:CombineGroups_CON_FUN')
co_0 = CombineGroups_CON_FUN( ...
	CombineGroups_CON_FUN.ID, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.ID), ...
	CombineGroups_CON_FUN.LABEL, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.LABEL), ...
	CombineGroups_CON_FUN.NOTES, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.NOTES), ...
	CombineGroups_CON_FUN.WAITBAR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.WAITBAR), ...
	CombineGroups_CON_FUN.GR1, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR1), ...
	CombineGroups_CON_FUN.GR2, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR2), ...
	CombineGroups_CON_FUN.GR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR) ...
	);
warning('on', 'BRAPH2:CombineGroups_CON_FUN')

co_1 = CombineGroups_CON_FUN( ...
	CombineGroups_CON_FUN.ID, Callback('EL', co_0, 'PROP', 1), ...
	CombineGroups_CON_FUN.LABEL, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.LABEL), ...
	CombineGroups_CON_FUN.NOTES, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.NOTES), ...
	CombineGroups_CON_FUN.WAITBAR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.WAITBAR), ...
	CombineGroups_CON_FUN.GR1, Callback('EL', co_0, 'PROP', 5), ...
	CombineGroups_CON_FUN.GR2, Callback('EL', co_0, 'PROP', 6), ...
	CombineGroups_CON_FUN.GR, NoValue() ...
	);
	
prop_number = CombineGroups_CON_FUN.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CombineGroups_CON_FUN.getPropTag(prop));
	switch CombineGroups_CON_FUN.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(co_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(co_1.get(prop), co_0.get(prop)) && ~isa(co_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(co_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
co_2 = CombineGroups_CON_FUN( ...
	CombineGroups_CON_FUN.ID, Callback('EL', co_1, 'PROP', 1), ...
	CombineGroups_CON_FUN.LABEL, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.LABEL), ...
	CombineGroups_CON_FUN.NOTES, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.NOTES), ...
	CombineGroups_CON_FUN.WAITBAR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.WAITBAR), ...
	CombineGroups_CON_FUN.GR1, Callback('EL', co_1, 'PROP', 5), ...
	CombineGroups_CON_FUN.GR2, Callback('EL', co_1, 'PROP', 6), ...
	CombineGroups_CON_FUN.GR, NoValue() ...
	);
	
prop_number = CombineGroups_CON_FUN.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CombineGroups_CON_FUN.getPropTag(prop));
	switch CombineGroups_CON_FUN.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(co_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(co_2.get(prop), co_0.get(prop)) && ~isa(co_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(co_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
co_3 = CombineGroups_CON_FUN( ...
	CombineGroups_CON_FUN.ID, Callback('EL', co_2, 'PROP', 1), ...
	CombineGroups_CON_FUN.LABEL, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.LABEL), ...
	CombineGroups_CON_FUN.NOTES, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.NOTES), ...
	CombineGroups_CON_FUN.WAITBAR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.WAITBAR), ...
	CombineGroups_CON_FUN.GR1, Callback('EL', co_2, 'PROP', 5), ...
	CombineGroups_CON_FUN.GR2, Callback('EL', co_2, 'PROP', 6), ...
	CombineGroups_CON_FUN.GR, NoValue() ...
	);
	
prop_number = CombineGroups_CON_FUN.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CombineGroups_CON_FUN.getPropTag(prop));
	switch CombineGroups_CON_FUN.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(co_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(co_3.get(prop), co_0.get(prop)) && ~isa(co_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(co_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:CombineGroups_CON_FUN')
co = CombineGroups_CON_FUN( ...
	CombineGroups_CON_FUN.ID, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.ID), ...
	CombineGroups_CON_FUN.LABEL, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.LABEL), ...
	CombineGroups_CON_FUN.NOTES, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.NOTES), ...
	CombineGroups_CON_FUN.WAITBAR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.WAITBAR), ...
	CombineGroups_CON_FUN.GR1, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR1), ...
	CombineGroups_CON_FUN.GR2, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR2), ...
	CombineGroups_CON_FUN.GR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR) ...
	);
warning('on', 'BRAPH2:CombineGroups_CON_FUN')

prop_number = CombineGroups_CON_FUN.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CombineGroups_CON_FUN.getPropTag(prop));
	switch CombineGroups_CON_FUN.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(co.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(co.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(co.getPropSettings(prop))
				assert( ...
					co.checkFormat(co.getPropFormat(prop), co.get(prop)), ...
					[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
					['CombineGroups_CON_FUN.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					co.checkFormat(co.getPropFormat(prop), co.get(prop), co.getPropSettings(prop)), ...
					[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
					['CombineGroups_CON_FUN.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:CombineGroups_CON_FUN')
co = CombineGroups_CON_FUN( ...
	CombineGroups_CON_FUN.ID, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.ID), ...
	CombineGroups_CON_FUN.LABEL, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.LABEL), ...
	CombineGroups_CON_FUN.NOTES, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.NOTES), ...
	CombineGroups_CON_FUN.WAITBAR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.WAITBAR), ...
	CombineGroups_CON_FUN.GR1, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR1), ...
	CombineGroups_CON_FUN.GR2, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR2), ...
	CombineGroups_CON_FUN.GR, CombineGroups_CON_FUN.getPropDefault(CombineGroups_CON_FUN.GR) ...
	);
warning('on', 'BRAPH2:CombineGroups_CON_FUN')

for prop = 1:1:CombineGroups_CON_FUN.getPropNumber()
	TAG = upper(CombineGroups_CON_FUN.getPropTag(prop));
	switch CombineGroups_CON_FUN.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(co.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(co.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(co.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(co.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				co.checkFormat(co.getPropFormat(prop), co.getr(prop),co.getPropSettings(prop)), ...
				[BRAPH2.STR ':CombineGroups_CON_FUN:' BRAPH2.BUG_FUNC], ...
				['CombineGroups_CON_FUN.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end


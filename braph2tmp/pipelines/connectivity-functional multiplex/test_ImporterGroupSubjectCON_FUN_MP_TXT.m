%TEST_IMPORTERGROUPSUBJECTCON_FUN_MP_TXT

%% Test 1.1: Instantiation - empty

im = ImporterGroupSubjectCON_FUN_MP_TXT();

prop_number = ImporterGroupSubjectCON_FUN_MP_TXT.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ImporterGroupSubjectCON_FUN_MP_TXT.getPropTag(prop));
	assert( ...
		isa(im.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
		['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(im.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
		['ImporterGroupSubjectCON_FUN_MP_TXT.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in ImporterGroupSubjectCON_FUN_MP_TXT.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:ImporterGroupSubjectCON_FUN_MP_TXT')
im = ImporterGroupSubjectCON_FUN_MP_TXT( ...
	ImporterGroupSubjectCON_FUN_MP_TXT.ID, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.ID), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.LABEL, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.LABEL), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.NOTES, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.NOTES), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.BA, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.BA), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.GR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.GR) ...
	);
warning('on', 'BRAPH2:ImporterGroupSubjectCON_FUN_MP_TXT')

for prop = 1:1:ImporterGroupSubjectCON_FUN_MP_TXT.getPropNumber()
	TAG = upper(ImporterGroupSubjectCON_FUN_MP_TXT.getPropTag(prop));
	switch ImporterGroupSubjectCON_FUN_MP_TXT.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(im.getr(prop), ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(im.getr(TAG), ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in ImporterGroupSubjectCON_FUN_MP_TXT.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(im.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['Being a result, ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(im.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['Being a result, ImporterGroupSubjectCON_FUN_MP_TXT.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in ImporterGroupSubjectCON_FUN_MP_TXT.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:ImporterGroupSubjectCON_FUN_MP_TXT')
im_0 = ImporterGroupSubjectCON_FUN_MP_TXT( ...
	ImporterGroupSubjectCON_FUN_MP_TXT.ID, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.ID), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.LABEL, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.LABEL), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.NOTES, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.NOTES), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.BA, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.BA), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.GR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.GR) ...
	);
warning('on', 'BRAPH2:ImporterGroupSubjectCON_FUN_MP_TXT')

im_1 = ImporterGroupSubjectCON_FUN_MP_TXT( ...
	ImporterGroupSubjectCON_FUN_MP_TXT.ID, Callback('EL', im_0, 'PROP', 1), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.LABEL, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.LABEL), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.NOTES, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.NOTES), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON, Callback('EL', im_0, 'PROP', 5), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN, Callback('EL', im_0, 'PROP', 6), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.BA, Callback('EL', im_0, 'PROP', 7), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.GR, NoValue() ...
	);
	
prop_number = ImporterGroupSubjectCON_FUN_MP_TXT.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ImporterGroupSubjectCON_FUN_MP_TXT.getPropTag(prop));
	switch ImporterGroupSubjectCON_FUN_MP_TXT.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(im_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(im_1.get(prop), im_0.get(prop)) && ~isa(im_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(im_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
im_2 = ImporterGroupSubjectCON_FUN_MP_TXT( ...
	ImporterGroupSubjectCON_FUN_MP_TXT.ID, Callback('EL', im_1, 'PROP', 1), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.LABEL, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.LABEL), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.NOTES, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.NOTES), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON, Callback('EL', im_1, 'PROP', 5), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN, Callback('EL', im_1, 'PROP', 6), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.BA, Callback('EL', im_1, 'PROP', 7), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.GR, NoValue() ...
	);
	
prop_number = ImporterGroupSubjectCON_FUN_MP_TXT.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ImporterGroupSubjectCON_FUN_MP_TXT.getPropTag(prop));
	switch ImporterGroupSubjectCON_FUN_MP_TXT.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(im_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(im_2.get(prop), im_0.get(prop)) && ~isa(im_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(im_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
im_3 = ImporterGroupSubjectCON_FUN_MP_TXT( ...
	ImporterGroupSubjectCON_FUN_MP_TXT.ID, Callback('EL', im_2, 'PROP', 1), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.LABEL, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.LABEL), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.NOTES, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.NOTES), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON, Callback('EL', im_2, 'PROP', 5), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN, Callback('EL', im_2, 'PROP', 6), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.BA, Callback('EL', im_2, 'PROP', 7), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.GR, NoValue() ...
	);
	
prop_number = ImporterGroupSubjectCON_FUN_MP_TXT.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ImporterGroupSubjectCON_FUN_MP_TXT.getPropTag(prop));
	switch ImporterGroupSubjectCON_FUN_MP_TXT.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(im_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(im_3.get(prop), im_0.get(prop)) && ~isa(im_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(im_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:ImporterGroupSubjectCON_FUN_MP_TXT')
im = ImporterGroupSubjectCON_FUN_MP_TXT( ...
	ImporterGroupSubjectCON_FUN_MP_TXT.ID, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.ID), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.LABEL, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.LABEL), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.NOTES, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.NOTES), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.BA, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.BA), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.GR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.GR) ...
	);
warning('on', 'BRAPH2:ImporterGroupSubjectCON_FUN_MP_TXT')

prop_number = ImporterGroupSubjectCON_FUN_MP_TXT.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ImporterGroupSubjectCON_FUN_MP_TXT.getPropTag(prop));
	switch ImporterGroupSubjectCON_FUN_MP_TXT.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(im.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(im.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(im.getPropSettings(prop))
				assert( ...
					im.checkFormat(im.getPropFormat(prop), im.get(prop)), ...
					[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
					['ImporterGroupSubjectCON_FUN_MP_TXT.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					im.checkFormat(im.getPropFormat(prop), im.get(prop), im.getPropSettings(prop)), ...
					[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
					['ImporterGroupSubjectCON_FUN_MP_TXT.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:ImporterGroupSubjectCON_FUN_MP_TXT')
im = ImporterGroupSubjectCON_FUN_MP_TXT( ...
	ImporterGroupSubjectCON_FUN_MP_TXT.ID, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.ID), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.LABEL, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.LABEL), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.NOTES, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.NOTES), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.WAITBAR), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_CON), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.DIRECTORY_FUN), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.BA, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.BA), ...
	ImporterGroupSubjectCON_FUN_MP_TXT.GR, ImporterGroupSubjectCON_FUN_MP_TXT.getPropDefault(ImporterGroupSubjectCON_FUN_MP_TXT.GR) ...
	);
warning('on', 'BRAPH2:ImporterGroupSubjectCON_FUN_MP_TXT')

for prop = 1:1:ImporterGroupSubjectCON_FUN_MP_TXT.getPropNumber()
	TAG = upper(ImporterGroupSubjectCON_FUN_MP_TXT.getPropTag(prop));
	switch ImporterGroupSubjectCON_FUN_MP_TXT.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(im.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(im.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(im.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(im.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				im.checkFormat(im.getPropFormat(prop), im.getr(prop),im.getPropSettings(prop)), ...
				[BRAPH2.STR ':ImporterGroupSubjectCON_FUN_MP_TXT:' BRAPH2.BUG_FUNC], ...
				['ImporterGroupSubjectCON_FUN_MP_TXT.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end


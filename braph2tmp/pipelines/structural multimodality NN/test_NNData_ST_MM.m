%TEST_NNDATA_ST_MM

%% Test 1.1: Instantiation - empty

nnd = NNData_ST_MM();

prop_number = NNData_ST_MM.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNData_ST_MM.getPropTag(prop));
	assert( ...
		isa(nnd.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
		['NNData_ST_MM.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in NNData_ST_MM.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(nnd.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
		['NNData_ST_MM.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in NNData_ST_MM.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:NNData_ST_MM')
nnd = NNData_ST_MM( ...
	NNData_ST_MM.ID, NNData_ST_MM.getPropDefault(NNData_ST_MM.ID), ...
	NNData_ST_MM.LABEL, NNData_ST_MM.getPropDefault(NNData_ST_MM.LABEL), ...
	NNData_ST_MM.NOTES, NNData_ST_MM.getPropDefault(NNData_ST_MM.NOTES), ...
	NNData_ST_MM.WAITBAR, NNData_ST_MM.getPropDefault(NNData_ST_MM.WAITBAR), ...
	NNData_ST_MM.INPUT_TYPE, NNData_ST_MM.getPropDefault(NNData_ST_MM.INPUT_TYPE), ...
	NNData_ST_MM.G, NNData_ST_MM.getPropDefault(NNData_ST_MM.G), ...
	NNData_ST_MM.MEASURES, NNData_ST_MM.getPropDefault(NNData_ST_MM.MEASURES), ...
	NNData_ST_MM.TARGET_NAME, NNData_ST_MM.getPropDefault(NNData_ST_MM.TARGET_NAME), ...
	NNData_ST_MM.GR, NNData_ST_MM.getPropDefault(NNData_ST_MM.GR), ...
	NNData_ST_MM.GR_NN, NNData_ST_MM.getPropDefault(NNData_ST_MM.GR_NN) ...
	);
warning('on', 'BRAPH2:NNData_ST_MM')

for prop = 1:1:NNData_ST_MM.getPropNumber()
	TAG = upper(NNData_ST_MM.getPropTag(prop));
	switch NNData_ST_MM.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(nnd.getr(prop), NNData_ST_MM.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by NNData_ST_MM.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in NNData_ST_MM.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(nnd.getr(TAG), NNData_ST_MM.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by NNData_ST_MM.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in NNData_ST_MM.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(nnd.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['Being a result, NNData_ST_MM.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in NNData_ST_MM.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(nnd.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['Being a result, NNData_ST_MM.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in NNData_ST_MM.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:NNData_ST_MM')
nnd_0 = NNData_ST_MM( ...
	NNData_ST_MM.ID, NNData_ST_MM.getPropDefault(NNData_ST_MM.ID), ...
	NNData_ST_MM.LABEL, NNData_ST_MM.getPropDefault(NNData_ST_MM.LABEL), ...
	NNData_ST_MM.NOTES, NNData_ST_MM.getPropDefault(NNData_ST_MM.NOTES), ...
	NNData_ST_MM.WAITBAR, NNData_ST_MM.getPropDefault(NNData_ST_MM.WAITBAR), ...
	NNData_ST_MM.INPUT_TYPE, NNData_ST_MM.getPropDefault(NNData_ST_MM.INPUT_TYPE), ...
	NNData_ST_MM.G, NNData_ST_MM.getPropDefault(NNData_ST_MM.G), ...
	NNData_ST_MM.MEASURES, NNData_ST_MM.getPropDefault(NNData_ST_MM.MEASURES), ...
	NNData_ST_MM.TARGET_NAME, NNData_ST_MM.getPropDefault(NNData_ST_MM.TARGET_NAME), ...
	NNData_ST_MM.GR, NNData_ST_MM.getPropDefault(NNData_ST_MM.GR), ...
	NNData_ST_MM.GR_NN, NNData_ST_MM.getPropDefault(NNData_ST_MM.GR_NN) ...
	);
warning('on', 'BRAPH2:NNData_ST_MM')

nnd_1 = NNData_ST_MM( ...
	NNData_ST_MM.ID, Callback('EL', nnd_0, 'PROP', 1), ...
	NNData_ST_MM.LABEL, NNData_ST_MM.getPropDefault(NNData_ST_MM.LABEL), ...
	NNData_ST_MM.NOTES, NNData_ST_MM.getPropDefault(NNData_ST_MM.NOTES), ...
	NNData_ST_MM.WAITBAR, NNData_ST_MM.getPropDefault(NNData_ST_MM.WAITBAR), ...
	NNData_ST_MM.INPUT_TYPE, Callback('EL', nnd_0, 'PROP', 5), ...
	NNData_ST_MM.G, Callback('EL', nnd_0, 'PROP', 6), ...
	NNData_ST_MM.MEASURES, Callback('EL', nnd_0, 'PROP', 7), ...
	NNData_ST_MM.TARGET_NAME, Callback('EL', nnd_0, 'PROP', 8), ...
	NNData_ST_MM.GR, Callback('EL', nnd_0, 'PROP', 9), ...
	NNData_ST_MM.GR_NN, NoValue() ...
	);
	
prop_number = NNData_ST_MM.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNData_ST_MM.getPropTag(prop));
	switch NNData_ST_MM.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(nnd_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(nnd_1.get(prop), nnd_0.get(prop)) && ~isa(nnd_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(nnd_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
nnd_2 = NNData_ST_MM( ...
	NNData_ST_MM.ID, Callback('EL', nnd_1, 'PROP', 1), ...
	NNData_ST_MM.LABEL, NNData_ST_MM.getPropDefault(NNData_ST_MM.LABEL), ...
	NNData_ST_MM.NOTES, NNData_ST_MM.getPropDefault(NNData_ST_MM.NOTES), ...
	NNData_ST_MM.WAITBAR, NNData_ST_MM.getPropDefault(NNData_ST_MM.WAITBAR), ...
	NNData_ST_MM.INPUT_TYPE, Callback('EL', nnd_1, 'PROP', 5), ...
	NNData_ST_MM.G, Callback('EL', nnd_1, 'PROP', 6), ...
	NNData_ST_MM.MEASURES, Callback('EL', nnd_1, 'PROP', 7), ...
	NNData_ST_MM.TARGET_NAME, Callback('EL', nnd_1, 'PROP', 8), ...
	NNData_ST_MM.GR, Callback('EL', nnd_1, 'PROP', 9), ...
	NNData_ST_MM.GR_NN, NoValue() ...
	);
	
prop_number = NNData_ST_MM.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNData_ST_MM.getPropTag(prop));
	switch NNData_ST_MM.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(nnd_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(nnd_2.get(prop), nnd_0.get(prop)) && ~isa(nnd_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(nnd_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
nnd_3 = NNData_ST_MM( ...
	NNData_ST_MM.ID, Callback('EL', nnd_2, 'PROP', 1), ...
	NNData_ST_MM.LABEL, NNData_ST_MM.getPropDefault(NNData_ST_MM.LABEL), ...
	NNData_ST_MM.NOTES, NNData_ST_MM.getPropDefault(NNData_ST_MM.NOTES), ...
	NNData_ST_MM.WAITBAR, NNData_ST_MM.getPropDefault(NNData_ST_MM.WAITBAR), ...
	NNData_ST_MM.INPUT_TYPE, Callback('EL', nnd_2, 'PROP', 5), ...
	NNData_ST_MM.G, Callback('EL', nnd_2, 'PROP', 6), ...
	NNData_ST_MM.MEASURES, Callback('EL', nnd_2, 'PROP', 7), ...
	NNData_ST_MM.TARGET_NAME, Callback('EL', nnd_2, 'PROP', 8), ...
	NNData_ST_MM.GR, Callback('EL', nnd_2, 'PROP', 9), ...
	NNData_ST_MM.GR_NN, NoValue() ...
	);
	
prop_number = NNData_ST_MM.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNData_ST_MM.getPropTag(prop));
	switch NNData_ST_MM.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(nnd_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(nnd_3.get(prop), nnd_0.get(prop)) && ~isa(nnd_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(nnd_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:NNData_ST_MM')
nnd = NNData_ST_MM( ...
	NNData_ST_MM.ID, NNData_ST_MM.getPropDefault(NNData_ST_MM.ID), ...
	NNData_ST_MM.LABEL, NNData_ST_MM.getPropDefault(NNData_ST_MM.LABEL), ...
	NNData_ST_MM.NOTES, NNData_ST_MM.getPropDefault(NNData_ST_MM.NOTES), ...
	NNData_ST_MM.WAITBAR, NNData_ST_MM.getPropDefault(NNData_ST_MM.WAITBAR), ...
	NNData_ST_MM.INPUT_TYPE, NNData_ST_MM.getPropDefault(NNData_ST_MM.INPUT_TYPE), ...
	NNData_ST_MM.G, NNData_ST_MM.getPropDefault(NNData_ST_MM.G), ...
	NNData_ST_MM.MEASURES, NNData_ST_MM.getPropDefault(NNData_ST_MM.MEASURES), ...
	NNData_ST_MM.TARGET_NAME, NNData_ST_MM.getPropDefault(NNData_ST_MM.TARGET_NAME), ...
	NNData_ST_MM.GR, NNData_ST_MM.getPropDefault(NNData_ST_MM.GR), ...
	NNData_ST_MM.GR_NN, NNData_ST_MM.getPropDefault(NNData_ST_MM.GR_NN) ...
	);
warning('on', 'BRAPH2:NNData_ST_MM')

prop_number = NNData_ST_MM.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNData_ST_MM.getPropTag(prop));
	switch NNData_ST_MM.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(nnd.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(nnd.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(nnd.getPropSettings(prop))
				assert( ...
					nnd.checkFormat(nnd.getPropFormat(prop), nnd.get(prop)), ...
					[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
					['NNData_ST_MM.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					nnd.checkFormat(nnd.getPropFormat(prop), nnd.get(prop), nnd.getPropSettings(prop)), ...
					[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
					['NNData_ST_MM.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:NNData_ST_MM')
nnd = NNData_ST_MM( ...
	NNData_ST_MM.ID, NNData_ST_MM.getPropDefault(NNData_ST_MM.ID), ...
	NNData_ST_MM.LABEL, NNData_ST_MM.getPropDefault(NNData_ST_MM.LABEL), ...
	NNData_ST_MM.NOTES, NNData_ST_MM.getPropDefault(NNData_ST_MM.NOTES), ...
	NNData_ST_MM.WAITBAR, NNData_ST_MM.getPropDefault(NNData_ST_MM.WAITBAR), ...
	NNData_ST_MM.INPUT_TYPE, NNData_ST_MM.getPropDefault(NNData_ST_MM.INPUT_TYPE), ...
	NNData_ST_MM.G, NNData_ST_MM.getPropDefault(NNData_ST_MM.G), ...
	NNData_ST_MM.MEASURES, NNData_ST_MM.getPropDefault(NNData_ST_MM.MEASURES), ...
	NNData_ST_MM.TARGET_NAME, NNData_ST_MM.getPropDefault(NNData_ST_MM.TARGET_NAME), ...
	NNData_ST_MM.GR, NNData_ST_MM.getPropDefault(NNData_ST_MM.GR), ...
	NNData_ST_MM.GR_NN, NNData_ST_MM.getPropDefault(NNData_ST_MM.GR_NN) ...
	);
warning('on', 'BRAPH2:NNData_ST_MM')

for prop = 1:1:NNData_ST_MM.getPropNumber()
	TAG = upper(NNData_ST_MM.getPropTag(prop));
	switch NNData_ST_MM.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(nnd.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(nnd.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(nnd.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(nnd.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				nnd.checkFormat(nnd.getPropFormat(prop), nnd.getr(prop),nnd.getPropSettings(prop)), ...
				[BRAPH2.STR ':NNData_ST_MM:' BRAPH2.BUG_FUNC], ...
				['NNData_ST_MM.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: Example 1

example_NNCV_ST_Classification


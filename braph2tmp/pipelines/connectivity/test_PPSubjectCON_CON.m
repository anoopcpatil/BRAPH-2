%TEST_PPSUBJECTCON_CON

%% Test 1.1: Instantiation - empty

pl = PPSubjectCON_CON();

prop_number = PPSubjectCON_CON.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PPSubjectCON_CON.getPropTag(prop));
	assert( ...
		isa(pl.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
		['PPSubjectCON_CON.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in PPSubjectCON_CON.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(pl.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
		['PPSubjectCON_CON.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in PPSubjectCON_CON.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:PPSubjectCON_CON')
pl = PPSubjectCON_CON( ...
	PPSubjectCON_CON.ID, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ID), ...
	PPSubjectCON_CON.BKGCOLOR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.BKGCOLOR), ...
	PPSubjectCON_CON.EL, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.EL), ...
	PPSubjectCON_CON.PROP, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.PROP), ...
	PPSubjectCON_CON.TITLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.TITLE), ...
	PPSubjectCON_CON.ENABLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ENABLE), ...
	PPSubjectCON_CON.WAITBAR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.WAITBAR) ...
	);
warning('on', 'BRAPH2:PPSubjectCON_CON')

for prop = 1:1:PPSubjectCON_CON.getPropNumber()
	TAG = upper(PPSubjectCON_CON.getPropTag(prop));
	switch PPSubjectCON_CON.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(pl.getr(prop), PPSubjectCON_CON.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by PPSubjectCON_CON.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in PPSubjectCON_CON.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(pl.getr(TAG), PPSubjectCON_CON.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by PPSubjectCON_CON.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in PPSubjectCON_CON.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(pl.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['Being a result, PPSubjectCON_CON.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in PPSubjectCON_CON.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(pl.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['Being a result, PPSubjectCON_CON.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in PPSubjectCON_CON.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:PPSubjectCON_CON')
pl_0 = PPSubjectCON_CON( ...
	PPSubjectCON_CON.ID, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ID), ...
	PPSubjectCON_CON.BKGCOLOR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.BKGCOLOR), ...
	PPSubjectCON_CON.EL, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.EL), ...
	PPSubjectCON_CON.PROP, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.PROP), ...
	PPSubjectCON_CON.TITLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.TITLE), ...
	PPSubjectCON_CON.ENABLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ENABLE), ...
	PPSubjectCON_CON.WAITBAR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.WAITBAR) ...
	);
warning('on', 'BRAPH2:PPSubjectCON_CON')

pl_1 = PPSubjectCON_CON( ...
	PPSubjectCON_CON.ID, Callback('EL', pl_0, 'PROP', 1), ...
	PPSubjectCON_CON.BKGCOLOR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.BKGCOLOR), ...
	PPSubjectCON_CON.EL, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.EL), ...
	PPSubjectCON_CON.PROP, Callback('EL', pl_0, 'PROP', 4), ...
	PPSubjectCON_CON.TITLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.TITLE), ...
	PPSubjectCON_CON.ENABLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ENABLE), ...
	PPSubjectCON_CON.WAITBAR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.WAITBAR) ...
	);
	
prop_number = PPSubjectCON_CON.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PPSubjectCON_CON.getPropTag(prop));
	switch PPSubjectCON_CON.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(pl_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(pl_1.get(prop), pl_0.get(prop)) && ~isa(pl_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(pl_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
pl_2 = PPSubjectCON_CON( ...
	PPSubjectCON_CON.ID, Callback('EL', pl_1, 'PROP', 1), ...
	PPSubjectCON_CON.BKGCOLOR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.BKGCOLOR), ...
	PPSubjectCON_CON.EL, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.EL), ...
	PPSubjectCON_CON.PROP, Callback('EL', pl_1, 'PROP', 4), ...
	PPSubjectCON_CON.TITLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.TITLE), ...
	PPSubjectCON_CON.ENABLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ENABLE), ...
	PPSubjectCON_CON.WAITBAR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.WAITBAR) ...
	);
	
prop_number = PPSubjectCON_CON.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PPSubjectCON_CON.getPropTag(prop));
	switch PPSubjectCON_CON.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(pl_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(pl_2.get(prop), pl_0.get(prop)) && ~isa(pl_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(pl_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
pl_3 = PPSubjectCON_CON( ...
	PPSubjectCON_CON.ID, Callback('EL', pl_2, 'PROP', 1), ...
	PPSubjectCON_CON.BKGCOLOR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.BKGCOLOR), ...
	PPSubjectCON_CON.EL, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.EL), ...
	PPSubjectCON_CON.PROP, Callback('EL', pl_2, 'PROP', 4), ...
	PPSubjectCON_CON.TITLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.TITLE), ...
	PPSubjectCON_CON.ENABLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ENABLE), ...
	PPSubjectCON_CON.WAITBAR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.WAITBAR) ...
	);
	
prop_number = PPSubjectCON_CON.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PPSubjectCON_CON.getPropTag(prop));
	switch PPSubjectCON_CON.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(pl_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(pl_3.get(prop), pl_0.get(prop)) && ~isa(pl_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(pl_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:PPSubjectCON_CON')
pl = PPSubjectCON_CON( ...
	PPSubjectCON_CON.ID, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ID), ...
	PPSubjectCON_CON.BKGCOLOR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.BKGCOLOR), ...
	PPSubjectCON_CON.EL, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.EL), ...
	PPSubjectCON_CON.PROP, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.PROP), ...
	PPSubjectCON_CON.TITLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.TITLE), ...
	PPSubjectCON_CON.ENABLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ENABLE), ...
	PPSubjectCON_CON.WAITBAR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.WAITBAR) ...
	);
warning('on', 'BRAPH2:PPSubjectCON_CON')

prop_number = PPSubjectCON_CON.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PPSubjectCON_CON.getPropTag(prop));
	switch PPSubjectCON_CON.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(pl.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(pl.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(pl.getPropSettings(prop))
				assert( ...
					pl.checkFormat(pl.getPropFormat(prop), pl.get(prop)), ...
					[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
					['PPSubjectCON_CON.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					pl.checkFormat(pl.getPropFormat(prop), pl.get(prop), pl.getPropSettings(prop)), ...
					[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
					['PPSubjectCON_CON.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:PPSubjectCON_CON')
pl = PPSubjectCON_CON( ...
	PPSubjectCON_CON.ID, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ID), ...
	PPSubjectCON_CON.BKGCOLOR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.BKGCOLOR), ...
	PPSubjectCON_CON.EL, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.EL), ...
	PPSubjectCON_CON.PROP, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.PROP), ...
	PPSubjectCON_CON.TITLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.TITLE), ...
	PPSubjectCON_CON.ENABLE, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.ENABLE), ...
	PPSubjectCON_CON.WAITBAR, PPSubjectCON_CON.getPropDefault(PPSubjectCON_CON.WAITBAR) ...
	);
warning('on', 'BRAPH2:PPSubjectCON_CON')

for prop = 1:1:PPSubjectCON_CON.getPropNumber()
	TAG = upper(PPSubjectCON_CON.getPropTag(prop));
	switch PPSubjectCON_CON.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(pl.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(pl.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(pl.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(pl.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				pl.checkFormat(pl.getPropFormat(prop), pl.getr(prop),pl.getPropSettings(prop)), ...
				[BRAPH2.STR ':PPSubjectCON_CON:' BRAPH2.BUG_FUNC], ...
				['PPSubjectCON_CON.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end


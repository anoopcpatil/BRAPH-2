%TEST_GRAPHWD

%% Test 1.1: Instantiation - empty

g = GraphWD();

prop_number = GraphWD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GraphWD.getPropTag(prop));
	assert( ...
		isa(g.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
		['GraphWD.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in GraphWD.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(g.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
		['GraphWD.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in GraphWD.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:GraphWD')
g = GraphWD( ...
	GraphWD.ID, GraphWD.getPropDefault(GraphWD.ID), ...
	GraphWD.LABEL, GraphWD.getPropDefault(GraphWD.LABEL), ...
	GraphWD.NOTES, GraphWD.getPropDefault(GraphWD.NOTES), ...
	GraphWD.BRAINATLAS, GraphWD.getPropDefault(GraphWD.BRAINATLAS), ...
	GraphWD.A, GraphWD.getPropDefault(GraphWD.A), ...
	GraphWD.M_DICT, GraphWD.getPropDefault(GraphWD.M_DICT), ...
	GraphWD.B, GraphWD.getPropDefault(GraphWD.B), ...
	GraphWD.ATTEMPTSPEREDGE, GraphWD.getPropDefault(GraphWD.ATTEMPTSPEREDGE), ...
	GraphWD.NUMBEROFWEIGHTS, GraphWD.getPropDefault(GraphWD.NUMBEROFWEIGHTS) ...
	);
warning('on', 'BRAPH2:GraphWD')

for prop = 1:1:GraphWD.getPropNumber()
	TAG = upper(GraphWD.getPropTag(prop));
	switch GraphWD.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(g.getr(prop), GraphWD.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by GraphWD.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in GraphWD.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(g.getr(TAG), GraphWD.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by GraphWD.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in GraphWD.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(g.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['Being a result, GraphWD.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in GraphWD.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(g.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['Being a result, GraphWD.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in GraphWD.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:GraphWD')
g_0 = GraphWD( ...
	GraphWD.ID, GraphWD.getPropDefault(GraphWD.ID), ...
	GraphWD.LABEL, GraphWD.getPropDefault(GraphWD.LABEL), ...
	GraphWD.NOTES, GraphWD.getPropDefault(GraphWD.NOTES), ...
	GraphWD.BRAINATLAS, GraphWD.getPropDefault(GraphWD.BRAINATLAS), ...
	GraphWD.A, GraphWD.getPropDefault(GraphWD.A), ...
	GraphWD.M_DICT, GraphWD.getPropDefault(GraphWD.M_DICT), ...
	GraphWD.B, GraphWD.getPropDefault(GraphWD.B), ...
	GraphWD.ATTEMPTSPEREDGE, GraphWD.getPropDefault(GraphWD.ATTEMPTSPEREDGE), ...
	GraphWD.NUMBEROFWEIGHTS, GraphWD.getPropDefault(GraphWD.NUMBEROFWEIGHTS) ...
	);
warning('on', 'BRAPH2:GraphWD')

g_1 = GraphWD( ...
	GraphWD.ID, Callback('EL', g_0, 'PROP', 1), ...
	GraphWD.LABEL, GraphWD.getPropDefault(GraphWD.LABEL), ...
	GraphWD.NOTES, GraphWD.getPropDefault(GraphWD.NOTES), ...
	GraphWD.BRAINATLAS, Callback('EL', g_0, 'PROP', 4), ...
	GraphWD.A, NoValue(), ...
	GraphWD.M_DICT, NoValue(), ...
	GraphWD.B, Callback('EL', g_0, 'PROP', 7), ...
	GraphWD.ATTEMPTSPEREDGE, Callback('EL', g_0, 'PROP', 8), ...
	GraphWD.NUMBEROFWEIGHTS, Callback('EL', g_0, 'PROP', 9) ...
	);
	
prop_number = GraphWD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GraphWD.getPropTag(prop));
	switch GraphWD.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(g_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(g_1.get(prop), g_0.get(prop)) && ~isa(g_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(g_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
g_2 = GraphWD( ...
	GraphWD.ID, Callback('EL', g_1, 'PROP', 1), ...
	GraphWD.LABEL, GraphWD.getPropDefault(GraphWD.LABEL), ...
	GraphWD.NOTES, GraphWD.getPropDefault(GraphWD.NOTES), ...
	GraphWD.BRAINATLAS, Callback('EL', g_1, 'PROP', 4), ...
	GraphWD.A, NoValue(), ...
	GraphWD.M_DICT, NoValue(), ...
	GraphWD.B, Callback('EL', g_1, 'PROP', 7), ...
	GraphWD.ATTEMPTSPEREDGE, Callback('EL', g_1, 'PROP', 8), ...
	GraphWD.NUMBEROFWEIGHTS, Callback('EL', g_1, 'PROP', 9) ...
	);
	
prop_number = GraphWD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GraphWD.getPropTag(prop));
	switch GraphWD.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(g_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(g_2.get(prop), g_0.get(prop)) && ~isa(g_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(g_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
g_3 = GraphWD( ...
	GraphWD.ID, Callback('EL', g_2, 'PROP', 1), ...
	GraphWD.LABEL, GraphWD.getPropDefault(GraphWD.LABEL), ...
	GraphWD.NOTES, GraphWD.getPropDefault(GraphWD.NOTES), ...
	GraphWD.BRAINATLAS, Callback('EL', g_2, 'PROP', 4), ...
	GraphWD.A, NoValue(), ...
	GraphWD.M_DICT, NoValue(), ...
	GraphWD.B, Callback('EL', g_2, 'PROP', 7), ...
	GraphWD.ATTEMPTSPEREDGE, Callback('EL', g_2, 'PROP', 8), ...
	GraphWD.NUMBEROFWEIGHTS, Callback('EL', g_2, 'PROP', 9) ...
	);
	
prop_number = GraphWD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GraphWD.getPropTag(prop));
	switch GraphWD.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(g_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(g_3.get(prop), g_0.get(prop)) && ~isa(g_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(g_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:GraphWD')
g = GraphWD( ...
	GraphWD.ID, GraphWD.getPropDefault(GraphWD.ID), ...
	GraphWD.LABEL, GraphWD.getPropDefault(GraphWD.LABEL), ...
	GraphWD.NOTES, GraphWD.getPropDefault(GraphWD.NOTES), ...
	GraphWD.BRAINATLAS, GraphWD.getPropDefault(GraphWD.BRAINATLAS), ...
	GraphWD.A, GraphWD.getPropDefault(GraphWD.A), ...
	GraphWD.M_DICT, GraphWD.getPropDefault(GraphWD.M_DICT), ...
	GraphWD.B, GraphWD.getPropDefault(GraphWD.B), ...
	GraphWD.ATTEMPTSPEREDGE, GraphWD.getPropDefault(GraphWD.ATTEMPTSPEREDGE), ...
	GraphWD.NUMBEROFWEIGHTS, GraphWD.getPropDefault(GraphWD.NUMBEROFWEIGHTS) ...
	);
warning('on', 'BRAPH2:GraphWD')

prop_number = GraphWD.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GraphWD.getPropTag(prop));
	switch GraphWD.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(g.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(g.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(g.getPropSettings(prop))
				assert( ...
					g.checkFormat(g.getPropFormat(prop), g.get(prop)), ...
					[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
					['GraphWD.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					g.checkFormat(g.getPropFormat(prop), g.get(prop), g.getPropSettings(prop)), ...
					[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
					['GraphWD.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:GraphWD')
g = GraphWD( ...
	GraphWD.ID, GraphWD.getPropDefault(GraphWD.ID), ...
	GraphWD.LABEL, GraphWD.getPropDefault(GraphWD.LABEL), ...
	GraphWD.NOTES, GraphWD.getPropDefault(GraphWD.NOTES), ...
	GraphWD.BRAINATLAS, GraphWD.getPropDefault(GraphWD.BRAINATLAS), ...
	GraphWD.A, GraphWD.getPropDefault(GraphWD.A), ...
	GraphWD.M_DICT, GraphWD.getPropDefault(GraphWD.M_DICT), ...
	GraphWD.B, GraphWD.getPropDefault(GraphWD.B), ...
	GraphWD.ATTEMPTSPEREDGE, GraphWD.getPropDefault(GraphWD.ATTEMPTSPEREDGE), ...
	GraphWD.NUMBEROFWEIGHTS, GraphWD.getPropDefault(GraphWD.NUMBEROFWEIGHTS) ...
	);
warning('on', 'BRAPH2:GraphWD')

for prop = 1:1:GraphWD.getPropNumber()
	TAG = upper(GraphWD.getPropTag(prop));
	switch GraphWD.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(g.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(g.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(g.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(g.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				g.checkFormat(g.getPropFormat(prop), g.getr(prop),g.getPropSettings(prop)), ...
				[BRAPH2.STR ':GraphWD:' BRAPH2.BUG_FUNC], ...
				['GraphWD.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: Constructor

B = rand(randi(10));
g = GraphWD('B', B);

A = {standardize(semipositivize(dediagonalize(B)))};

assert(isequal(g.get('A'), A), ...
    [BRAPH2.STR ':GraphWD:' BRAPH2.BUG_ERR], ...
    'GraphWD is not constructing well.')


%TEST_SMALLWORLDNESS

%% Test 1.1: Instantiation - empty

m = SmallWorldness();

prop_number = SmallWorldness.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(SmallWorldness.getPropTag(prop));
	assert( ...
		isa(m.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
		['SmallWorldness.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in SmallWorldness.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(m.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
		['SmallWorldness.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in SmallWorldness.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:SmallWorldness')
m = SmallWorldness( ...
	SmallWorldness.ID, SmallWorldness.getPropDefault(SmallWorldness.ID), ...
	SmallWorldness.LABEL, SmallWorldness.getPropDefault(SmallWorldness.LABEL), ...
	SmallWorldness.NOTES, SmallWorldness.getPropDefault(SmallWorldness.NOTES), ...
	SmallWorldness.G, SmallWorldness.getPropDefault(SmallWorldness.G), ...
	SmallWorldness.M, SmallWorldness.getPropDefault(SmallWorldness.M), ...
	SmallWorldness.RULE, SmallWorldness.getPropDefault(SmallWorldness.RULE) ...
	);
warning('on', 'BRAPH2:SmallWorldness')

for prop = 1:1:SmallWorldness.getPropNumber()
	TAG = upper(SmallWorldness.getPropTag(prop));
	switch SmallWorldness.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(m.getr(prop), SmallWorldness.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by SmallWorldness.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in SmallWorldness.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(m.getr(TAG), SmallWorldness.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by SmallWorldness.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in SmallWorldness.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(m.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['Being a result, SmallWorldness.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in SmallWorldness.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(m.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['Being a result, SmallWorldness.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in SmallWorldness.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:SmallWorldness')
m_0 = SmallWorldness( ...
	SmallWorldness.ID, SmallWorldness.getPropDefault(SmallWorldness.ID), ...
	SmallWorldness.LABEL, SmallWorldness.getPropDefault(SmallWorldness.LABEL), ...
	SmallWorldness.NOTES, SmallWorldness.getPropDefault(SmallWorldness.NOTES), ...
	SmallWorldness.G, SmallWorldness.getPropDefault(SmallWorldness.G), ...
	SmallWorldness.M, SmallWorldness.getPropDefault(SmallWorldness.M), ...
	SmallWorldness.RULE, SmallWorldness.getPropDefault(SmallWorldness.RULE) ...
	);
warning('on', 'BRAPH2:SmallWorldness')

m_1 = SmallWorldness( ...
	SmallWorldness.ID, Callback('EL', m_0, 'PROP', 1), ...
	SmallWorldness.LABEL, SmallWorldness.getPropDefault(SmallWorldness.LABEL), ...
	SmallWorldness.NOTES, SmallWorldness.getPropDefault(SmallWorldness.NOTES), ...
	SmallWorldness.G, Callback('EL', m_0, 'PROP', 4), ...
	SmallWorldness.M, NoValue(), ...
	SmallWorldness.RULE, Callback('EL', m_0, 'PROP', 6) ...
	);
	
prop_number = SmallWorldness.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(SmallWorldness.getPropTag(prop));
	switch SmallWorldness.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_1.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_2 = SmallWorldness( ...
	SmallWorldness.ID, Callback('EL', m_1, 'PROP', 1), ...
	SmallWorldness.LABEL, SmallWorldness.getPropDefault(SmallWorldness.LABEL), ...
	SmallWorldness.NOTES, SmallWorldness.getPropDefault(SmallWorldness.NOTES), ...
	SmallWorldness.G, Callback('EL', m_1, 'PROP', 4), ...
	SmallWorldness.M, NoValue(), ...
	SmallWorldness.RULE, Callback('EL', m_1, 'PROP', 6) ...
	);
	
prop_number = SmallWorldness.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(SmallWorldness.getPropTag(prop));
	switch SmallWorldness.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_2.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_3 = SmallWorldness( ...
	SmallWorldness.ID, Callback('EL', m_2, 'PROP', 1), ...
	SmallWorldness.LABEL, SmallWorldness.getPropDefault(SmallWorldness.LABEL), ...
	SmallWorldness.NOTES, SmallWorldness.getPropDefault(SmallWorldness.NOTES), ...
	SmallWorldness.G, Callback('EL', m_2, 'PROP', 4), ...
	SmallWorldness.M, NoValue(), ...
	SmallWorldness.RULE, Callback('EL', m_2, 'PROP', 6) ...
	);
	
prop_number = SmallWorldness.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(SmallWorldness.getPropTag(prop));
	switch SmallWorldness.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_3.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:SmallWorldness')
m = SmallWorldness( ...
	SmallWorldness.ID, SmallWorldness.getPropDefault(SmallWorldness.ID), ...
	SmallWorldness.LABEL, SmallWorldness.getPropDefault(SmallWorldness.LABEL), ...
	SmallWorldness.NOTES, SmallWorldness.getPropDefault(SmallWorldness.NOTES), ...
	SmallWorldness.G, SmallWorldness.getPropDefault(SmallWorldness.G), ...
	SmallWorldness.M, SmallWorldness.getPropDefault(SmallWorldness.M), ...
	SmallWorldness.RULE, SmallWorldness.getPropDefault(SmallWorldness.RULE) ...
	);
warning('on', 'BRAPH2:SmallWorldness')

prop_number = SmallWorldness.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(SmallWorldness.getPropTag(prop));
	switch SmallWorldness.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(m.getPropSettings(prop))
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop)), ...
					[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
					['SmallWorldness.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop), m.getPropSettings(prop)), ...
					[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
					['SmallWorldness.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:SmallWorldness')
m = SmallWorldness( ...
	SmallWorldness.ID, SmallWorldness.getPropDefault(SmallWorldness.ID), ...
	SmallWorldness.LABEL, SmallWorldness.getPropDefault(SmallWorldness.LABEL), ...
	SmallWorldness.NOTES, SmallWorldness.getPropDefault(SmallWorldness.NOTES), ...
	SmallWorldness.G, SmallWorldness.getPropDefault(SmallWorldness.G), ...
	SmallWorldness.M, SmallWorldness.getPropDefault(SmallWorldness.M), ...
	SmallWorldness.RULE, SmallWorldness.getPropDefault(SmallWorldness.RULE) ...
	);
warning('on', 'BRAPH2:SmallWorldness')

for prop = 1:1:SmallWorldness.getPropNumber()
	TAG = upper(SmallWorldness.getPropTag(prop));
	switch SmallWorldness.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(m.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				m.checkFormat(m.getPropFormat(prop), m.getr(prop),m.getPropSettings(prop)), ...
				[BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_FUNC], ...
				['SmallWorldness.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: GraphBU

A = rand(20);

known_smallworldness = {1};

g = GraphBU('B', A);
smallworldness = SmallWorldness('G', g).get('M');

assert(isequal(smallworldness, known_smallworldness), ...
    [BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_ERR], ...
    'SmallWorldness is not being calculated correctly for GraphBU.')

%% Test 6: MultiplexWU

A11 = rand(20);

A22 = rand(20);
A = {A11 A22};

known_smallworldness = {
                       1
                       1
                       };

g = MultiplexWU('B', A);
smallworldness = SmallWorldness('G', g).get('M');
smallworldness = cellfun(@(s) round(s, 1), smallworldness, 'UniformOutput', false);

assert(isequal(smallworldness, known_smallworldness), ...
    [BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_ERR], ...
    'SmallWorldness is not being calculated correctly for MultiplexWU.')

%% Test 7: GraphBU subgraphs

A = rand(20);

known_smallworldness = {1};

g = GraphBU('B', A);
smallworldness = SmallWorldness('G', g, 'rule', 'subgraphs').get('M');

assert(isequal(smallworldness, known_smallworldness), ...
    [BRAPH2.STR ':SmallWorldness:' BRAPH2.BUG_ERR], ...
    'SmallWorldness is not being calculated correctly for GraphBU.')


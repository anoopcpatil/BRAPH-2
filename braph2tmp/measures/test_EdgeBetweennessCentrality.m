%TEST_EDGEBETWEENNESSCENTRALITY

%% Test 1.1: Instantiation - empty

m = EdgeBetweennessCentrality();

prop_number = EdgeBetweennessCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeBetweennessCentrality.getPropTag(prop));
	assert( ...
		isa(m.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
		['EdgeBetweennessCentrality.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in EdgeBetweennessCentrality.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(m.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
		['EdgeBetweennessCentrality.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in EdgeBetweennessCentrality.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:EdgeBetweennessCentrality')
m = EdgeBetweennessCentrality( ...
	EdgeBetweennessCentrality.ID, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.ID), ...
	EdgeBetweennessCentrality.LABEL, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.LABEL), ...
	EdgeBetweennessCentrality.NOTES, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.NOTES), ...
	EdgeBetweennessCentrality.G, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.G), ...
	EdgeBetweennessCentrality.M, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.M) ...
	);
warning('on', 'BRAPH2:EdgeBetweennessCentrality')

for prop = 1:1:EdgeBetweennessCentrality.getPropNumber()
	TAG = upper(EdgeBetweennessCentrality.getPropTag(prop));
	switch EdgeBetweennessCentrality.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(m.getr(prop), EdgeBetweennessCentrality.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by EdgeBetweennessCentrality.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in EdgeBetweennessCentrality.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(m.getr(TAG), EdgeBetweennessCentrality.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by EdgeBetweennessCentrality.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in EdgeBetweennessCentrality.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(m.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['Being a result, EdgeBetweennessCentrality.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in EdgeBetweennessCentrality.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(m.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['Being a result, EdgeBetweennessCentrality.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in EdgeBetweennessCentrality.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:EdgeBetweennessCentrality')
m_0 = EdgeBetweennessCentrality( ...
	EdgeBetweennessCentrality.ID, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.ID), ...
	EdgeBetweennessCentrality.LABEL, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.LABEL), ...
	EdgeBetweennessCentrality.NOTES, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.NOTES), ...
	EdgeBetweennessCentrality.G, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.G), ...
	EdgeBetweennessCentrality.M, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.M) ...
	);
warning('on', 'BRAPH2:EdgeBetweennessCentrality')

m_1 = EdgeBetweennessCentrality( ...
	EdgeBetweennessCentrality.ID, Callback('EL', m_0, 'PROP', 1), ...
	EdgeBetweennessCentrality.LABEL, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.LABEL), ...
	EdgeBetweennessCentrality.NOTES, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.NOTES), ...
	EdgeBetweennessCentrality.G, Callback('EL', m_0, 'PROP', 4), ...
	EdgeBetweennessCentrality.M, NoValue() ...
	);
	
prop_number = EdgeBetweennessCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeBetweennessCentrality.getPropTag(prop));
	switch EdgeBetweennessCentrality.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_1.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_2 = EdgeBetweennessCentrality( ...
	EdgeBetweennessCentrality.ID, Callback('EL', m_1, 'PROP', 1), ...
	EdgeBetweennessCentrality.LABEL, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.LABEL), ...
	EdgeBetweennessCentrality.NOTES, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.NOTES), ...
	EdgeBetweennessCentrality.G, Callback('EL', m_1, 'PROP', 4), ...
	EdgeBetweennessCentrality.M, NoValue() ...
	);
	
prop_number = EdgeBetweennessCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeBetweennessCentrality.getPropTag(prop));
	switch EdgeBetweennessCentrality.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_2.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_3 = EdgeBetweennessCentrality( ...
	EdgeBetweennessCentrality.ID, Callback('EL', m_2, 'PROP', 1), ...
	EdgeBetweennessCentrality.LABEL, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.LABEL), ...
	EdgeBetweennessCentrality.NOTES, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.NOTES), ...
	EdgeBetweennessCentrality.G, Callback('EL', m_2, 'PROP', 4), ...
	EdgeBetweennessCentrality.M, NoValue() ...
	);
	
prop_number = EdgeBetweennessCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeBetweennessCentrality.getPropTag(prop));
	switch EdgeBetweennessCentrality.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_3.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:EdgeBetweennessCentrality')
m = EdgeBetweennessCentrality( ...
	EdgeBetweennessCentrality.ID, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.ID), ...
	EdgeBetweennessCentrality.LABEL, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.LABEL), ...
	EdgeBetweennessCentrality.NOTES, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.NOTES), ...
	EdgeBetweennessCentrality.G, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.G), ...
	EdgeBetweennessCentrality.M, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.M) ...
	);
warning('on', 'BRAPH2:EdgeBetweennessCentrality')

prop_number = EdgeBetweennessCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeBetweennessCentrality.getPropTag(prop));
	switch EdgeBetweennessCentrality.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(m.getPropSettings(prop))
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop)), ...
					[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
					['EdgeBetweennessCentrality.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop), m.getPropSettings(prop)), ...
					[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
					['EdgeBetweennessCentrality.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:EdgeBetweennessCentrality')
m = EdgeBetweennessCentrality( ...
	EdgeBetweennessCentrality.ID, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.ID), ...
	EdgeBetweennessCentrality.LABEL, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.LABEL), ...
	EdgeBetweennessCentrality.NOTES, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.NOTES), ...
	EdgeBetweennessCentrality.G, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.G), ...
	EdgeBetweennessCentrality.M, EdgeBetweennessCentrality.getPropDefault(EdgeBetweennessCentrality.M) ...
	);
warning('on', 'BRAPH2:EdgeBetweennessCentrality')

for prop = 1:1:EdgeBetweennessCentrality.getPropNumber()
	TAG = upper(EdgeBetweennessCentrality.getPropTag(prop));
	switch EdgeBetweennessCentrality.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(m.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				m.checkFormat(m.getPropFormat(prop), m.getr(prop),m.getPropSettings(prop)), ...
				[BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_FUNC], ...
				['EdgeBetweennessCentrality.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: GraphBU

A = [
    0 1 1; 
    1 0 0; 
    1 0 0
    ];

known_edge_betweenness_centrality = {[
                                0 2 2;
                                2 0 0;
                                2 0 0
                                ]};
g = GraphBU('B', A);
edge_betweenness_centrality = EdgeBetweennessCentrality('G', g).get('M');

assert(isequal(edge_betweenness_centrality, known_edge_betweenness_centrality), ...
    [BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_ERR], ...
    'EdgeBetweennessCentrality is not being calculated correctly for GraphBU.')

%% Test 6: GraphBD

A = [
    0 1 0; 
    1 0 0; 
    1 0 0
    ];

known_edge_betweenness_centrality = {[
                                0 2 0;
                                1 0 0;
                                2 0 0
                                ]};
g = GraphBD('B', A);
edge_betweenness_centrality = EdgeBetweennessCentrality('G', g).get('M');

assert(isequal(edge_betweenness_centrality, known_edge_betweenness_centrality), ...
    [BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_ERR], ...
    'EdgeBetweennessCentrality is not being calculated correctly for GraphBD.')

%% Test 7: MultiplexBU

A11 = [
    0   1   1
    1   0   0
    1   0   0
    ];
A22 = [
    0   1   0
    1   0   1
    0   1   0
    ];
A = {A11 A22};

known_edge_betweenness_centrality = {[
                                      0 2 2;
                                      2 0 0;
                                      2 0 0
                                     ]
                                     [
                                      0 2 0;
                                      2 0 2;
                                      0 2 0
                                     ]};
g = MultiplexBU('B', A);
edge_betweenness_centrality = EdgeBetweennessCentrality('G', g).get('M');

assert(isequal(edge_betweenness_centrality, known_edge_betweenness_centrality), ...
    [BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_ERR], ...
    'EdgeBetweennessCentrality is not being calculated correctly for MultiplexGraphBU.')

%% Test 8: MultiplexWD

A11 = [
    0   1   0
    1   0   0
    4   0   0
    ];

A22 = [
    0   1   0
    1   0   0
    0   4   0
    ];
A = {A11 A22};
known_edge_betweenness_centrality = {[
                                      0 2 0;
                                      1 0 0;
                                      2 0 0
                                     ]
                                     [
                                      0 1 0;
                                      2 0 0;
                                      0 2 0
                                     ]};
g = MultiplexWD('B', A);
edge_betweenness_centrality = EdgeBetweennessCentrality('G', g).get('M');
assert(isequal(edge_betweenness_centrality, known_edge_betweenness_centrality), ...
    [BRAPH2.STR ':EdgeBetweennessCentrality:' BRAPH2.BUG_ERR], ...
    'EdgeBetweennessCentrality is not being calculated correctly for MultiplexGraphWD.')


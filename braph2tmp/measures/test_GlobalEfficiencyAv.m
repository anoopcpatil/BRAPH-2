%TEST_GLOBALEFFICIENCYAV

%% Test 1.1: Instantiation - empty

m = GlobalEfficiencyAv();

prop_number = GlobalEfficiencyAv.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GlobalEfficiencyAv.getPropTag(prop));
	assert( ...
		isa(m.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
		['GlobalEfficiencyAv.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in GlobalEfficiencyAv.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(m.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
		['GlobalEfficiencyAv.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in GlobalEfficiencyAv.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:GlobalEfficiencyAv')
m = GlobalEfficiencyAv( ...
	GlobalEfficiencyAv.ID, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.ID), ...
	GlobalEfficiencyAv.LABEL, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.LABEL), ...
	GlobalEfficiencyAv.NOTES, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.NOTES), ...
	GlobalEfficiencyAv.G, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.G), ...
	GlobalEfficiencyAv.M, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.M) ...
	);
warning('on', 'BRAPH2:GlobalEfficiencyAv')

for prop = 1:1:GlobalEfficiencyAv.getPropNumber()
	TAG = upper(GlobalEfficiencyAv.getPropTag(prop));
	switch GlobalEfficiencyAv.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(m.getr(prop), GlobalEfficiencyAv.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by GlobalEfficiencyAv.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in GlobalEfficiencyAv.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(m.getr(TAG), GlobalEfficiencyAv.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by GlobalEfficiencyAv.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in GlobalEfficiencyAv.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(m.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['Being a result, GlobalEfficiencyAv.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in GlobalEfficiencyAv.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(m.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['Being a result, GlobalEfficiencyAv.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in GlobalEfficiencyAv.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:GlobalEfficiencyAv')
m_0 = GlobalEfficiencyAv( ...
	GlobalEfficiencyAv.ID, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.ID), ...
	GlobalEfficiencyAv.LABEL, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.LABEL), ...
	GlobalEfficiencyAv.NOTES, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.NOTES), ...
	GlobalEfficiencyAv.G, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.G), ...
	GlobalEfficiencyAv.M, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.M) ...
	);
warning('on', 'BRAPH2:GlobalEfficiencyAv')

m_1 = GlobalEfficiencyAv( ...
	GlobalEfficiencyAv.ID, Callback('EL', m_0, 'PROP', 1), ...
	GlobalEfficiencyAv.LABEL, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.LABEL), ...
	GlobalEfficiencyAv.NOTES, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.NOTES), ...
	GlobalEfficiencyAv.G, Callback('EL', m_0, 'PROP', 4), ...
	GlobalEfficiencyAv.M, NoValue() ...
	);
	
prop_number = GlobalEfficiencyAv.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GlobalEfficiencyAv.getPropTag(prop));
	switch GlobalEfficiencyAv.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_1.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_2 = GlobalEfficiencyAv( ...
	GlobalEfficiencyAv.ID, Callback('EL', m_1, 'PROP', 1), ...
	GlobalEfficiencyAv.LABEL, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.LABEL), ...
	GlobalEfficiencyAv.NOTES, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.NOTES), ...
	GlobalEfficiencyAv.G, Callback('EL', m_1, 'PROP', 4), ...
	GlobalEfficiencyAv.M, NoValue() ...
	);
	
prop_number = GlobalEfficiencyAv.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GlobalEfficiencyAv.getPropTag(prop));
	switch GlobalEfficiencyAv.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_2.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_3 = GlobalEfficiencyAv( ...
	GlobalEfficiencyAv.ID, Callback('EL', m_2, 'PROP', 1), ...
	GlobalEfficiencyAv.LABEL, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.LABEL), ...
	GlobalEfficiencyAv.NOTES, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.NOTES), ...
	GlobalEfficiencyAv.G, Callback('EL', m_2, 'PROP', 4), ...
	GlobalEfficiencyAv.M, NoValue() ...
	);
	
prop_number = GlobalEfficiencyAv.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GlobalEfficiencyAv.getPropTag(prop));
	switch GlobalEfficiencyAv.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_3.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:GlobalEfficiencyAv')
m = GlobalEfficiencyAv( ...
	GlobalEfficiencyAv.ID, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.ID), ...
	GlobalEfficiencyAv.LABEL, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.LABEL), ...
	GlobalEfficiencyAv.NOTES, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.NOTES), ...
	GlobalEfficiencyAv.G, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.G), ...
	GlobalEfficiencyAv.M, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.M) ...
	);
warning('on', 'BRAPH2:GlobalEfficiencyAv')

prop_number = GlobalEfficiencyAv.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(GlobalEfficiencyAv.getPropTag(prop));
	switch GlobalEfficiencyAv.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(m.getPropSettings(prop))
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop)), ...
					[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
					['GlobalEfficiencyAv.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop), m.getPropSettings(prop)), ...
					[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
					['GlobalEfficiencyAv.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:GlobalEfficiencyAv')
m = GlobalEfficiencyAv( ...
	GlobalEfficiencyAv.ID, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.ID), ...
	GlobalEfficiencyAv.LABEL, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.LABEL), ...
	GlobalEfficiencyAv.NOTES, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.NOTES), ...
	GlobalEfficiencyAv.G, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.G), ...
	GlobalEfficiencyAv.M, GlobalEfficiencyAv.getPropDefault(GlobalEfficiencyAv.M) ...
	);
warning('on', 'BRAPH2:GlobalEfficiencyAv')

for prop = 1:1:GlobalEfficiencyAv.getPropNumber()
	TAG = upper(GlobalEfficiencyAv.getPropTag(prop));
	switch GlobalEfficiencyAv.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(m.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				m.checkFormat(m.getPropFormat(prop), m.getr(prop),m.getPropSettings(prop)), ...
				[BRAPH2.STR ':GlobalEfficiencyAv:' BRAPH2.BUG_FUNC], ...
				['GlobalEfficiencyAv.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: GraphWU

B = [
    0   .1  0   0   0
    .2  0   0   0   0
    0   0   0   .2  0
    0   0   .1  0   0
    0   0   0   0   0
    ];

known_global_efficiency = {mean([1/4 1/4 1/4 1/4 0])};

g = GraphBU('B', B);
global_efficiency_av = GlobalEfficiencyAv('G', g).get('M');

assert(isequal(global_efficiency_av, known_global_efficiency), ...
    [BRAPH2.STR ':GlobalEfficiency:' BRAPH2.BUG_ERR], ...
    'GlobalEfficiency is not being calculated correctly for GraphBU.')

%% Test 6: MultiplexWU

B11 = [
      0   .1  0   0   0
      .2  0   0   0   0
      0   0   0   .2  0
      0   0   .1  0   0
      0   0   0   0   0
      ];

B22 = [
      0   .1  0   0   0
      .2  0   0   0   0
      0   0   0   .2  0
      0   0   .1  0   0
      0   0   0   0   0
      ];
B = {B11  B22};

known_global_efficiency = {
                        mean([1/4 1/4 1/4 1/4 0])
                        mean([1/4 1/4 1/4 1/4 0])
                        };


g = MultiplexBU('B', B);
global_efficiency_av = GlobalEfficiencyAv('G', g).get('M');

assert(isequal(global_efficiency_av, known_global_efficiency), ...
    [BRAPH2.STR ':GlobalEfficiency:' BRAPH2.BUG_ERR], ...
    'GlobalEfficiency is not being calculated correctly for MultiplexBU.')


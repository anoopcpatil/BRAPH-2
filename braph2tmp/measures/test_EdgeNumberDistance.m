%TEST_EDGENUMBERDISTANCE

%% Test 1.1: Instantiation - empty

m = EdgeNumberDistance();

prop_number = EdgeNumberDistance.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeNumberDistance.getPropTag(prop));
	assert( ...
		isa(m.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
		['EdgeNumberDistance.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in EdgeNumberDistance.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(m.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
		['EdgeNumberDistance.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in EdgeNumberDistance.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:EdgeNumberDistance')
m = EdgeNumberDistance( ...
	EdgeNumberDistance.ID, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.ID), ...
	EdgeNumberDistance.LABEL, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.LABEL), ...
	EdgeNumberDistance.NOTES, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.NOTES), ...
	EdgeNumberDistance.G, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.G), ...
	EdgeNumberDistance.M, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.M) ...
	);
warning('on', 'BRAPH2:EdgeNumberDistance')

for prop = 1:1:EdgeNumberDistance.getPropNumber()
	TAG = upper(EdgeNumberDistance.getPropTag(prop));
	switch EdgeNumberDistance.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(m.getr(prop), EdgeNumberDistance.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by EdgeNumberDistance.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in EdgeNumberDistance.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(m.getr(TAG), EdgeNumberDistance.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by EdgeNumberDistance.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in EdgeNumberDistance.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(m.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['Being a result, EdgeNumberDistance.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in EdgeNumberDistance.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(m.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['Being a result, EdgeNumberDistance.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in EdgeNumberDistance.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:EdgeNumberDistance')
m_0 = EdgeNumberDistance( ...
	EdgeNumberDistance.ID, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.ID), ...
	EdgeNumberDistance.LABEL, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.LABEL), ...
	EdgeNumberDistance.NOTES, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.NOTES), ...
	EdgeNumberDistance.G, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.G), ...
	EdgeNumberDistance.M, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.M) ...
	);
warning('on', 'BRAPH2:EdgeNumberDistance')

m_1 = EdgeNumberDistance( ...
	EdgeNumberDistance.ID, Callback('EL', m_0, 'PROP', 1), ...
	EdgeNumberDistance.LABEL, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.LABEL), ...
	EdgeNumberDistance.NOTES, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.NOTES), ...
	EdgeNumberDistance.G, Callback('EL', m_0, 'PROP', 4), ...
	EdgeNumberDistance.M, NoValue() ...
	);
	
prop_number = EdgeNumberDistance.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeNumberDistance.getPropTag(prop));
	switch EdgeNumberDistance.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_1.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_2 = EdgeNumberDistance( ...
	EdgeNumberDistance.ID, Callback('EL', m_1, 'PROP', 1), ...
	EdgeNumberDistance.LABEL, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.LABEL), ...
	EdgeNumberDistance.NOTES, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.NOTES), ...
	EdgeNumberDistance.G, Callback('EL', m_1, 'PROP', 4), ...
	EdgeNumberDistance.M, NoValue() ...
	);
	
prop_number = EdgeNumberDistance.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeNumberDistance.getPropTag(prop));
	switch EdgeNumberDistance.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_2.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_3 = EdgeNumberDistance( ...
	EdgeNumberDistance.ID, Callback('EL', m_2, 'PROP', 1), ...
	EdgeNumberDistance.LABEL, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.LABEL), ...
	EdgeNumberDistance.NOTES, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.NOTES), ...
	EdgeNumberDistance.G, Callback('EL', m_2, 'PROP', 4), ...
	EdgeNumberDistance.M, NoValue() ...
	);
	
prop_number = EdgeNumberDistance.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeNumberDistance.getPropTag(prop));
	switch EdgeNumberDistance.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_3.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:EdgeNumberDistance')
m = EdgeNumberDistance( ...
	EdgeNumberDistance.ID, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.ID), ...
	EdgeNumberDistance.LABEL, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.LABEL), ...
	EdgeNumberDistance.NOTES, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.NOTES), ...
	EdgeNumberDistance.G, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.G), ...
	EdgeNumberDistance.M, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.M) ...
	);
warning('on', 'BRAPH2:EdgeNumberDistance')

prop_number = EdgeNumberDistance.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EdgeNumberDistance.getPropTag(prop));
	switch EdgeNumberDistance.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(m.getPropSettings(prop))
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop)), ...
					[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
					['EdgeNumberDistance.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop), m.getPropSettings(prop)), ...
					[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
					['EdgeNumberDistance.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:EdgeNumberDistance')
m = EdgeNumberDistance( ...
	EdgeNumberDistance.ID, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.ID), ...
	EdgeNumberDistance.LABEL, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.LABEL), ...
	EdgeNumberDistance.NOTES, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.NOTES), ...
	EdgeNumberDistance.G, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.G), ...
	EdgeNumberDistance.M, EdgeNumberDistance.getPropDefault(EdgeNumberDistance.M) ...
	);
warning('on', 'BRAPH2:EdgeNumberDistance')

for prop = 1:1:EdgeNumberDistance.getPropNumber()
	TAG = upper(EdgeNumberDistance.getPropTag(prop));
	switch EdgeNumberDistance.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(m.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				m.checkFormat(m.getPropFormat(prop), m.getr(prop),m.getPropSettings(prop)), ...
				[BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_FUNC], ...
				['EdgeNumberDistance.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: GraphWU

A = [
    0 .1 .2 .25 0;
    .125 0 0 0  0;
    .2 .5 0 .25 0;
    .125 10 0 0 0;
    0  0  0  0  0
    ];

known_value = {[
                0 2 1 1 0;
                2 0 1 1 0;
                1 1 0 2 0;
                1 1 2 0 0;
                0 0 0 0 0;
                ]};

g = GraphWU('B', A);
edge_number_distance = EdgeNumberDistance('G', g).get('M');

assert(isequal(edge_number_distance, known_value), ...
    [BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_ERR], ...
    'EdgeNumberDistance is not being calculated correctly for GraphWU.')

%% Test 6: MultiplexWD

A11 = [
        0 .1 .2 .25 0;
        .125 0 0 0  0;
        .2 .5 0 .25 0;
        .125 10 0 0 0;
        0  0  0  0  0
       ];
A22 = [
        0 .1 .2 .25 0;
        .125 0 0 0  0;
        .2 .5 0 .25 0;
        .125 10 0 0 0;
        0  0  0  0  0
       ];
A = {A11 A22};

known_value = {[
                0 2 1 1 0;
                1 0 2 2 0;
                1 1 0 1 0;
                1 1 2 0 0;
                0 0 0 0 0;
               ]
               [
                0 2 1 1 0;
                1 0 2 2 0;
                1 1 0 1 0;
                1 1 2 0 0;
                0 0 0 0 0;
               ]};

g = MultiplexWD('B', A);
edge_number_distance = EdgeNumberDistance('G', g).get('M');

assert(isequal(edge_number_distance, known_value), ...
    [BRAPH2.STR ':EdgeNumberDistance:' BRAPH2.BUG_ERR], ...
    'EdgeNumberDistance is not being calculated correctly for MultiplexGraphWD.')


%TEST_EIGENVECTORCENTRALITY

%% Test 1.1: Instantiation - empty

m = EigenVectorCentrality();

prop_number = EigenVectorCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EigenVectorCentrality.getPropTag(prop));
	assert( ...
		isa(m.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
		['EigenVectorCentrality.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in EigenVectorCentrality.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(m.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
		['EigenVectorCentrality.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in EigenVectorCentrality.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:EigenVectorCentrality')
m = EigenVectorCentrality( ...
	EigenVectorCentrality.ID, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.ID), ...
	EigenVectorCentrality.LABEL, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.LABEL), ...
	EigenVectorCentrality.NOTES, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.NOTES), ...
	EigenVectorCentrality.G, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.G), ...
	EigenVectorCentrality.M, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.M) ...
	);
warning('on', 'BRAPH2:EigenVectorCentrality')

for prop = 1:1:EigenVectorCentrality.getPropNumber()
	TAG = upper(EigenVectorCentrality.getPropTag(prop));
	switch EigenVectorCentrality.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(m.getr(prop), EigenVectorCentrality.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by EigenVectorCentrality.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in EigenVectorCentrality.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(m.getr(TAG), EigenVectorCentrality.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by EigenVectorCentrality.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in EigenVectorCentrality.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(m.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['Being a result, EigenVectorCentrality.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in EigenVectorCentrality.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(m.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['Being a result, EigenVectorCentrality.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in EigenVectorCentrality.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:EigenVectorCentrality')
m_0 = EigenVectorCentrality( ...
	EigenVectorCentrality.ID, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.ID), ...
	EigenVectorCentrality.LABEL, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.LABEL), ...
	EigenVectorCentrality.NOTES, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.NOTES), ...
	EigenVectorCentrality.G, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.G), ...
	EigenVectorCentrality.M, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.M) ...
	);
warning('on', 'BRAPH2:EigenVectorCentrality')

m_1 = EigenVectorCentrality( ...
	EigenVectorCentrality.ID, Callback('EL', m_0, 'PROP', 1), ...
	EigenVectorCentrality.LABEL, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.LABEL), ...
	EigenVectorCentrality.NOTES, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.NOTES), ...
	EigenVectorCentrality.G, Callback('EL', m_0, 'PROP', 4), ...
	EigenVectorCentrality.M, NoValue() ...
	);
	
prop_number = EigenVectorCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EigenVectorCentrality.getPropTag(prop));
	switch EigenVectorCentrality.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_1.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_2 = EigenVectorCentrality( ...
	EigenVectorCentrality.ID, Callback('EL', m_1, 'PROP', 1), ...
	EigenVectorCentrality.LABEL, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.LABEL), ...
	EigenVectorCentrality.NOTES, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.NOTES), ...
	EigenVectorCentrality.G, Callback('EL', m_1, 'PROP', 4), ...
	EigenVectorCentrality.M, NoValue() ...
	);
	
prop_number = EigenVectorCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EigenVectorCentrality.getPropTag(prop));
	switch EigenVectorCentrality.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_2.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_3 = EigenVectorCentrality( ...
	EigenVectorCentrality.ID, Callback('EL', m_2, 'PROP', 1), ...
	EigenVectorCentrality.LABEL, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.LABEL), ...
	EigenVectorCentrality.NOTES, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.NOTES), ...
	EigenVectorCentrality.G, Callback('EL', m_2, 'PROP', 4), ...
	EigenVectorCentrality.M, NoValue() ...
	);
	
prop_number = EigenVectorCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EigenVectorCentrality.getPropTag(prop));
	switch EigenVectorCentrality.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_3.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:EigenVectorCentrality')
m = EigenVectorCentrality( ...
	EigenVectorCentrality.ID, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.ID), ...
	EigenVectorCentrality.LABEL, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.LABEL), ...
	EigenVectorCentrality.NOTES, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.NOTES), ...
	EigenVectorCentrality.G, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.G), ...
	EigenVectorCentrality.M, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.M) ...
	);
warning('on', 'BRAPH2:EigenVectorCentrality')

prop_number = EigenVectorCentrality.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(EigenVectorCentrality.getPropTag(prop));
	switch EigenVectorCentrality.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(m.getPropSettings(prop))
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop)), ...
					[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
					['EigenVectorCentrality.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop), m.getPropSettings(prop)), ...
					[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
					['EigenVectorCentrality.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:EigenVectorCentrality')
m = EigenVectorCentrality( ...
	EigenVectorCentrality.ID, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.ID), ...
	EigenVectorCentrality.LABEL, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.LABEL), ...
	EigenVectorCentrality.NOTES, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.NOTES), ...
	EigenVectorCentrality.G, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.G), ...
	EigenVectorCentrality.M, EigenVectorCentrality.getPropDefault(EigenVectorCentrality.M) ...
	);
warning('on', 'BRAPH2:EigenVectorCentrality')

for prop = 1:1:EigenVectorCentrality.getPropNumber()
	TAG = upper(EigenVectorCentrality.getPropTag(prop));
	switch EigenVectorCentrality.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(m.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				m.checkFormat(m.getPropFormat(prop), m.getr(prop),m.getPropSettings(prop)), ...
				[BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_FUNC], ...
				['EigenVectorCentrality.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: GraphBU

A = [
    0 1 1 0 
    1 0 0 1 
    1 0 0 1
    0 1 1 0
    ];

known_eigenvector_centrality = {[1/2 1/2 1/2 1/2]'};

g = GraphBU('B', A);
eigenvector_centrality = EigenVectorCentrality('G', g).get('M');

assert(isequal(round(cell2mat(eigenvector_centrality), 6), round(cell2mat(known_eigenvector_centrality), 6)), ...
    [BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_ERR], ...
    'EigenVectorCentrality is not being calculated correctly for GraphBU.')

%% Test 6: GraphWU

A = [
    0   .5  .5  0
    .5  0   0   .5 
    .5  0   0   .5
    0   .5  .5  0
    ];

known_eigenvector_centrality = {[1/2 1/2 1/2 1/2]'};

g = GraphWU('B', A);
eigenvector_centrality = EigenVectorCentrality('G', g).get('M');

assert(isequal(round(cell2mat(eigenvector_centrality), 6), round(cell2mat(known_eigenvector_centrality), 6)), ...
    [BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_ERR], ...
    'EigenVectorCentrality is not being calculated correctly for GraphWU.')

%% Test 7: MultiplexBU

A11 = [
    0 1 1 0
    1 0 0 1
    1 0 0 1
    0 1 1 0
    ];

A22 = [
    0 1 1 0
    1 0 0 1
    1 0 0 1
    0 1 1 0
    ];
A = {A11 A22};

known_eigenvector_centrality = {
    [1/2 1/2 1/2 1/2]'
    [1/2 1/2 1/2 1/2]'
    };

g = MultiplexBU('B', A);
eigenvector_centrality = EigenVectorCentrality('G', g).get('M');

assert(isequal(round(cell2mat(eigenvector_centrality), 6), round(cell2mat(known_eigenvector_centrality), 6)), ...
    [BRAPH2.STR ':EigenVectorCentrality:' BRAPH2.BUG_ERR], ...
    'EigenVectorCentrality is not being calculated correctly for MultiplexBU.')


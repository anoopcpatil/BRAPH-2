%TEST_TRANSITIVITY

%% Test 1.1: Instantiation - empty

m = Transitivity();

prop_number = Transitivity.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(Transitivity.getPropTag(prop));
	assert( ...
		isa(m.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
		['Transitivity.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in Transitivity.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(m.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
		['Transitivity.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in Transitivity.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:Transitivity')
m = Transitivity( ...
	Transitivity.ID, Transitivity.getPropDefault(Transitivity.ID), ...
	Transitivity.LABEL, Transitivity.getPropDefault(Transitivity.LABEL), ...
	Transitivity.NOTES, Transitivity.getPropDefault(Transitivity.NOTES), ...
	Transitivity.G, Transitivity.getPropDefault(Transitivity.G), ...
	Transitivity.M, Transitivity.getPropDefault(Transitivity.M), ...
	Transitivity.RULE, Transitivity.getPropDefault(Transitivity.RULE) ...
	);
warning('on', 'BRAPH2:Transitivity')

for prop = 1:1:Transitivity.getPropNumber()
	TAG = upper(Transitivity.getPropTag(prop));
	switch Transitivity.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(m.getr(prop), Transitivity.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by Transitivity.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in Transitivity.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(m.getr(TAG), Transitivity.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by Transitivity.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in Transitivity.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(m.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Being a result, Transitivity.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in Transitivity.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(m.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Being a result, Transitivity.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in Transitivity.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:Transitivity')
m_0 = Transitivity( ...
	Transitivity.ID, Transitivity.getPropDefault(Transitivity.ID), ...
	Transitivity.LABEL, Transitivity.getPropDefault(Transitivity.LABEL), ...
	Transitivity.NOTES, Transitivity.getPropDefault(Transitivity.NOTES), ...
	Transitivity.G, Transitivity.getPropDefault(Transitivity.G), ...
	Transitivity.M, Transitivity.getPropDefault(Transitivity.M), ...
	Transitivity.RULE, Transitivity.getPropDefault(Transitivity.RULE) ...
	);
warning('on', 'BRAPH2:Transitivity')

m_1 = Transitivity( ...
	Transitivity.ID, Callback('EL', m_0, 'PROP', 1), ...
	Transitivity.LABEL, Transitivity.getPropDefault(Transitivity.LABEL), ...
	Transitivity.NOTES, Transitivity.getPropDefault(Transitivity.NOTES), ...
	Transitivity.G, Callback('EL', m_0, 'PROP', 4), ...
	Transitivity.M, NoValue(), ...
	Transitivity.RULE, Callback('EL', m_0, 'PROP', 6) ...
	);
	
prop_number = Transitivity.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(Transitivity.getPropTag(prop));
	switch Transitivity.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_1.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_2 = Transitivity( ...
	Transitivity.ID, Callback('EL', m_1, 'PROP', 1), ...
	Transitivity.LABEL, Transitivity.getPropDefault(Transitivity.LABEL), ...
	Transitivity.NOTES, Transitivity.getPropDefault(Transitivity.NOTES), ...
	Transitivity.G, Callback('EL', m_1, 'PROP', 4), ...
	Transitivity.M, NoValue(), ...
	Transitivity.RULE, Callback('EL', m_1, 'PROP', 6) ...
	);
	
prop_number = Transitivity.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(Transitivity.getPropTag(prop));
	switch Transitivity.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_2.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_3 = Transitivity( ...
	Transitivity.ID, Callback('EL', m_2, 'PROP', 1), ...
	Transitivity.LABEL, Transitivity.getPropDefault(Transitivity.LABEL), ...
	Transitivity.NOTES, Transitivity.getPropDefault(Transitivity.NOTES), ...
	Transitivity.G, Callback('EL', m_2, 'PROP', 4), ...
	Transitivity.M, NoValue(), ...
	Transitivity.RULE, Callback('EL', m_2, 'PROP', 6) ...
	);
	
prop_number = Transitivity.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(Transitivity.getPropTag(prop));
	switch Transitivity.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_3.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:Transitivity')
m = Transitivity( ...
	Transitivity.ID, Transitivity.getPropDefault(Transitivity.ID), ...
	Transitivity.LABEL, Transitivity.getPropDefault(Transitivity.LABEL), ...
	Transitivity.NOTES, Transitivity.getPropDefault(Transitivity.NOTES), ...
	Transitivity.G, Transitivity.getPropDefault(Transitivity.G), ...
	Transitivity.M, Transitivity.getPropDefault(Transitivity.M), ...
	Transitivity.RULE, Transitivity.getPropDefault(Transitivity.RULE) ...
	);
warning('on', 'BRAPH2:Transitivity')

prop_number = Transitivity.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(Transitivity.getPropTag(prop));
	switch Transitivity.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(m.getPropSettings(prop))
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop)), ...
					[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
					['Transitivity.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop), m.getPropSettings(prop)), ...
					[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
					['Transitivity.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:Transitivity')
m = Transitivity( ...
	Transitivity.ID, Transitivity.getPropDefault(Transitivity.ID), ...
	Transitivity.LABEL, Transitivity.getPropDefault(Transitivity.LABEL), ...
	Transitivity.NOTES, Transitivity.getPropDefault(Transitivity.NOTES), ...
	Transitivity.G, Transitivity.getPropDefault(Transitivity.G), ...
	Transitivity.M, Transitivity.getPropDefault(Transitivity.M), ...
	Transitivity.RULE, Transitivity.getPropDefault(Transitivity.RULE) ...
	);
warning('on', 'BRAPH2:Transitivity')

for prop = 1:1:Transitivity.getPropNumber()
	TAG = upper(Transitivity.getPropTag(prop));
	switch Transitivity.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(m.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				m.checkFormat(m.getPropFormat(prop), m.getr(prop),m.getPropSettings(prop)), ...
				[BRAPH2.STR ':Transitivity:' BRAPH2.BUG_FUNC], ...
				['Transitivity.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: GraphBU

B = [
    0 1 1 1; 
    1 0 1 0; 
    1 1 0 1; 
    1 0 1 0
    ];

known_transitivity = {3/4};

g = GraphBU('B', B);
transitivity = Transitivity('G', g);

assert(isequal(transitivity.get('M'), known_transitivity), ...
    [BRAPH2.STR ':Transitivity:' BRAPH2.BUG_ERR], ...
    'Transitivity is not being calculated correctly for GraphBU.')

%% Test 6: MultiplexBU

A11 = [
      0 1 1 1;
      1 0 1 0;
      1 1 0 1;
      1 0 1 0
      ];
A22 = [
      0 1 1 1;
      1 0 1 0;
      1 1 0 1;
      1 0 1 0
      ];
A = {A11 A22};

known_transitivity = {
                 3/4
                 3/4
                 };      

g = MultiplexBU('B', A);
transitivity = Transitivity('G', g);

assert(isequal(transitivity.get('M'), known_transitivity), ...
    [BRAPH2.STR ':Transitivity:' BRAPH2.BUG_ERR], ...
    'Transitivity is not being calculated correctly for MultiplexBU.')


%TEST_COMMUNITYSTRUCTURE

%% Test 1.1: Instantiation - empty

m = CommunityStructure();

prop_number = CommunityStructure.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CommunityStructure.getPropTag(prop));
	assert( ...
		isa(m.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
		['CommunityStructure.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in CommunityStructure.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(m.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
		['CommunityStructure.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in CommunityStructure.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:CommunityStructure')
m = CommunityStructure( ...
	CommunityStructure.ID, CommunityStructure.getPropDefault(CommunityStructure.ID), ...
	CommunityStructure.LABEL, CommunityStructure.getPropDefault(CommunityStructure.LABEL), ...
	CommunityStructure.NOTES, CommunityStructure.getPropDefault(CommunityStructure.NOTES), ...
	CommunityStructure.G, CommunityStructure.getPropDefault(CommunityStructure.G), ...
	CommunityStructure.M, CommunityStructure.getPropDefault(CommunityStructure.M), ...
	CommunityStructure.RULE, CommunityStructure.getPropDefault(CommunityStructure.RULE), ...
	CommunityStructure.GAMMA, CommunityStructure.getPropDefault(CommunityStructure.GAMMA), ...
	CommunityStructure.M0, CommunityStructure.getPropDefault(CommunityStructure.M0), ...
	CommunityStructure.LOUVAIN_OM, CommunityStructure.getPropDefault(CommunityStructure.LOUVAIN_OM), ...
	CommunityStructure.OM_TYPE, CommunityStructure.getPropDefault(CommunityStructure.OM_TYPE), ...
	CommunityStructure.QUALITY_FUNCTION, CommunityStructure.getPropDefault(CommunityStructure.QUALITY_FUNCTION) ...
	);
warning('on', 'BRAPH2:CommunityStructure')

for prop = 1:1:CommunityStructure.getPropNumber()
	TAG = upper(CommunityStructure.getPropTag(prop));
	switch CommunityStructure.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(m.getr(prop), CommunityStructure.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by CommunityStructure.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in CommunityStructure.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(m.getr(TAG), CommunityStructure.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by CommunityStructure.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in CommunityStructure.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(m.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['Being a result, CommunityStructure.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in CommunityStructure.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(m.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['Being a result, CommunityStructure.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in CommunityStructure.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:CommunityStructure')
m_0 = CommunityStructure( ...
	CommunityStructure.ID, CommunityStructure.getPropDefault(CommunityStructure.ID), ...
	CommunityStructure.LABEL, CommunityStructure.getPropDefault(CommunityStructure.LABEL), ...
	CommunityStructure.NOTES, CommunityStructure.getPropDefault(CommunityStructure.NOTES), ...
	CommunityStructure.G, CommunityStructure.getPropDefault(CommunityStructure.G), ...
	CommunityStructure.M, CommunityStructure.getPropDefault(CommunityStructure.M), ...
	CommunityStructure.RULE, CommunityStructure.getPropDefault(CommunityStructure.RULE), ...
	CommunityStructure.GAMMA, CommunityStructure.getPropDefault(CommunityStructure.GAMMA), ...
	CommunityStructure.M0, CommunityStructure.getPropDefault(CommunityStructure.M0), ...
	CommunityStructure.LOUVAIN_OM, CommunityStructure.getPropDefault(CommunityStructure.LOUVAIN_OM), ...
	CommunityStructure.OM_TYPE, CommunityStructure.getPropDefault(CommunityStructure.OM_TYPE), ...
	CommunityStructure.QUALITY_FUNCTION, CommunityStructure.getPropDefault(CommunityStructure.QUALITY_FUNCTION) ...
	);
warning('on', 'BRAPH2:CommunityStructure')

m_1 = CommunityStructure( ...
	CommunityStructure.ID, Callback('EL', m_0, 'PROP', 1), ...
	CommunityStructure.LABEL, CommunityStructure.getPropDefault(CommunityStructure.LABEL), ...
	CommunityStructure.NOTES, CommunityStructure.getPropDefault(CommunityStructure.NOTES), ...
	CommunityStructure.G, Callback('EL', m_0, 'PROP', 4), ...
	CommunityStructure.M, NoValue(), ...
	CommunityStructure.RULE, Callback('EL', m_0, 'PROP', 6), ...
	CommunityStructure.GAMMA, Callback('EL', m_0, 'PROP', 7), ...
	CommunityStructure.M0, Callback('EL', m_0, 'PROP', 8), ...
	CommunityStructure.LOUVAIN_OM, Callback('EL', m_0, 'PROP', 9), ...
	CommunityStructure.OM_TYPE, Callback('EL', m_0, 'PROP', 10), ...
	CommunityStructure.QUALITY_FUNCTION, CommunityStructure.getPropDefault(CommunityStructure.QUALITY_FUNCTION) ...
	);
	
prop_number = CommunityStructure.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CommunityStructure.getPropTag(prop));
	switch CommunityStructure.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_1.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_2 = CommunityStructure( ...
	CommunityStructure.ID, Callback('EL', m_1, 'PROP', 1), ...
	CommunityStructure.LABEL, CommunityStructure.getPropDefault(CommunityStructure.LABEL), ...
	CommunityStructure.NOTES, CommunityStructure.getPropDefault(CommunityStructure.NOTES), ...
	CommunityStructure.G, Callback('EL', m_1, 'PROP', 4), ...
	CommunityStructure.M, NoValue(), ...
	CommunityStructure.RULE, Callback('EL', m_1, 'PROP', 6), ...
	CommunityStructure.GAMMA, Callback('EL', m_1, 'PROP', 7), ...
	CommunityStructure.M0, Callback('EL', m_1, 'PROP', 8), ...
	CommunityStructure.LOUVAIN_OM, Callback('EL', m_1, 'PROP', 9), ...
	CommunityStructure.OM_TYPE, Callback('EL', m_1, 'PROP', 10), ...
	CommunityStructure.QUALITY_FUNCTION, CommunityStructure.getPropDefault(CommunityStructure.QUALITY_FUNCTION) ...
	);
	
prop_number = CommunityStructure.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CommunityStructure.getPropTag(prop));
	switch CommunityStructure.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_2.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
m_3 = CommunityStructure( ...
	CommunityStructure.ID, Callback('EL', m_2, 'PROP', 1), ...
	CommunityStructure.LABEL, CommunityStructure.getPropDefault(CommunityStructure.LABEL), ...
	CommunityStructure.NOTES, CommunityStructure.getPropDefault(CommunityStructure.NOTES), ...
	CommunityStructure.G, Callback('EL', m_2, 'PROP', 4), ...
	CommunityStructure.M, NoValue(), ...
	CommunityStructure.RULE, Callback('EL', m_2, 'PROP', 6), ...
	CommunityStructure.GAMMA, Callback('EL', m_2, 'PROP', 7), ...
	CommunityStructure.M0, Callback('EL', m_2, 'PROP', 8), ...
	CommunityStructure.LOUVAIN_OM, Callback('EL', m_2, 'PROP', 9), ...
	CommunityStructure.OM_TYPE, Callback('EL', m_2, 'PROP', 10), ...
	CommunityStructure.QUALITY_FUNCTION, CommunityStructure.getPropDefault(CommunityStructure.QUALITY_FUNCTION) ...
	);
	
prop_number = CommunityStructure.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CommunityStructure.getPropTag(prop));
	switch CommunityStructure.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(m_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(m_3.get(prop), m_0.get(prop)) && ~isa(m_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(m_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:CommunityStructure')
m = CommunityStructure( ...
	CommunityStructure.ID, CommunityStructure.getPropDefault(CommunityStructure.ID), ...
	CommunityStructure.LABEL, CommunityStructure.getPropDefault(CommunityStructure.LABEL), ...
	CommunityStructure.NOTES, CommunityStructure.getPropDefault(CommunityStructure.NOTES), ...
	CommunityStructure.G, CommunityStructure.getPropDefault(CommunityStructure.G), ...
	CommunityStructure.M, CommunityStructure.getPropDefault(CommunityStructure.M), ...
	CommunityStructure.RULE, CommunityStructure.getPropDefault(CommunityStructure.RULE), ...
	CommunityStructure.GAMMA, CommunityStructure.getPropDefault(CommunityStructure.GAMMA), ...
	CommunityStructure.M0, CommunityStructure.getPropDefault(CommunityStructure.M0), ...
	CommunityStructure.LOUVAIN_OM, CommunityStructure.getPropDefault(CommunityStructure.LOUVAIN_OM), ...
	CommunityStructure.OM_TYPE, CommunityStructure.getPropDefault(CommunityStructure.OM_TYPE), ...
	CommunityStructure.QUALITY_FUNCTION, CommunityStructure.getPropDefault(CommunityStructure.QUALITY_FUNCTION) ...
	);
warning('on', 'BRAPH2:CommunityStructure')

prop_number = CommunityStructure.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(CommunityStructure.getPropTag(prop));
	switch CommunityStructure.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(m.getPropSettings(prop))
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop)), ...
					[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
					['CommunityStructure.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					m.checkFormat(m.getPropFormat(prop), m.get(prop), m.getPropSettings(prop)), ...
					[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
					['CommunityStructure.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:CommunityStructure')
m = CommunityStructure( ...
	CommunityStructure.ID, CommunityStructure.getPropDefault(CommunityStructure.ID), ...
	CommunityStructure.LABEL, CommunityStructure.getPropDefault(CommunityStructure.LABEL), ...
	CommunityStructure.NOTES, CommunityStructure.getPropDefault(CommunityStructure.NOTES), ...
	CommunityStructure.G, CommunityStructure.getPropDefault(CommunityStructure.G), ...
	CommunityStructure.M, CommunityStructure.getPropDefault(CommunityStructure.M), ...
	CommunityStructure.RULE, CommunityStructure.getPropDefault(CommunityStructure.RULE), ...
	CommunityStructure.GAMMA, CommunityStructure.getPropDefault(CommunityStructure.GAMMA), ...
	CommunityStructure.M0, CommunityStructure.getPropDefault(CommunityStructure.M0), ...
	CommunityStructure.LOUVAIN_OM, CommunityStructure.getPropDefault(CommunityStructure.LOUVAIN_OM), ...
	CommunityStructure.OM_TYPE, CommunityStructure.getPropDefault(CommunityStructure.OM_TYPE), ...
	CommunityStructure.QUALITY_FUNCTION, CommunityStructure.getPropDefault(CommunityStructure.QUALITY_FUNCTION) ...
	);
warning('on', 'BRAPH2:CommunityStructure')

for prop = 1:1:CommunityStructure.getPropNumber()
	TAG = upper(CommunityStructure.getPropTag(prop));
	switch CommunityStructure.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(m.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(m.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(m.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				m.checkFormat(m.getPropFormat(prop), m.getr(prop),m.getPropSettings(prop)), ...
				[BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_FUNC], ...
				['CommunityStructure.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: GraphBU

B = [1 0 1 1
     0 0 0 0
     1 0 1 0
     1 0 0 1];
 
 g = GraphBU('B', B);
 cs = CommunityStructure('G', g).get('M');
 assert(iscell(cs) && size(cs{1}, 1) == 4,  ... 
     [BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_ERR], ...
    'CommunityStructure is not being calculated correctly for GraphBU.');

%% Test 6: GraphBU fixed input

B = [1 0 1 1
     0 0 0 0
     1 0 1 0
     1 0 0 1];
 
 g = GraphBU('B', B);
 cs = CommunityStructure('G', g, 'rule', 'fixed', 'M0', [1 0 1 1]).get('M');
 assert(iscell(cs) && size(cs{1}, 1) == 4,  ... 
     [BRAPH2.STR ':CommunityStructure:' BRAPH2.BUG_ERR], ...
    'CommunityStructure is not being calculated correctly for GraphBU.');


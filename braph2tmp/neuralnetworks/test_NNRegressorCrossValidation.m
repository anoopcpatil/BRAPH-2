%TEST_NNREGRESSORCROSSVALIDATION

%% Test 1.1: Instantiation - empty

nncv = NNRegressorCrossValidation();

prop_number = NNRegressorCrossValidation.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNRegressorCrossValidation.getPropTag(prop));
	assert( ...
		isa(nncv.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
		['NNRegressorCrossValidation.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in NNRegressorCrossValidation.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(nncv.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
		['NNRegressorCrossValidation.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in NNRegressorCrossValidation.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:NNRegressorCrossValidation')
nncv = NNRegressorCrossValidation( ...
	NNRegressorCrossValidation.KFOLD, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.KFOLD), ...
	NNRegressorCrossValidation.REPETITION, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.REPETITION), ...
	NNRegressorCrossValidation.GR, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.GR), ...
	NNRegressorCrossValidation.FEATURE_MASK, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.FEATURE_MASK), ...
	NNRegressorCrossValidation.SPLIT_KFOLD, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.SPLIT_KFOLD), ...
	NNRegressorCrossValidation.NNDS_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NNDS_DICT), ...
	NNRegressorCrossValidation.NN_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NN_DICT), ...
	NNRegressorCrossValidation.NNE_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NNE_DICT), ...
	NNRegressorCrossValidation.GR_PREDICTION, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.GR_PREDICTION), ...
	NNRegressorCrossValidation.RMSE, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.RMSE), ...
	NNRegressorCrossValidation.CONTRIBUTION_MAP, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.CONTRIBUTION_MAP) ...
	);
warning('on', 'BRAPH2:NNRegressorCrossValidation')

for prop = 1:1:NNRegressorCrossValidation.getPropNumber()
	TAG = upper(NNRegressorCrossValidation.getPropTag(prop));
	switch NNRegressorCrossValidation.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(nncv.getr(prop), NNRegressorCrossValidation.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by NNRegressorCrossValidation.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in NNRegressorCrossValidation.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(nncv.getr(TAG), NNRegressorCrossValidation.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by NNRegressorCrossValidation.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in NNRegressorCrossValidation.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(nncv.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['Being a result, NNRegressorCrossValidation.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in NNRegressorCrossValidation.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(nncv.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['Being a result, NNRegressorCrossValidation.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in NNRegressorCrossValidation.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:NNRegressorCrossValidation')
nncv_0 = NNRegressorCrossValidation( ...
	NNRegressorCrossValidation.KFOLD, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.KFOLD), ...
	NNRegressorCrossValidation.REPETITION, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.REPETITION), ...
	NNRegressorCrossValidation.GR, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.GR), ...
	NNRegressorCrossValidation.FEATURE_MASK, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.FEATURE_MASK), ...
	NNRegressorCrossValidation.SPLIT_KFOLD, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.SPLIT_KFOLD), ...
	NNRegressorCrossValidation.NNDS_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NNDS_DICT), ...
	NNRegressorCrossValidation.NN_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NN_DICT), ...
	NNRegressorCrossValidation.NNE_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NNE_DICT), ...
	NNRegressorCrossValidation.GR_PREDICTION, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.GR_PREDICTION), ...
	NNRegressorCrossValidation.RMSE, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.RMSE), ...
	NNRegressorCrossValidation.CONTRIBUTION_MAP, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.CONTRIBUTION_MAP) ...
	);
warning('on', 'BRAPH2:NNRegressorCrossValidation')

nncv_1 = NNRegressorCrossValidation( ...
	NNRegressorCrossValidation.KFOLD, Callback('EL', nncv_0, 'PROP', 1), ...
	NNRegressorCrossValidation.REPETITION, Callback('EL', nncv_0, 'PROP', 2), ...
	NNRegressorCrossValidation.GR, Callback('EL', nncv_0, 'PROP', 3), ...
	NNRegressorCrossValidation.FEATURE_MASK, Callback('EL', nncv_0, 'PROP', 4), ...
	NNRegressorCrossValidation.SPLIT_KFOLD, NoValue(), ...
	NNRegressorCrossValidation.NNDS_DICT, NoValue(), ...
	NNRegressorCrossValidation.NN_DICT, NoValue(), ...
	NNRegressorCrossValidation.NNE_DICT, NoValue(), ...
	NNRegressorCrossValidation.GR_PREDICTION, NoValue(), ...
	NNRegressorCrossValidation.RMSE, NoValue(), ...
	NNRegressorCrossValidation.CONTRIBUTION_MAP, NoValue() ...
	);
	
prop_number = NNRegressorCrossValidation.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNRegressorCrossValidation.getPropTag(prop));
	switch NNRegressorCrossValidation.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(nncv_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(nncv_1.get(prop), nncv_0.get(prop)) && ~isa(nncv_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(nncv_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
nncv_2 = NNRegressorCrossValidation( ...
	NNRegressorCrossValidation.KFOLD, Callback('EL', nncv_1, 'PROP', 1), ...
	NNRegressorCrossValidation.REPETITION, Callback('EL', nncv_1, 'PROP', 2), ...
	NNRegressorCrossValidation.GR, Callback('EL', nncv_1, 'PROP', 3), ...
	NNRegressorCrossValidation.FEATURE_MASK, Callback('EL', nncv_1, 'PROP', 4), ...
	NNRegressorCrossValidation.SPLIT_KFOLD, NoValue(), ...
	NNRegressorCrossValidation.NNDS_DICT, NoValue(), ...
	NNRegressorCrossValidation.NN_DICT, NoValue(), ...
	NNRegressorCrossValidation.NNE_DICT, NoValue(), ...
	NNRegressorCrossValidation.GR_PREDICTION, NoValue(), ...
	NNRegressorCrossValidation.RMSE, NoValue(), ...
	NNRegressorCrossValidation.CONTRIBUTION_MAP, NoValue() ...
	);
	
prop_number = NNRegressorCrossValidation.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNRegressorCrossValidation.getPropTag(prop));
	switch NNRegressorCrossValidation.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(nncv_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(nncv_2.get(prop), nncv_0.get(prop)) && ~isa(nncv_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(nncv_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
nncv_3 = NNRegressorCrossValidation( ...
	NNRegressorCrossValidation.KFOLD, Callback('EL', nncv_2, 'PROP', 1), ...
	NNRegressorCrossValidation.REPETITION, Callback('EL', nncv_2, 'PROP', 2), ...
	NNRegressorCrossValidation.GR, Callback('EL', nncv_2, 'PROP', 3), ...
	NNRegressorCrossValidation.FEATURE_MASK, Callback('EL', nncv_2, 'PROP', 4), ...
	NNRegressorCrossValidation.SPLIT_KFOLD, NoValue(), ...
	NNRegressorCrossValidation.NNDS_DICT, NoValue(), ...
	NNRegressorCrossValidation.NN_DICT, NoValue(), ...
	NNRegressorCrossValidation.NNE_DICT, NoValue(), ...
	NNRegressorCrossValidation.GR_PREDICTION, NoValue(), ...
	NNRegressorCrossValidation.RMSE, NoValue(), ...
	NNRegressorCrossValidation.CONTRIBUTION_MAP, NoValue() ...
	);
	
prop_number = NNRegressorCrossValidation.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNRegressorCrossValidation.getPropTag(prop));
	switch NNRegressorCrossValidation.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(nncv_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(nncv_3.get(prop), nncv_0.get(prop)) && ~isa(nncv_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(nncv_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:NNRegressorCrossValidation')
nncv = NNRegressorCrossValidation( ...
	NNRegressorCrossValidation.KFOLD, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.KFOLD), ...
	NNRegressorCrossValidation.REPETITION, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.REPETITION), ...
	NNRegressorCrossValidation.GR, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.GR), ...
	NNRegressorCrossValidation.FEATURE_MASK, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.FEATURE_MASK), ...
	NNRegressorCrossValidation.SPLIT_KFOLD, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.SPLIT_KFOLD), ...
	NNRegressorCrossValidation.NNDS_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NNDS_DICT), ...
	NNRegressorCrossValidation.NN_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NN_DICT), ...
	NNRegressorCrossValidation.NNE_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NNE_DICT), ...
	NNRegressorCrossValidation.GR_PREDICTION, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.GR_PREDICTION), ...
	NNRegressorCrossValidation.RMSE, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.RMSE), ...
	NNRegressorCrossValidation.CONTRIBUTION_MAP, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.CONTRIBUTION_MAP) ...
	);
warning('on', 'BRAPH2:NNRegressorCrossValidation')

prop_number = NNRegressorCrossValidation.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(NNRegressorCrossValidation.getPropTag(prop));
	switch NNRegressorCrossValidation.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(nncv.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(nncv.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(nncv.getPropSettings(prop))
				assert( ...
					nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop)), ...
					[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
					['NNRegressorCrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop), nncv.getPropSettings(prop)), ...
					[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
					['NNRegressorCrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:NNRegressorCrossValidation')
nncv = NNRegressorCrossValidation( ...
	NNRegressorCrossValidation.KFOLD, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.KFOLD), ...
	NNRegressorCrossValidation.REPETITION, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.REPETITION), ...
	NNRegressorCrossValidation.GR, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.GR), ...
	NNRegressorCrossValidation.FEATURE_MASK, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.FEATURE_MASK), ...
	NNRegressorCrossValidation.SPLIT_KFOLD, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.SPLIT_KFOLD), ...
	NNRegressorCrossValidation.NNDS_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NNDS_DICT), ...
	NNRegressorCrossValidation.NN_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NN_DICT), ...
	NNRegressorCrossValidation.NNE_DICT, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.NNE_DICT), ...
	NNRegressorCrossValidation.GR_PREDICTION, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.GR_PREDICTION), ...
	NNRegressorCrossValidation.RMSE, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.RMSE), ...
	NNRegressorCrossValidation.CONTRIBUTION_MAP, NNRegressorCrossValidation.getPropDefault(NNRegressorCrossValidation.CONTRIBUTION_MAP) ...
	);
warning('on', 'BRAPH2:NNRegressorCrossValidation')

for prop = 1:1:NNRegressorCrossValidation.getPropNumber()
	TAG = upper(NNRegressorCrossValidation.getPropTag(prop));
	switch NNRegressorCrossValidation.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(nncv.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(nncv.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(nncv.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(nncv.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				nncv.checkFormat(nncv.getPropFormat(prop), nncv.getr(prop),nncv.getPropSettings(prop)), ...
				[BRAPH2.STR ':NNRegressorCrossValidation:' BRAPH2.BUG_FUNC], ...
				['NNRegressorCrossValidation.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end


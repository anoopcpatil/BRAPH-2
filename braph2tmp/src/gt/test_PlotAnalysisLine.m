%TEST_PLOTANALYSISLINE

%% Test 1.1: Instantiation - empty

pr = PlotAnalysisLine();

prop_number = PlotAnalysisLine.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PlotAnalysisLine.getPropTag(prop));
	assert( ...
		isa(pr.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
		['PlotAnalysisLine.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in PlotAnalysisLine.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(pr.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
		['PlotAnalysisLine.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in PlotAnalysisLine.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:PlotAnalysisLine')
pr = PlotAnalysisLine( ...
	PlotAnalysisLine.ID, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.ID), ...
	PlotAnalysisLine.BKGCOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.BKGCOLOR), ...
	PlotAnalysisLine.PLOTTITLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTTITLE), ...
	PlotAnalysisLine.GRAPH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.GRAPH), ...
	PlotAnalysisLine.X, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.X), ...
	PlotAnalysisLine.XLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.XLABEL), ...
	PlotAnalysisLine.YLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.YLABEL), ...
	PlotAnalysisLine.PLOTVALUE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTVALUE), ...
	PlotAnalysisLine.MEASURE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MEASURE), ...
	PlotAnalysisLine.CIL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIL), ...
	PlotAnalysisLine.CIU, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIU), ...
	PlotAnalysisLine.NODE1, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE1), ...
	PlotAnalysisLine.NODE2, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE2), ...
	PlotAnalysisLine.COLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.COLOR), ...
	PlotAnalysisLine.LINESTYLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINESTYLE), ...
	PlotAnalysisLine.LINEWIDTH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINEWIDTH), ...
	PlotAnalysisLine.MARKER, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKER), ...
	PlotAnalysisLine.MARKERSIZE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERSIZE), ...
	PlotAnalysisLine.MARKEREDGECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKEREDGECOLOR), ...
	PlotAnalysisLine.MARKERFACECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERFACECOLOR) ...
	);
warning('on', 'BRAPH2:PlotAnalysisLine')

for prop = 1:1:PlotAnalysisLine.getPropNumber()
	TAG = upper(PlotAnalysisLine.getPropTag(prop));
	switch PlotAnalysisLine.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(pr.getr(prop), PlotAnalysisLine.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by PlotAnalysisLine.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in PlotAnalysisLine.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(pr.getr(TAG), PlotAnalysisLine.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by PlotAnalysisLine.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in PlotAnalysisLine.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(pr.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['Being a result, PlotAnalysisLine.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in PlotAnalysisLine.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(pr.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['Being a result, PlotAnalysisLine.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in PlotAnalysisLine.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:PlotAnalysisLine')
pr_0 = PlotAnalysisLine( ...
	PlotAnalysisLine.ID, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.ID), ...
	PlotAnalysisLine.BKGCOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.BKGCOLOR), ...
	PlotAnalysisLine.PLOTTITLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTTITLE), ...
	PlotAnalysisLine.GRAPH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.GRAPH), ...
	PlotAnalysisLine.X, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.X), ...
	PlotAnalysisLine.XLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.XLABEL), ...
	PlotAnalysisLine.YLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.YLABEL), ...
	PlotAnalysisLine.PLOTVALUE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTVALUE), ...
	PlotAnalysisLine.MEASURE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MEASURE), ...
	PlotAnalysisLine.CIL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIL), ...
	PlotAnalysisLine.CIU, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIU), ...
	PlotAnalysisLine.NODE1, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE1), ...
	PlotAnalysisLine.NODE2, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE2), ...
	PlotAnalysisLine.COLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.COLOR), ...
	PlotAnalysisLine.LINESTYLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINESTYLE), ...
	PlotAnalysisLine.LINEWIDTH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINEWIDTH), ...
	PlotAnalysisLine.MARKER, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKER), ...
	PlotAnalysisLine.MARKERSIZE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERSIZE), ...
	PlotAnalysisLine.MARKEREDGECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKEREDGECOLOR), ...
	PlotAnalysisLine.MARKERFACECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERFACECOLOR) ...
	);
warning('on', 'BRAPH2:PlotAnalysisLine')

pr_1 = PlotAnalysisLine( ...
	PlotAnalysisLine.ID, Callback('EL', pr_0, 'PROP', 1), ...
	PlotAnalysisLine.BKGCOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.BKGCOLOR), ...
	PlotAnalysisLine.PLOTTITLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTTITLE), ...
	PlotAnalysisLine.GRAPH, Callback('EL', pr_0, 'PROP', 4), ...
	PlotAnalysisLine.X, Callback('EL', pr_0, 'PROP', 5), ...
	PlotAnalysisLine.XLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.XLABEL), ...
	PlotAnalysisLine.YLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.YLABEL), ...
	PlotAnalysisLine.PLOTVALUE, Callback('EL', pr_0, 'PROP', 8), ...
	PlotAnalysisLine.MEASURE, Callback('EL', pr_0, 'PROP', 9), ...
	PlotAnalysisLine.CIL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIL), ...
	PlotAnalysisLine.CIU, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIU), ...
	PlotAnalysisLine.NODE1, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE1), ...
	PlotAnalysisLine.NODE2, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE2), ...
	PlotAnalysisLine.COLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.COLOR), ...
	PlotAnalysisLine.LINESTYLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINESTYLE), ...
	PlotAnalysisLine.LINEWIDTH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINEWIDTH), ...
	PlotAnalysisLine.MARKER, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKER), ...
	PlotAnalysisLine.MARKERSIZE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERSIZE), ...
	PlotAnalysisLine.MARKEREDGECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKEREDGECOLOR), ...
	PlotAnalysisLine.MARKERFACECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERFACECOLOR) ...
	);
	
prop_number = PlotAnalysisLine.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PlotAnalysisLine.getPropTag(prop));
	switch PlotAnalysisLine.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(pr_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(pr_1.get(prop), pr_0.get(prop)) && ~isa(pr_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(pr_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
pr_2 = PlotAnalysisLine( ...
	PlotAnalysisLine.ID, Callback('EL', pr_1, 'PROP', 1), ...
	PlotAnalysisLine.BKGCOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.BKGCOLOR), ...
	PlotAnalysisLine.PLOTTITLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTTITLE), ...
	PlotAnalysisLine.GRAPH, Callback('EL', pr_1, 'PROP', 4), ...
	PlotAnalysisLine.X, Callback('EL', pr_1, 'PROP', 5), ...
	PlotAnalysisLine.XLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.XLABEL), ...
	PlotAnalysisLine.YLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.YLABEL), ...
	PlotAnalysisLine.PLOTVALUE, Callback('EL', pr_1, 'PROP', 8), ...
	PlotAnalysisLine.MEASURE, Callback('EL', pr_1, 'PROP', 9), ...
	PlotAnalysisLine.CIL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIL), ...
	PlotAnalysisLine.CIU, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIU), ...
	PlotAnalysisLine.NODE1, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE1), ...
	PlotAnalysisLine.NODE2, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE2), ...
	PlotAnalysisLine.COLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.COLOR), ...
	PlotAnalysisLine.LINESTYLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINESTYLE), ...
	PlotAnalysisLine.LINEWIDTH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINEWIDTH), ...
	PlotAnalysisLine.MARKER, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKER), ...
	PlotAnalysisLine.MARKERSIZE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERSIZE), ...
	PlotAnalysisLine.MARKEREDGECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKEREDGECOLOR), ...
	PlotAnalysisLine.MARKERFACECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERFACECOLOR) ...
	);
	
prop_number = PlotAnalysisLine.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PlotAnalysisLine.getPropTag(prop));
	switch PlotAnalysisLine.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(pr_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(pr_2.get(prop), pr_0.get(prop)) && ~isa(pr_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(pr_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
pr_3 = PlotAnalysisLine( ...
	PlotAnalysisLine.ID, Callback('EL', pr_2, 'PROP', 1), ...
	PlotAnalysisLine.BKGCOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.BKGCOLOR), ...
	PlotAnalysisLine.PLOTTITLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTTITLE), ...
	PlotAnalysisLine.GRAPH, Callback('EL', pr_2, 'PROP', 4), ...
	PlotAnalysisLine.X, Callback('EL', pr_2, 'PROP', 5), ...
	PlotAnalysisLine.XLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.XLABEL), ...
	PlotAnalysisLine.YLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.YLABEL), ...
	PlotAnalysisLine.PLOTVALUE, Callback('EL', pr_2, 'PROP', 8), ...
	PlotAnalysisLine.MEASURE, Callback('EL', pr_2, 'PROP', 9), ...
	PlotAnalysisLine.CIL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIL), ...
	PlotAnalysisLine.CIU, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIU), ...
	PlotAnalysisLine.NODE1, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE1), ...
	PlotAnalysisLine.NODE2, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE2), ...
	PlotAnalysisLine.COLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.COLOR), ...
	PlotAnalysisLine.LINESTYLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINESTYLE), ...
	PlotAnalysisLine.LINEWIDTH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINEWIDTH), ...
	PlotAnalysisLine.MARKER, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKER), ...
	PlotAnalysisLine.MARKERSIZE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERSIZE), ...
	PlotAnalysisLine.MARKEREDGECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKEREDGECOLOR), ...
	PlotAnalysisLine.MARKERFACECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERFACECOLOR) ...
	);
	
prop_number = PlotAnalysisLine.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PlotAnalysisLine.getPropTag(prop));
	switch PlotAnalysisLine.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(pr_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(pr_3.get(prop), pr_0.get(prop)) && ~isa(pr_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(pr_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:PlotAnalysisLine')
pr = PlotAnalysisLine( ...
	PlotAnalysisLine.ID, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.ID), ...
	PlotAnalysisLine.BKGCOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.BKGCOLOR), ...
	PlotAnalysisLine.PLOTTITLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTTITLE), ...
	PlotAnalysisLine.GRAPH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.GRAPH), ...
	PlotAnalysisLine.X, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.X), ...
	PlotAnalysisLine.XLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.XLABEL), ...
	PlotAnalysisLine.YLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.YLABEL), ...
	PlotAnalysisLine.PLOTVALUE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTVALUE), ...
	PlotAnalysisLine.MEASURE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MEASURE), ...
	PlotAnalysisLine.CIL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIL), ...
	PlotAnalysisLine.CIU, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIU), ...
	PlotAnalysisLine.NODE1, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE1), ...
	PlotAnalysisLine.NODE2, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE2), ...
	PlotAnalysisLine.COLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.COLOR), ...
	PlotAnalysisLine.LINESTYLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINESTYLE), ...
	PlotAnalysisLine.LINEWIDTH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINEWIDTH), ...
	PlotAnalysisLine.MARKER, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKER), ...
	PlotAnalysisLine.MARKERSIZE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERSIZE), ...
	PlotAnalysisLine.MARKEREDGECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKEREDGECOLOR), ...
	PlotAnalysisLine.MARKERFACECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERFACECOLOR) ...
	);
warning('on', 'BRAPH2:PlotAnalysisLine')

prop_number = PlotAnalysisLine.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(PlotAnalysisLine.getPropTag(prop));
	switch PlotAnalysisLine.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(pr.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(pr.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(pr.getPropSettings(prop))
				assert( ...
					pr.checkFormat(pr.getPropFormat(prop), pr.get(prop)), ...
					[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
					['PlotAnalysisLine.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					pr.checkFormat(pr.getPropFormat(prop), pr.get(prop), pr.getPropSettings(prop)), ...
					[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
					['PlotAnalysisLine.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:PlotAnalysisLine')
pr = PlotAnalysisLine( ...
	PlotAnalysisLine.ID, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.ID), ...
	PlotAnalysisLine.BKGCOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.BKGCOLOR), ...
	PlotAnalysisLine.PLOTTITLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTTITLE), ...
	PlotAnalysisLine.GRAPH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.GRAPH), ...
	PlotAnalysisLine.X, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.X), ...
	PlotAnalysisLine.XLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.XLABEL), ...
	PlotAnalysisLine.YLABEL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.YLABEL), ...
	PlotAnalysisLine.PLOTVALUE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.PLOTVALUE), ...
	PlotAnalysisLine.MEASURE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MEASURE), ...
	PlotAnalysisLine.CIL, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIL), ...
	PlotAnalysisLine.CIU, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.CIU), ...
	PlotAnalysisLine.NODE1, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE1), ...
	PlotAnalysisLine.NODE2, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.NODE2), ...
	PlotAnalysisLine.COLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.COLOR), ...
	PlotAnalysisLine.LINESTYLE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINESTYLE), ...
	PlotAnalysisLine.LINEWIDTH, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.LINEWIDTH), ...
	PlotAnalysisLine.MARKER, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKER), ...
	PlotAnalysisLine.MARKERSIZE, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERSIZE), ...
	PlotAnalysisLine.MARKEREDGECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKEREDGECOLOR), ...
	PlotAnalysisLine.MARKERFACECOLOR, PlotAnalysisLine.getPropDefault(PlotAnalysisLine.MARKERFACECOLOR) ...
	);
warning('on', 'BRAPH2:PlotAnalysisLine')

for prop = 1:1:PlotAnalysisLine.getPropNumber()
	TAG = upper(PlotAnalysisLine.getPropTag(prop));
	switch PlotAnalysisLine.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(pr.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(pr.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(pr.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(pr.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				pr.checkFormat(pr.getPropFormat(prop), pr.getr(prop),pr.getPropSettings(prop)), ...
				[BRAPH2.STR ':PlotAnalysisLine:' BRAPH2.BUG_FUNC], ...
				['PlotAnalysisLine.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end


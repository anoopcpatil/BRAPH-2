%TEST_ETA

%% Test 1.1: Instantiation - empty

et = ETA();

prop_number = ETA.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETA.getPropTag(prop));
	assert( ...
		isa(et.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
		['ETA.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in ETA.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(et.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
		['ETA.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in ETA.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:ETA')
et = ETA( ...
	ETA.PROP_EMPTY_M, ETA.getPropDefault(ETA.PROP_EMPTY_M), ...
	ETA.PROP_STRING_M, ETA.getPropDefault(ETA.PROP_STRING_M), ...
	ETA.PROP_LOGICAL_M, ETA.getPropDefault(ETA.PROP_LOGICAL_M), ...
	ETA.PROP_OPTION_M, ETA.getPropDefault(ETA.PROP_OPTION_M), ...
	ETA.PROP_CLASS_M, ETA.getPropDefault(ETA.PROP_CLASS_M), ...
	ETA.PROP_CLASSLIST_M, ETA.getPropDefault(ETA.PROP_CLASSLIST_M), ...
	ETA.PROP_ITEM_M, ETA.getPropDefault(ETA.PROP_ITEM_M), ...
	ETA.PROP_ITEMLIST_M, ETA.getPropDefault(ETA.PROP_ITEMLIST_M), ...
	ETA.PROP_IDICT_M, ETA.getPropDefault(ETA.PROP_IDICT_M), ...
	ETA.PROP_SCALAR_M, ETA.getPropDefault(ETA.PROP_SCALAR_M), ...
	ETA.PROP_RVECTOR_M, ETA.getPropDefault(ETA.PROP_RVECTOR_M), ...
	ETA.PROP_CVECTOR_M, ETA.getPropDefault(ETA.PROP_CVECTOR_M), ...
	ETA.PROP_MATRIX_M, ETA.getPropDefault(ETA.PROP_MATRIX_M), ...
	ETA.PROP_SMATRIX_M, ETA.getPropDefault(ETA.PROP_SMATRIX_M), ...
	ETA.PROP_CELL_M, ETA.getPropDefault(ETA.PROP_CELL_M), ...
	ETA.PROP_NET_M, ETA.getPropDefault(ETA.PROP_NET_M), ...
	ETA.PROP_EMPTY_P, ETA.getPropDefault(ETA.PROP_EMPTY_P), ...
	ETA.PROP_STRING_P, ETA.getPropDefault(ETA.PROP_STRING_P), ...
	ETA.PROP_LOGICAL_P, ETA.getPropDefault(ETA.PROP_LOGICAL_P), ...
	ETA.PROP_OPTION_P, ETA.getPropDefault(ETA.PROP_OPTION_P), ...
	ETA.PROP_CLASS_P, ETA.getPropDefault(ETA.PROP_CLASS_P), ...
	ETA.PROP_CLASSLIST_P, ETA.getPropDefault(ETA.PROP_CLASSLIST_P), ...
	ETA.PROP_ITEM_P, ETA.getPropDefault(ETA.PROP_ITEM_P), ...
	ETA.PROP_ITEMLIST_P, ETA.getPropDefault(ETA.PROP_ITEMLIST_P), ...
	ETA.PROP_IDICT_P, ETA.getPropDefault(ETA.PROP_IDICT_P), ...
	ETA.PROP_SCALAR_P, ETA.getPropDefault(ETA.PROP_SCALAR_P), ...
	ETA.PROP_RVECTOR_P, ETA.getPropDefault(ETA.PROP_RVECTOR_P), ...
	ETA.PROP_CVECTOR_P, ETA.getPropDefault(ETA.PROP_CVECTOR_P), ...
	ETA.PROP_MATRIX_P, ETA.getPropDefault(ETA.PROP_MATRIX_P), ...
	ETA.PROP_SMATRIX_P, ETA.getPropDefault(ETA.PROP_SMATRIX_P), ...
	ETA.PROP_CELL_P, ETA.getPropDefault(ETA.PROP_CELL_P), ...
	ETA.PROP_NET_P, ETA.getPropDefault(ETA.PROP_NET_P), ...
	ETA.PROP_EMPTY_D, ETA.getPropDefault(ETA.PROP_EMPTY_D), ...
	ETA.PROP_STRING_D, ETA.getPropDefault(ETA.PROP_STRING_D), ...
	ETA.PROP_LOGICAL_D, ETA.getPropDefault(ETA.PROP_LOGICAL_D), ...
	ETA.PROP_OPTION_D, ETA.getPropDefault(ETA.PROP_OPTION_D), ...
	ETA.PROP_CLASS_D, ETA.getPropDefault(ETA.PROP_CLASS_D), ...
	ETA.PROP_CLASSLIST_D, ETA.getPropDefault(ETA.PROP_CLASSLIST_D), ...
	ETA.PROP_ITEM_D, ETA.getPropDefault(ETA.PROP_ITEM_D), ...
	ETA.PROP_ITEMLIST_D, ETA.getPropDefault(ETA.PROP_ITEMLIST_D), ...
	ETA.PROP_IDICT_D, ETA.getPropDefault(ETA.PROP_IDICT_D), ...
	ETA.PROP_SCALAR_D, ETA.getPropDefault(ETA.PROP_SCALAR_D), ...
	ETA.PROP_RVECTOR_D, ETA.getPropDefault(ETA.PROP_RVECTOR_D), ...
	ETA.PROP_CVECTOR_D, ETA.getPropDefault(ETA.PROP_CVECTOR_D), ...
	ETA.PROP_MATRIX_D, ETA.getPropDefault(ETA.PROP_MATRIX_D), ...
	ETA.PROP_SMATRIX_D, ETA.getPropDefault(ETA.PROP_SMATRIX_D), ...
	ETA.PROP_CELL_D, ETA.getPropDefault(ETA.PROP_CELL_D), ...
	ETA.PROP_NET_D, ETA.getPropDefault(ETA.PROP_NET_D), ...
	ETA.PROP_EMPTY_F, ETA.getPropDefault(ETA.PROP_EMPTY_F), ...
	ETA.PROP_STRING_F, ETA.getPropDefault(ETA.PROP_STRING_F), ...
	ETA.PROP_LOGICAL_F, ETA.getPropDefault(ETA.PROP_LOGICAL_F), ...
	ETA.PROP_OPTION_F, ETA.getPropDefault(ETA.PROP_OPTION_F), ...
	ETA.PROP_CLASS_F, ETA.getPropDefault(ETA.PROP_CLASS_F), ...
	ETA.PROP_CLASSLIST_F, ETA.getPropDefault(ETA.PROP_CLASSLIST_F), ...
	ETA.PROP_ITEM_F, ETA.getPropDefault(ETA.PROP_ITEM_F), ...
	ETA.PROP_ITEMLIST_F, ETA.getPropDefault(ETA.PROP_ITEMLIST_F), ...
	ETA.PROP_IDICT_F, ETA.getPropDefault(ETA.PROP_IDICT_F), ...
	ETA.PROP_SCALAR_F, ETA.getPropDefault(ETA.PROP_SCALAR_F), ...
	ETA.PROP_RVECTOR_F, ETA.getPropDefault(ETA.PROP_RVECTOR_F), ...
	ETA.PROP_CVECTOR_F, ETA.getPropDefault(ETA.PROP_CVECTOR_F), ...
	ETA.PROP_MATRIX_F, ETA.getPropDefault(ETA.PROP_MATRIX_F), ...
	ETA.PROP_SMATRIX_F, ETA.getPropDefault(ETA.PROP_SMATRIX_F), ...
	ETA.PROP_CELL_F, ETA.getPropDefault(ETA.PROP_CELL_F), ...
	ETA.PROP_NET_F, ETA.getPropDefault(ETA.PROP_NET_F), ...
	ETA.PROP_EMPTY_G, ETA.getPropDefault(ETA.PROP_EMPTY_G), ...
	ETA.PROP_STRING_G, ETA.getPropDefault(ETA.PROP_STRING_G), ...
	ETA.PROP_LOGICAL_G, ETA.getPropDefault(ETA.PROP_LOGICAL_G), ...
	ETA.PROP_OPTION_G, ETA.getPropDefault(ETA.PROP_OPTION_G), ...
	ETA.PROP_CLASS_G, ETA.getPropDefault(ETA.PROP_CLASS_G), ...
	ETA.PROP_CLASSLIST_G, ETA.getPropDefault(ETA.PROP_CLASSLIST_G), ...
	ETA.PROP_ITEM_G, ETA.getPropDefault(ETA.PROP_ITEM_G), ...
	ETA.PROP_ITEMLIST_G, ETA.getPropDefault(ETA.PROP_ITEMLIST_G), ...
	ETA.PROP_IDICT_G, ETA.getPropDefault(ETA.PROP_IDICT_G), ...
	ETA.PROP_SCALAR_G, ETA.getPropDefault(ETA.PROP_SCALAR_G), ...
	ETA.PROP_RVECTOR_G, ETA.getPropDefault(ETA.PROP_RVECTOR_G), ...
	ETA.PROP_CVECTOR_G, ETA.getPropDefault(ETA.PROP_CVECTOR_G), ...
	ETA.PROP_MATRIX_G, ETA.getPropDefault(ETA.PROP_MATRIX_G), ...
	ETA.PROP_SMATRIX_G, ETA.getPropDefault(ETA.PROP_SMATRIX_G), ...
	ETA.PROP_CELL_G, ETA.getPropDefault(ETA.PROP_CELL_G), ...
	ETA.PROP_NET_G, ETA.getPropDefault(ETA.PROP_NET_G), ...
	ETA.PROP_EMPTY_R, ETA.getPropDefault(ETA.PROP_EMPTY_R), ...
	ETA.PROP_STRING_R, ETA.getPropDefault(ETA.PROP_STRING_R), ...
	ETA.PROP_LOGICAL_R, ETA.getPropDefault(ETA.PROP_LOGICAL_R), ...
	ETA.PROP_OPTION_R, ETA.getPropDefault(ETA.PROP_OPTION_R), ...
	ETA.PROP_CLASS_R, ETA.getPropDefault(ETA.PROP_CLASS_R), ...
	ETA.PROP_CLASSLIST_R, ETA.getPropDefault(ETA.PROP_CLASSLIST_R), ...
	ETA.PROP_ITEM_R, ETA.getPropDefault(ETA.PROP_ITEM_R), ...
	ETA.PROP_ITEMLIST_R, ETA.getPropDefault(ETA.PROP_ITEMLIST_R), ...
	ETA.PROP_IDICT_R, ETA.getPropDefault(ETA.PROP_IDICT_R), ...
	ETA.PROP_SCALAR_R, ETA.getPropDefault(ETA.PROP_SCALAR_R), ...
	ETA.PROP_RVECTOR_R, ETA.getPropDefault(ETA.PROP_RVECTOR_R), ...
	ETA.PROP_CVECTOR_R, ETA.getPropDefault(ETA.PROP_CVECTOR_R), ...
	ETA.PROP_MATRIX_R, ETA.getPropDefault(ETA.PROP_MATRIX_R), ...
	ETA.PROP_SMATRIX_R, ETA.getPropDefault(ETA.PROP_SMATRIX_R), ...
	ETA.PROP_CELL_R, ETA.getPropDefault(ETA.PROP_CELL_R), ...
	ETA.PROP_NET_R, ETA.getPropDefault(ETA.PROP_NET_R), ...
	ETA.PROP_EMPTY_R_CALC, ETA.getPropDefault(ETA.PROP_EMPTY_R_CALC), ...
	ETA.PROP_STRING_R_CALC, ETA.getPropDefault(ETA.PROP_STRING_R_CALC), ...
	ETA.PROP_LOGICAL_R_CALC, ETA.getPropDefault(ETA.PROP_LOGICAL_R_CALC), ...
	ETA.PROP_OPTION_R_CALC, ETA.getPropDefault(ETA.PROP_OPTION_R_CALC), ...
	ETA.PROP_CLASS_R_CALC, ETA.getPropDefault(ETA.PROP_CLASS_R_CALC), ...
	ETA.PROP_CLASSLIST_R_CALC, ETA.getPropDefault(ETA.PROP_CLASSLIST_R_CALC), ...
	ETA.PROP_ITEM_R_CALC, ETA.getPropDefault(ETA.PROP_ITEM_R_CALC), ...
	ETA.PROP_ITEMLIST_R_CALC, ETA.getPropDefault(ETA.PROP_ITEMLIST_R_CALC), ...
	ETA.PROP_IDICT_R_CALC, ETA.getPropDefault(ETA.PROP_IDICT_R_CALC), ...
	ETA.PROP_SCALAR_R_CALC, ETA.getPropDefault(ETA.PROP_SCALAR_R_CALC), ...
	ETA.PROP_RVECTOR_R_CALC, ETA.getPropDefault(ETA.PROP_RVECTOR_R_CALC), ...
	ETA.PROP_CVECTOR_R_CALC, ETA.getPropDefault(ETA.PROP_CVECTOR_R_CALC), ...
	ETA.PROP_MATRIX_R_CALC, ETA.getPropDefault(ETA.PROP_MATRIX_R_CALC), ...
	ETA.PROP_SMATRIX_R_CALC, ETA.getPropDefault(ETA.PROP_SMATRIX_R_CALC), ...
	ETA.PROP_CELL_R_CALC, ETA.getPropDefault(ETA.PROP_CELL_R_CALC), ...
	ETA.PROP_NET_R_CALC, ETA.getPropDefault(ETA.PROP_NET_R_CALC) ...
	);
warning('on', 'BRAPH2:ETA')

for prop = 1:1:ETA.getPropNumber()
	TAG = upper(ETA.getPropTag(prop));
	switch ETA.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(et.getr(prop), ETA.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by ETA.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in ETA.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(et.getr(TAG), ETA.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by ETA.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in ETA.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(et.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['Being a result, ETA.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in ETA.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(et.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['Being a result, ETA.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in ETA.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:ETA')
et_0 = ETA( ...
	ETA.PROP_EMPTY_M, ETA.getPropDefault(ETA.PROP_EMPTY_M), ...
	ETA.PROP_STRING_M, ETA.getPropDefault(ETA.PROP_STRING_M), ...
	ETA.PROP_LOGICAL_M, ETA.getPropDefault(ETA.PROP_LOGICAL_M), ...
	ETA.PROP_OPTION_M, ETA.getPropDefault(ETA.PROP_OPTION_M), ...
	ETA.PROP_CLASS_M, ETA.getPropDefault(ETA.PROP_CLASS_M), ...
	ETA.PROP_CLASSLIST_M, ETA.getPropDefault(ETA.PROP_CLASSLIST_M), ...
	ETA.PROP_ITEM_M, ETA.getPropDefault(ETA.PROP_ITEM_M), ...
	ETA.PROP_ITEMLIST_M, ETA.getPropDefault(ETA.PROP_ITEMLIST_M), ...
	ETA.PROP_IDICT_M, ETA.getPropDefault(ETA.PROP_IDICT_M), ...
	ETA.PROP_SCALAR_M, ETA.getPropDefault(ETA.PROP_SCALAR_M), ...
	ETA.PROP_RVECTOR_M, ETA.getPropDefault(ETA.PROP_RVECTOR_M), ...
	ETA.PROP_CVECTOR_M, ETA.getPropDefault(ETA.PROP_CVECTOR_M), ...
	ETA.PROP_MATRIX_M, ETA.getPropDefault(ETA.PROP_MATRIX_M), ...
	ETA.PROP_SMATRIX_M, ETA.getPropDefault(ETA.PROP_SMATRIX_M), ...
	ETA.PROP_CELL_M, ETA.getPropDefault(ETA.PROP_CELL_M), ...
	ETA.PROP_NET_M, ETA.getPropDefault(ETA.PROP_NET_M), ...
	ETA.PROP_EMPTY_P, ETA.getPropDefault(ETA.PROP_EMPTY_P), ...
	ETA.PROP_STRING_P, ETA.getPropDefault(ETA.PROP_STRING_P), ...
	ETA.PROP_LOGICAL_P, ETA.getPropDefault(ETA.PROP_LOGICAL_P), ...
	ETA.PROP_OPTION_P, ETA.getPropDefault(ETA.PROP_OPTION_P), ...
	ETA.PROP_CLASS_P, ETA.getPropDefault(ETA.PROP_CLASS_P), ...
	ETA.PROP_CLASSLIST_P, ETA.getPropDefault(ETA.PROP_CLASSLIST_P), ...
	ETA.PROP_ITEM_P, ETA.getPropDefault(ETA.PROP_ITEM_P), ...
	ETA.PROP_ITEMLIST_P, ETA.getPropDefault(ETA.PROP_ITEMLIST_P), ...
	ETA.PROP_IDICT_P, ETA.getPropDefault(ETA.PROP_IDICT_P), ...
	ETA.PROP_SCALAR_P, ETA.getPropDefault(ETA.PROP_SCALAR_P), ...
	ETA.PROP_RVECTOR_P, ETA.getPropDefault(ETA.PROP_RVECTOR_P), ...
	ETA.PROP_CVECTOR_P, ETA.getPropDefault(ETA.PROP_CVECTOR_P), ...
	ETA.PROP_MATRIX_P, ETA.getPropDefault(ETA.PROP_MATRIX_P), ...
	ETA.PROP_SMATRIX_P, ETA.getPropDefault(ETA.PROP_SMATRIX_P), ...
	ETA.PROP_CELL_P, ETA.getPropDefault(ETA.PROP_CELL_P), ...
	ETA.PROP_NET_P, ETA.getPropDefault(ETA.PROP_NET_P), ...
	ETA.PROP_EMPTY_D, ETA.getPropDefault(ETA.PROP_EMPTY_D), ...
	ETA.PROP_STRING_D, ETA.getPropDefault(ETA.PROP_STRING_D), ...
	ETA.PROP_LOGICAL_D, ETA.getPropDefault(ETA.PROP_LOGICAL_D), ...
	ETA.PROP_OPTION_D, ETA.getPropDefault(ETA.PROP_OPTION_D), ...
	ETA.PROP_CLASS_D, ETA.getPropDefault(ETA.PROP_CLASS_D), ...
	ETA.PROP_CLASSLIST_D, ETA.getPropDefault(ETA.PROP_CLASSLIST_D), ...
	ETA.PROP_ITEM_D, ETA.getPropDefault(ETA.PROP_ITEM_D), ...
	ETA.PROP_ITEMLIST_D, ETA.getPropDefault(ETA.PROP_ITEMLIST_D), ...
	ETA.PROP_IDICT_D, ETA.getPropDefault(ETA.PROP_IDICT_D), ...
	ETA.PROP_SCALAR_D, ETA.getPropDefault(ETA.PROP_SCALAR_D), ...
	ETA.PROP_RVECTOR_D, ETA.getPropDefault(ETA.PROP_RVECTOR_D), ...
	ETA.PROP_CVECTOR_D, ETA.getPropDefault(ETA.PROP_CVECTOR_D), ...
	ETA.PROP_MATRIX_D, ETA.getPropDefault(ETA.PROP_MATRIX_D), ...
	ETA.PROP_SMATRIX_D, ETA.getPropDefault(ETA.PROP_SMATRIX_D), ...
	ETA.PROP_CELL_D, ETA.getPropDefault(ETA.PROP_CELL_D), ...
	ETA.PROP_NET_D, ETA.getPropDefault(ETA.PROP_NET_D), ...
	ETA.PROP_EMPTY_F, ETA.getPropDefault(ETA.PROP_EMPTY_F), ...
	ETA.PROP_STRING_F, ETA.getPropDefault(ETA.PROP_STRING_F), ...
	ETA.PROP_LOGICAL_F, ETA.getPropDefault(ETA.PROP_LOGICAL_F), ...
	ETA.PROP_OPTION_F, ETA.getPropDefault(ETA.PROP_OPTION_F), ...
	ETA.PROP_CLASS_F, ETA.getPropDefault(ETA.PROP_CLASS_F), ...
	ETA.PROP_CLASSLIST_F, ETA.getPropDefault(ETA.PROP_CLASSLIST_F), ...
	ETA.PROP_ITEM_F, ETA.getPropDefault(ETA.PROP_ITEM_F), ...
	ETA.PROP_ITEMLIST_F, ETA.getPropDefault(ETA.PROP_ITEMLIST_F), ...
	ETA.PROP_IDICT_F, ETA.getPropDefault(ETA.PROP_IDICT_F), ...
	ETA.PROP_SCALAR_F, ETA.getPropDefault(ETA.PROP_SCALAR_F), ...
	ETA.PROP_RVECTOR_F, ETA.getPropDefault(ETA.PROP_RVECTOR_F), ...
	ETA.PROP_CVECTOR_F, ETA.getPropDefault(ETA.PROP_CVECTOR_F), ...
	ETA.PROP_MATRIX_F, ETA.getPropDefault(ETA.PROP_MATRIX_F), ...
	ETA.PROP_SMATRIX_F, ETA.getPropDefault(ETA.PROP_SMATRIX_F), ...
	ETA.PROP_CELL_F, ETA.getPropDefault(ETA.PROP_CELL_F), ...
	ETA.PROP_NET_F, ETA.getPropDefault(ETA.PROP_NET_F), ...
	ETA.PROP_EMPTY_G, ETA.getPropDefault(ETA.PROP_EMPTY_G), ...
	ETA.PROP_STRING_G, ETA.getPropDefault(ETA.PROP_STRING_G), ...
	ETA.PROP_LOGICAL_G, ETA.getPropDefault(ETA.PROP_LOGICAL_G), ...
	ETA.PROP_OPTION_G, ETA.getPropDefault(ETA.PROP_OPTION_G), ...
	ETA.PROP_CLASS_G, ETA.getPropDefault(ETA.PROP_CLASS_G), ...
	ETA.PROP_CLASSLIST_G, ETA.getPropDefault(ETA.PROP_CLASSLIST_G), ...
	ETA.PROP_ITEM_G, ETA.getPropDefault(ETA.PROP_ITEM_G), ...
	ETA.PROP_ITEMLIST_G, ETA.getPropDefault(ETA.PROP_ITEMLIST_G), ...
	ETA.PROP_IDICT_G, ETA.getPropDefault(ETA.PROP_IDICT_G), ...
	ETA.PROP_SCALAR_G, ETA.getPropDefault(ETA.PROP_SCALAR_G), ...
	ETA.PROP_RVECTOR_G, ETA.getPropDefault(ETA.PROP_RVECTOR_G), ...
	ETA.PROP_CVECTOR_G, ETA.getPropDefault(ETA.PROP_CVECTOR_G), ...
	ETA.PROP_MATRIX_G, ETA.getPropDefault(ETA.PROP_MATRIX_G), ...
	ETA.PROP_SMATRIX_G, ETA.getPropDefault(ETA.PROP_SMATRIX_G), ...
	ETA.PROP_CELL_G, ETA.getPropDefault(ETA.PROP_CELL_G), ...
	ETA.PROP_NET_G, ETA.getPropDefault(ETA.PROP_NET_G), ...
	ETA.PROP_EMPTY_R, ETA.getPropDefault(ETA.PROP_EMPTY_R), ...
	ETA.PROP_STRING_R, ETA.getPropDefault(ETA.PROP_STRING_R), ...
	ETA.PROP_LOGICAL_R, ETA.getPropDefault(ETA.PROP_LOGICAL_R), ...
	ETA.PROP_OPTION_R, ETA.getPropDefault(ETA.PROP_OPTION_R), ...
	ETA.PROP_CLASS_R, ETA.getPropDefault(ETA.PROP_CLASS_R), ...
	ETA.PROP_CLASSLIST_R, ETA.getPropDefault(ETA.PROP_CLASSLIST_R), ...
	ETA.PROP_ITEM_R, ETA.getPropDefault(ETA.PROP_ITEM_R), ...
	ETA.PROP_ITEMLIST_R, ETA.getPropDefault(ETA.PROP_ITEMLIST_R), ...
	ETA.PROP_IDICT_R, ETA.getPropDefault(ETA.PROP_IDICT_R), ...
	ETA.PROP_SCALAR_R, ETA.getPropDefault(ETA.PROP_SCALAR_R), ...
	ETA.PROP_RVECTOR_R, ETA.getPropDefault(ETA.PROP_RVECTOR_R), ...
	ETA.PROP_CVECTOR_R, ETA.getPropDefault(ETA.PROP_CVECTOR_R), ...
	ETA.PROP_MATRIX_R, ETA.getPropDefault(ETA.PROP_MATRIX_R), ...
	ETA.PROP_SMATRIX_R, ETA.getPropDefault(ETA.PROP_SMATRIX_R), ...
	ETA.PROP_CELL_R, ETA.getPropDefault(ETA.PROP_CELL_R), ...
	ETA.PROP_NET_R, ETA.getPropDefault(ETA.PROP_NET_R), ...
	ETA.PROP_EMPTY_R_CALC, ETA.getPropDefault(ETA.PROP_EMPTY_R_CALC), ...
	ETA.PROP_STRING_R_CALC, ETA.getPropDefault(ETA.PROP_STRING_R_CALC), ...
	ETA.PROP_LOGICAL_R_CALC, ETA.getPropDefault(ETA.PROP_LOGICAL_R_CALC), ...
	ETA.PROP_OPTION_R_CALC, ETA.getPropDefault(ETA.PROP_OPTION_R_CALC), ...
	ETA.PROP_CLASS_R_CALC, ETA.getPropDefault(ETA.PROP_CLASS_R_CALC), ...
	ETA.PROP_CLASSLIST_R_CALC, ETA.getPropDefault(ETA.PROP_CLASSLIST_R_CALC), ...
	ETA.PROP_ITEM_R_CALC, ETA.getPropDefault(ETA.PROP_ITEM_R_CALC), ...
	ETA.PROP_ITEMLIST_R_CALC, ETA.getPropDefault(ETA.PROP_ITEMLIST_R_CALC), ...
	ETA.PROP_IDICT_R_CALC, ETA.getPropDefault(ETA.PROP_IDICT_R_CALC), ...
	ETA.PROP_SCALAR_R_CALC, ETA.getPropDefault(ETA.PROP_SCALAR_R_CALC), ...
	ETA.PROP_RVECTOR_R_CALC, ETA.getPropDefault(ETA.PROP_RVECTOR_R_CALC), ...
	ETA.PROP_CVECTOR_R_CALC, ETA.getPropDefault(ETA.PROP_CVECTOR_R_CALC), ...
	ETA.PROP_MATRIX_R_CALC, ETA.getPropDefault(ETA.PROP_MATRIX_R_CALC), ...
	ETA.PROP_SMATRIX_R_CALC, ETA.getPropDefault(ETA.PROP_SMATRIX_R_CALC), ...
	ETA.PROP_CELL_R_CALC, ETA.getPropDefault(ETA.PROP_CELL_R_CALC), ...
	ETA.PROP_NET_R_CALC, ETA.getPropDefault(ETA.PROP_NET_R_CALC) ...
	);
warning('on', 'BRAPH2:ETA')

et_1 = ETA( ...
	ETA.PROP_EMPTY_M, ETA.getPropDefault(ETA.PROP_EMPTY_M), ...
	ETA.PROP_STRING_M, ETA.getPropDefault(ETA.PROP_STRING_M), ...
	ETA.PROP_LOGICAL_M, ETA.getPropDefault(ETA.PROP_LOGICAL_M), ...
	ETA.PROP_OPTION_M, ETA.getPropDefault(ETA.PROP_OPTION_M), ...
	ETA.PROP_CLASS_M, ETA.getPropDefault(ETA.PROP_CLASS_M), ...
	ETA.PROP_CLASSLIST_M, ETA.getPropDefault(ETA.PROP_CLASSLIST_M), ...
	ETA.PROP_ITEM_M, ETA.getPropDefault(ETA.PROP_ITEM_M), ...
	ETA.PROP_ITEMLIST_M, ETA.getPropDefault(ETA.PROP_ITEMLIST_M), ...
	ETA.PROP_IDICT_M, ETA.getPropDefault(ETA.PROP_IDICT_M), ...
	ETA.PROP_SCALAR_M, ETA.getPropDefault(ETA.PROP_SCALAR_M), ...
	ETA.PROP_RVECTOR_M, ETA.getPropDefault(ETA.PROP_RVECTOR_M), ...
	ETA.PROP_CVECTOR_M, ETA.getPropDefault(ETA.PROP_CVECTOR_M), ...
	ETA.PROP_MATRIX_M, ETA.getPropDefault(ETA.PROP_MATRIX_M), ...
	ETA.PROP_SMATRIX_M, ETA.getPropDefault(ETA.PROP_SMATRIX_M), ...
	ETA.PROP_CELL_M, ETA.getPropDefault(ETA.PROP_CELL_M), ...
	ETA.PROP_NET_M, ETA.getPropDefault(ETA.PROP_NET_M), ...
	ETA.PROP_EMPTY_P, Callback('EL', et_0, 'PROP', 17), ...
	ETA.PROP_STRING_P, Callback('EL', et_0, 'PROP', 18), ...
	ETA.PROP_LOGICAL_P, Callback('EL', et_0, 'PROP', 19), ...
	ETA.PROP_OPTION_P, Callback('EL', et_0, 'PROP', 20), ...
	ETA.PROP_CLASS_P, Callback('EL', et_0, 'PROP', 21), ...
	ETA.PROP_CLASSLIST_P, Callback('EL', et_0, 'PROP', 22), ...
	ETA.PROP_ITEM_P, Callback('EL', et_0, 'PROP', 23), ...
	ETA.PROP_ITEMLIST_P, Callback('EL', et_0, 'PROP', 24), ...
	ETA.PROP_IDICT_P, Callback('EL', et_0, 'PROP', 25), ...
	ETA.PROP_SCALAR_P, Callback('EL', et_0, 'PROP', 26), ...
	ETA.PROP_RVECTOR_P, Callback('EL', et_0, 'PROP', 27), ...
	ETA.PROP_CVECTOR_P, Callback('EL', et_0, 'PROP', 28), ...
	ETA.PROP_MATRIX_P, Callback('EL', et_0, 'PROP', 29), ...
	ETA.PROP_SMATRIX_P, Callback('EL', et_0, 'PROP', 30), ...
	ETA.PROP_CELL_P, Callback('EL', et_0, 'PROP', 31), ...
	ETA.PROP_NET_P, Callback('EL', et_0, 'PROP', 32), ...
	ETA.PROP_EMPTY_D, Callback('EL', et_0, 'PROP', 33), ...
	ETA.PROP_STRING_D, Callback('EL', et_0, 'PROP', 34), ...
	ETA.PROP_LOGICAL_D, Callback('EL', et_0, 'PROP', 35), ...
	ETA.PROP_OPTION_D, Callback('EL', et_0, 'PROP', 36), ...
	ETA.PROP_CLASS_D, Callback('EL', et_0, 'PROP', 37), ...
	ETA.PROP_CLASSLIST_D, Callback('EL', et_0, 'PROP', 38), ...
	ETA.PROP_ITEM_D, Callback('EL', et_0, 'PROP', 39), ...
	ETA.PROP_ITEMLIST_D, Callback('EL', et_0, 'PROP', 40), ...
	ETA.PROP_IDICT_D, Callback('EL', et_0, 'PROP', 41), ...
	ETA.PROP_SCALAR_D, Callback('EL', et_0, 'PROP', 42), ...
	ETA.PROP_RVECTOR_D, Callback('EL', et_0, 'PROP', 43), ...
	ETA.PROP_CVECTOR_D, Callback('EL', et_0, 'PROP', 44), ...
	ETA.PROP_MATRIX_D, Callback('EL', et_0, 'PROP', 45), ...
	ETA.PROP_SMATRIX_D, Callback('EL', et_0, 'PROP', 46), ...
	ETA.PROP_CELL_D, Callback('EL', et_0, 'PROP', 47), ...
	ETA.PROP_NET_D, Callback('EL', et_0, 'PROP', 48), ...
	ETA.PROP_EMPTY_F, Callback('EL', et_0, 'PROP', 49), ...
	ETA.PROP_STRING_F, Callback('EL', et_0, 'PROP', 50), ...
	ETA.PROP_LOGICAL_F, Callback('EL', et_0, 'PROP', 51), ...
	ETA.PROP_OPTION_F, Callback('EL', et_0, 'PROP', 52), ...
	ETA.PROP_CLASS_F, Callback('EL', et_0, 'PROP', 53), ...
	ETA.PROP_CLASSLIST_F, Callback('EL', et_0, 'PROP', 54), ...
	ETA.PROP_ITEM_F, Callback('EL', et_0, 'PROP', 55), ...
	ETA.PROP_ITEMLIST_F, Callback('EL', et_0, 'PROP', 56), ...
	ETA.PROP_IDICT_F, Callback('EL', et_0, 'PROP', 57), ...
	ETA.PROP_SCALAR_F, Callback('EL', et_0, 'PROP', 58), ...
	ETA.PROP_RVECTOR_F, Callback('EL', et_0, 'PROP', 59), ...
	ETA.PROP_CVECTOR_F, Callback('EL', et_0, 'PROP', 60), ...
	ETA.PROP_MATRIX_F, Callback('EL', et_0, 'PROP', 61), ...
	ETA.PROP_SMATRIX_F, Callback('EL', et_0, 'PROP', 62), ...
	ETA.PROP_CELL_F, Callback('EL', et_0, 'PROP', 63), ...
	ETA.PROP_NET_F, Callback('EL', et_0, 'PROP', 64), ...
	ETA.PROP_EMPTY_G, Callback('EL', et_0, 'PROP', 65), ...
	ETA.PROP_STRING_G, Callback('EL', et_0, 'PROP', 66), ...
	ETA.PROP_LOGICAL_G, Callback('EL', et_0, 'PROP', 67), ...
	ETA.PROP_OPTION_G, Callback('EL', et_0, 'PROP', 68), ...
	ETA.PROP_CLASS_G, Callback('EL', et_0, 'PROP', 69), ...
	ETA.PROP_CLASSLIST_G, Callback('EL', et_0, 'PROP', 70), ...
	ETA.PROP_ITEM_G, Callback('EL', et_0, 'PROP', 71), ...
	ETA.PROP_ITEMLIST_G, Callback('EL', et_0, 'PROP', 72), ...
	ETA.PROP_IDICT_G, Callback('EL', et_0, 'PROP', 73), ...
	ETA.PROP_SCALAR_G, Callback('EL', et_0, 'PROP', 74), ...
	ETA.PROP_RVECTOR_G, Callback('EL', et_0, 'PROP', 75), ...
	ETA.PROP_CVECTOR_G, Callback('EL', et_0, 'PROP', 76), ...
	ETA.PROP_MATRIX_G, Callback('EL', et_0, 'PROP', 77), ...
	ETA.PROP_SMATRIX_G, Callback('EL', et_0, 'PROP', 78), ...
	ETA.PROP_CELL_G, Callback('EL', et_0, 'PROP', 79), ...
	ETA.PROP_NET_G, Callback('EL', et_0, 'PROP', 80), ...
	ETA.PROP_EMPTY_R, NoValue(), ...
	ETA.PROP_STRING_R, NoValue(), ...
	ETA.PROP_LOGICAL_R, NoValue(), ...
	ETA.PROP_OPTION_R, NoValue(), ...
	ETA.PROP_CLASS_R, NoValue(), ...
	ETA.PROP_CLASSLIST_R, NoValue(), ...
	ETA.PROP_ITEM_R, NoValue(), ...
	ETA.PROP_ITEMLIST_R, NoValue(), ...
	ETA.PROP_IDICT_R, NoValue(), ...
	ETA.PROP_SCALAR_R, NoValue(), ...
	ETA.PROP_RVECTOR_R, NoValue(), ...
	ETA.PROP_CVECTOR_R, NoValue(), ...
	ETA.PROP_MATRIX_R, NoValue(), ...
	ETA.PROP_SMATRIX_R, NoValue(), ...
	ETA.PROP_CELL_R, NoValue(), ...
	ETA.PROP_NET_R, NoValue(), ...
	ETA.PROP_EMPTY_R_CALC, NoValue(), ...
	ETA.PROP_STRING_R_CALC, NoValue(), ...
	ETA.PROP_LOGICAL_R_CALC, NoValue(), ...
	ETA.PROP_OPTION_R_CALC, NoValue(), ...
	ETA.PROP_CLASS_R_CALC, NoValue(), ...
	ETA.PROP_CLASSLIST_R_CALC, NoValue(), ...
	ETA.PROP_ITEM_R_CALC, NoValue(), ...
	ETA.PROP_ITEMLIST_R_CALC, NoValue(), ...
	ETA.PROP_IDICT_R_CALC, NoValue(), ...
	ETA.PROP_SCALAR_R_CALC, NoValue(), ...
	ETA.PROP_RVECTOR_R_CALC, NoValue(), ...
	ETA.PROP_CVECTOR_R_CALC, NoValue(), ...
	ETA.PROP_MATRIX_R_CALC, NoValue(), ...
	ETA.PROP_SMATRIX_R_CALC, NoValue(), ...
	ETA.PROP_CELL_R_CALC, NoValue(), ...
	ETA.PROP_NET_R_CALC, NoValue() ...
	);
	
prop_number = ETA.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETA.getPropTag(prop));
	switch ETA.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(et_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(et_1.get(prop), et_0.get(prop)) && ~isa(et_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(et_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
et_2 = ETA( ...
	ETA.PROP_EMPTY_M, ETA.getPropDefault(ETA.PROP_EMPTY_M), ...
	ETA.PROP_STRING_M, ETA.getPropDefault(ETA.PROP_STRING_M), ...
	ETA.PROP_LOGICAL_M, ETA.getPropDefault(ETA.PROP_LOGICAL_M), ...
	ETA.PROP_OPTION_M, ETA.getPropDefault(ETA.PROP_OPTION_M), ...
	ETA.PROP_CLASS_M, ETA.getPropDefault(ETA.PROP_CLASS_M), ...
	ETA.PROP_CLASSLIST_M, ETA.getPropDefault(ETA.PROP_CLASSLIST_M), ...
	ETA.PROP_ITEM_M, ETA.getPropDefault(ETA.PROP_ITEM_M), ...
	ETA.PROP_ITEMLIST_M, ETA.getPropDefault(ETA.PROP_ITEMLIST_M), ...
	ETA.PROP_IDICT_M, ETA.getPropDefault(ETA.PROP_IDICT_M), ...
	ETA.PROP_SCALAR_M, ETA.getPropDefault(ETA.PROP_SCALAR_M), ...
	ETA.PROP_RVECTOR_M, ETA.getPropDefault(ETA.PROP_RVECTOR_M), ...
	ETA.PROP_CVECTOR_M, ETA.getPropDefault(ETA.PROP_CVECTOR_M), ...
	ETA.PROP_MATRIX_M, ETA.getPropDefault(ETA.PROP_MATRIX_M), ...
	ETA.PROP_SMATRIX_M, ETA.getPropDefault(ETA.PROP_SMATRIX_M), ...
	ETA.PROP_CELL_M, ETA.getPropDefault(ETA.PROP_CELL_M), ...
	ETA.PROP_NET_M, ETA.getPropDefault(ETA.PROP_NET_M), ...
	ETA.PROP_EMPTY_P, Callback('EL', et_1, 'PROP', 17), ...
	ETA.PROP_STRING_P, Callback('EL', et_1, 'PROP', 18), ...
	ETA.PROP_LOGICAL_P, Callback('EL', et_1, 'PROP', 19), ...
	ETA.PROP_OPTION_P, Callback('EL', et_1, 'PROP', 20), ...
	ETA.PROP_CLASS_P, Callback('EL', et_1, 'PROP', 21), ...
	ETA.PROP_CLASSLIST_P, Callback('EL', et_1, 'PROP', 22), ...
	ETA.PROP_ITEM_P, Callback('EL', et_1, 'PROP', 23), ...
	ETA.PROP_ITEMLIST_P, Callback('EL', et_1, 'PROP', 24), ...
	ETA.PROP_IDICT_P, Callback('EL', et_1, 'PROP', 25), ...
	ETA.PROP_SCALAR_P, Callback('EL', et_1, 'PROP', 26), ...
	ETA.PROP_RVECTOR_P, Callback('EL', et_1, 'PROP', 27), ...
	ETA.PROP_CVECTOR_P, Callback('EL', et_1, 'PROP', 28), ...
	ETA.PROP_MATRIX_P, Callback('EL', et_1, 'PROP', 29), ...
	ETA.PROP_SMATRIX_P, Callback('EL', et_1, 'PROP', 30), ...
	ETA.PROP_CELL_P, Callback('EL', et_1, 'PROP', 31), ...
	ETA.PROP_NET_P, Callback('EL', et_1, 'PROP', 32), ...
	ETA.PROP_EMPTY_D, Callback('EL', et_1, 'PROP', 33), ...
	ETA.PROP_STRING_D, Callback('EL', et_1, 'PROP', 34), ...
	ETA.PROP_LOGICAL_D, Callback('EL', et_1, 'PROP', 35), ...
	ETA.PROP_OPTION_D, Callback('EL', et_1, 'PROP', 36), ...
	ETA.PROP_CLASS_D, Callback('EL', et_1, 'PROP', 37), ...
	ETA.PROP_CLASSLIST_D, Callback('EL', et_1, 'PROP', 38), ...
	ETA.PROP_ITEM_D, Callback('EL', et_1, 'PROP', 39), ...
	ETA.PROP_ITEMLIST_D, Callback('EL', et_1, 'PROP', 40), ...
	ETA.PROP_IDICT_D, Callback('EL', et_1, 'PROP', 41), ...
	ETA.PROP_SCALAR_D, Callback('EL', et_1, 'PROP', 42), ...
	ETA.PROP_RVECTOR_D, Callback('EL', et_1, 'PROP', 43), ...
	ETA.PROP_CVECTOR_D, Callback('EL', et_1, 'PROP', 44), ...
	ETA.PROP_MATRIX_D, Callback('EL', et_1, 'PROP', 45), ...
	ETA.PROP_SMATRIX_D, Callback('EL', et_1, 'PROP', 46), ...
	ETA.PROP_CELL_D, Callback('EL', et_1, 'PROP', 47), ...
	ETA.PROP_NET_D, Callback('EL', et_1, 'PROP', 48), ...
	ETA.PROP_EMPTY_F, Callback('EL', et_1, 'PROP', 49), ...
	ETA.PROP_STRING_F, Callback('EL', et_1, 'PROP', 50), ...
	ETA.PROP_LOGICAL_F, Callback('EL', et_1, 'PROP', 51), ...
	ETA.PROP_OPTION_F, Callback('EL', et_1, 'PROP', 52), ...
	ETA.PROP_CLASS_F, Callback('EL', et_1, 'PROP', 53), ...
	ETA.PROP_CLASSLIST_F, Callback('EL', et_1, 'PROP', 54), ...
	ETA.PROP_ITEM_F, Callback('EL', et_1, 'PROP', 55), ...
	ETA.PROP_ITEMLIST_F, Callback('EL', et_1, 'PROP', 56), ...
	ETA.PROP_IDICT_F, Callback('EL', et_1, 'PROP', 57), ...
	ETA.PROP_SCALAR_F, Callback('EL', et_1, 'PROP', 58), ...
	ETA.PROP_RVECTOR_F, Callback('EL', et_1, 'PROP', 59), ...
	ETA.PROP_CVECTOR_F, Callback('EL', et_1, 'PROP', 60), ...
	ETA.PROP_MATRIX_F, Callback('EL', et_1, 'PROP', 61), ...
	ETA.PROP_SMATRIX_F, Callback('EL', et_1, 'PROP', 62), ...
	ETA.PROP_CELL_F, Callback('EL', et_1, 'PROP', 63), ...
	ETA.PROP_NET_F, Callback('EL', et_1, 'PROP', 64), ...
	ETA.PROP_EMPTY_G, Callback('EL', et_1, 'PROP', 65), ...
	ETA.PROP_STRING_G, Callback('EL', et_1, 'PROP', 66), ...
	ETA.PROP_LOGICAL_G, Callback('EL', et_1, 'PROP', 67), ...
	ETA.PROP_OPTION_G, Callback('EL', et_1, 'PROP', 68), ...
	ETA.PROP_CLASS_G, Callback('EL', et_1, 'PROP', 69), ...
	ETA.PROP_CLASSLIST_G, Callback('EL', et_1, 'PROP', 70), ...
	ETA.PROP_ITEM_G, Callback('EL', et_1, 'PROP', 71), ...
	ETA.PROP_ITEMLIST_G, Callback('EL', et_1, 'PROP', 72), ...
	ETA.PROP_IDICT_G, Callback('EL', et_1, 'PROP', 73), ...
	ETA.PROP_SCALAR_G, Callback('EL', et_1, 'PROP', 74), ...
	ETA.PROP_RVECTOR_G, Callback('EL', et_1, 'PROP', 75), ...
	ETA.PROP_CVECTOR_G, Callback('EL', et_1, 'PROP', 76), ...
	ETA.PROP_MATRIX_G, Callback('EL', et_1, 'PROP', 77), ...
	ETA.PROP_SMATRIX_G, Callback('EL', et_1, 'PROP', 78), ...
	ETA.PROP_CELL_G, Callback('EL', et_1, 'PROP', 79), ...
	ETA.PROP_NET_G, Callback('EL', et_1, 'PROP', 80), ...
	ETA.PROP_EMPTY_R, NoValue(), ...
	ETA.PROP_STRING_R, NoValue(), ...
	ETA.PROP_LOGICAL_R, NoValue(), ...
	ETA.PROP_OPTION_R, NoValue(), ...
	ETA.PROP_CLASS_R, NoValue(), ...
	ETA.PROP_CLASSLIST_R, NoValue(), ...
	ETA.PROP_ITEM_R, NoValue(), ...
	ETA.PROP_ITEMLIST_R, NoValue(), ...
	ETA.PROP_IDICT_R, NoValue(), ...
	ETA.PROP_SCALAR_R, NoValue(), ...
	ETA.PROP_RVECTOR_R, NoValue(), ...
	ETA.PROP_CVECTOR_R, NoValue(), ...
	ETA.PROP_MATRIX_R, NoValue(), ...
	ETA.PROP_SMATRIX_R, NoValue(), ...
	ETA.PROP_CELL_R, NoValue(), ...
	ETA.PROP_NET_R, NoValue(), ...
	ETA.PROP_EMPTY_R_CALC, NoValue(), ...
	ETA.PROP_STRING_R_CALC, NoValue(), ...
	ETA.PROP_LOGICAL_R_CALC, NoValue(), ...
	ETA.PROP_OPTION_R_CALC, NoValue(), ...
	ETA.PROP_CLASS_R_CALC, NoValue(), ...
	ETA.PROP_CLASSLIST_R_CALC, NoValue(), ...
	ETA.PROP_ITEM_R_CALC, NoValue(), ...
	ETA.PROP_ITEMLIST_R_CALC, NoValue(), ...
	ETA.PROP_IDICT_R_CALC, NoValue(), ...
	ETA.PROP_SCALAR_R_CALC, NoValue(), ...
	ETA.PROP_RVECTOR_R_CALC, NoValue(), ...
	ETA.PROP_CVECTOR_R_CALC, NoValue(), ...
	ETA.PROP_MATRIX_R_CALC, NoValue(), ...
	ETA.PROP_SMATRIX_R_CALC, NoValue(), ...
	ETA.PROP_CELL_R_CALC, NoValue(), ...
	ETA.PROP_NET_R_CALC, NoValue() ...
	);
	
prop_number = ETA.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETA.getPropTag(prop));
	switch ETA.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(et_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(et_2.get(prop), et_0.get(prop)) && ~isa(et_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(et_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
et_3 = ETA( ...
	ETA.PROP_EMPTY_M, ETA.getPropDefault(ETA.PROP_EMPTY_M), ...
	ETA.PROP_STRING_M, ETA.getPropDefault(ETA.PROP_STRING_M), ...
	ETA.PROP_LOGICAL_M, ETA.getPropDefault(ETA.PROP_LOGICAL_M), ...
	ETA.PROP_OPTION_M, ETA.getPropDefault(ETA.PROP_OPTION_M), ...
	ETA.PROP_CLASS_M, ETA.getPropDefault(ETA.PROP_CLASS_M), ...
	ETA.PROP_CLASSLIST_M, ETA.getPropDefault(ETA.PROP_CLASSLIST_M), ...
	ETA.PROP_ITEM_M, ETA.getPropDefault(ETA.PROP_ITEM_M), ...
	ETA.PROP_ITEMLIST_M, ETA.getPropDefault(ETA.PROP_ITEMLIST_M), ...
	ETA.PROP_IDICT_M, ETA.getPropDefault(ETA.PROP_IDICT_M), ...
	ETA.PROP_SCALAR_M, ETA.getPropDefault(ETA.PROP_SCALAR_M), ...
	ETA.PROP_RVECTOR_M, ETA.getPropDefault(ETA.PROP_RVECTOR_M), ...
	ETA.PROP_CVECTOR_M, ETA.getPropDefault(ETA.PROP_CVECTOR_M), ...
	ETA.PROP_MATRIX_M, ETA.getPropDefault(ETA.PROP_MATRIX_M), ...
	ETA.PROP_SMATRIX_M, ETA.getPropDefault(ETA.PROP_SMATRIX_M), ...
	ETA.PROP_CELL_M, ETA.getPropDefault(ETA.PROP_CELL_M), ...
	ETA.PROP_NET_M, ETA.getPropDefault(ETA.PROP_NET_M), ...
	ETA.PROP_EMPTY_P, Callback('EL', et_2, 'PROP', 17), ...
	ETA.PROP_STRING_P, Callback('EL', et_2, 'PROP', 18), ...
	ETA.PROP_LOGICAL_P, Callback('EL', et_2, 'PROP', 19), ...
	ETA.PROP_OPTION_P, Callback('EL', et_2, 'PROP', 20), ...
	ETA.PROP_CLASS_P, Callback('EL', et_2, 'PROP', 21), ...
	ETA.PROP_CLASSLIST_P, Callback('EL', et_2, 'PROP', 22), ...
	ETA.PROP_ITEM_P, Callback('EL', et_2, 'PROP', 23), ...
	ETA.PROP_ITEMLIST_P, Callback('EL', et_2, 'PROP', 24), ...
	ETA.PROP_IDICT_P, Callback('EL', et_2, 'PROP', 25), ...
	ETA.PROP_SCALAR_P, Callback('EL', et_2, 'PROP', 26), ...
	ETA.PROP_RVECTOR_P, Callback('EL', et_2, 'PROP', 27), ...
	ETA.PROP_CVECTOR_P, Callback('EL', et_2, 'PROP', 28), ...
	ETA.PROP_MATRIX_P, Callback('EL', et_2, 'PROP', 29), ...
	ETA.PROP_SMATRIX_P, Callback('EL', et_2, 'PROP', 30), ...
	ETA.PROP_CELL_P, Callback('EL', et_2, 'PROP', 31), ...
	ETA.PROP_NET_P, Callback('EL', et_2, 'PROP', 32), ...
	ETA.PROP_EMPTY_D, Callback('EL', et_2, 'PROP', 33), ...
	ETA.PROP_STRING_D, Callback('EL', et_2, 'PROP', 34), ...
	ETA.PROP_LOGICAL_D, Callback('EL', et_2, 'PROP', 35), ...
	ETA.PROP_OPTION_D, Callback('EL', et_2, 'PROP', 36), ...
	ETA.PROP_CLASS_D, Callback('EL', et_2, 'PROP', 37), ...
	ETA.PROP_CLASSLIST_D, Callback('EL', et_2, 'PROP', 38), ...
	ETA.PROP_ITEM_D, Callback('EL', et_2, 'PROP', 39), ...
	ETA.PROP_ITEMLIST_D, Callback('EL', et_2, 'PROP', 40), ...
	ETA.PROP_IDICT_D, Callback('EL', et_2, 'PROP', 41), ...
	ETA.PROP_SCALAR_D, Callback('EL', et_2, 'PROP', 42), ...
	ETA.PROP_RVECTOR_D, Callback('EL', et_2, 'PROP', 43), ...
	ETA.PROP_CVECTOR_D, Callback('EL', et_2, 'PROP', 44), ...
	ETA.PROP_MATRIX_D, Callback('EL', et_2, 'PROP', 45), ...
	ETA.PROP_SMATRIX_D, Callback('EL', et_2, 'PROP', 46), ...
	ETA.PROP_CELL_D, Callback('EL', et_2, 'PROP', 47), ...
	ETA.PROP_NET_D, Callback('EL', et_2, 'PROP', 48), ...
	ETA.PROP_EMPTY_F, Callback('EL', et_2, 'PROP', 49), ...
	ETA.PROP_STRING_F, Callback('EL', et_2, 'PROP', 50), ...
	ETA.PROP_LOGICAL_F, Callback('EL', et_2, 'PROP', 51), ...
	ETA.PROP_OPTION_F, Callback('EL', et_2, 'PROP', 52), ...
	ETA.PROP_CLASS_F, Callback('EL', et_2, 'PROP', 53), ...
	ETA.PROP_CLASSLIST_F, Callback('EL', et_2, 'PROP', 54), ...
	ETA.PROP_ITEM_F, Callback('EL', et_2, 'PROP', 55), ...
	ETA.PROP_ITEMLIST_F, Callback('EL', et_2, 'PROP', 56), ...
	ETA.PROP_IDICT_F, Callback('EL', et_2, 'PROP', 57), ...
	ETA.PROP_SCALAR_F, Callback('EL', et_2, 'PROP', 58), ...
	ETA.PROP_RVECTOR_F, Callback('EL', et_2, 'PROP', 59), ...
	ETA.PROP_CVECTOR_F, Callback('EL', et_2, 'PROP', 60), ...
	ETA.PROP_MATRIX_F, Callback('EL', et_2, 'PROP', 61), ...
	ETA.PROP_SMATRIX_F, Callback('EL', et_2, 'PROP', 62), ...
	ETA.PROP_CELL_F, Callback('EL', et_2, 'PROP', 63), ...
	ETA.PROP_NET_F, Callback('EL', et_2, 'PROP', 64), ...
	ETA.PROP_EMPTY_G, Callback('EL', et_2, 'PROP', 65), ...
	ETA.PROP_STRING_G, Callback('EL', et_2, 'PROP', 66), ...
	ETA.PROP_LOGICAL_G, Callback('EL', et_2, 'PROP', 67), ...
	ETA.PROP_OPTION_G, Callback('EL', et_2, 'PROP', 68), ...
	ETA.PROP_CLASS_G, Callback('EL', et_2, 'PROP', 69), ...
	ETA.PROP_CLASSLIST_G, Callback('EL', et_2, 'PROP', 70), ...
	ETA.PROP_ITEM_G, Callback('EL', et_2, 'PROP', 71), ...
	ETA.PROP_ITEMLIST_G, Callback('EL', et_2, 'PROP', 72), ...
	ETA.PROP_IDICT_G, Callback('EL', et_2, 'PROP', 73), ...
	ETA.PROP_SCALAR_G, Callback('EL', et_2, 'PROP', 74), ...
	ETA.PROP_RVECTOR_G, Callback('EL', et_2, 'PROP', 75), ...
	ETA.PROP_CVECTOR_G, Callback('EL', et_2, 'PROP', 76), ...
	ETA.PROP_MATRIX_G, Callback('EL', et_2, 'PROP', 77), ...
	ETA.PROP_SMATRIX_G, Callback('EL', et_2, 'PROP', 78), ...
	ETA.PROP_CELL_G, Callback('EL', et_2, 'PROP', 79), ...
	ETA.PROP_NET_G, Callback('EL', et_2, 'PROP', 80), ...
	ETA.PROP_EMPTY_R, NoValue(), ...
	ETA.PROP_STRING_R, NoValue(), ...
	ETA.PROP_LOGICAL_R, NoValue(), ...
	ETA.PROP_OPTION_R, NoValue(), ...
	ETA.PROP_CLASS_R, NoValue(), ...
	ETA.PROP_CLASSLIST_R, NoValue(), ...
	ETA.PROP_ITEM_R, NoValue(), ...
	ETA.PROP_ITEMLIST_R, NoValue(), ...
	ETA.PROP_IDICT_R, NoValue(), ...
	ETA.PROP_SCALAR_R, NoValue(), ...
	ETA.PROP_RVECTOR_R, NoValue(), ...
	ETA.PROP_CVECTOR_R, NoValue(), ...
	ETA.PROP_MATRIX_R, NoValue(), ...
	ETA.PROP_SMATRIX_R, NoValue(), ...
	ETA.PROP_CELL_R, NoValue(), ...
	ETA.PROP_NET_R, NoValue(), ...
	ETA.PROP_EMPTY_R_CALC, NoValue(), ...
	ETA.PROP_STRING_R_CALC, NoValue(), ...
	ETA.PROP_LOGICAL_R_CALC, NoValue(), ...
	ETA.PROP_OPTION_R_CALC, NoValue(), ...
	ETA.PROP_CLASS_R_CALC, NoValue(), ...
	ETA.PROP_CLASSLIST_R_CALC, NoValue(), ...
	ETA.PROP_ITEM_R_CALC, NoValue(), ...
	ETA.PROP_ITEMLIST_R_CALC, NoValue(), ...
	ETA.PROP_IDICT_R_CALC, NoValue(), ...
	ETA.PROP_SCALAR_R_CALC, NoValue(), ...
	ETA.PROP_RVECTOR_R_CALC, NoValue(), ...
	ETA.PROP_CVECTOR_R_CALC, NoValue(), ...
	ETA.PROP_MATRIX_R_CALC, NoValue(), ...
	ETA.PROP_SMATRIX_R_CALC, NoValue(), ...
	ETA.PROP_CELL_R_CALC, NoValue(), ...
	ETA.PROP_NET_R_CALC, NoValue() ...
	);
	
prop_number = ETA.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETA.getPropTag(prop));
	switch ETA.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(et_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(et_3.get(prop), et_0.get(prop)) && ~isa(et_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(et_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:ETA')
et = ETA( ...
	ETA.PROP_EMPTY_M, ETA.getPropDefault(ETA.PROP_EMPTY_M), ...
	ETA.PROP_STRING_M, ETA.getPropDefault(ETA.PROP_STRING_M), ...
	ETA.PROP_LOGICAL_M, ETA.getPropDefault(ETA.PROP_LOGICAL_M), ...
	ETA.PROP_OPTION_M, ETA.getPropDefault(ETA.PROP_OPTION_M), ...
	ETA.PROP_CLASS_M, ETA.getPropDefault(ETA.PROP_CLASS_M), ...
	ETA.PROP_CLASSLIST_M, ETA.getPropDefault(ETA.PROP_CLASSLIST_M), ...
	ETA.PROP_ITEM_M, ETA.getPropDefault(ETA.PROP_ITEM_M), ...
	ETA.PROP_ITEMLIST_M, ETA.getPropDefault(ETA.PROP_ITEMLIST_M), ...
	ETA.PROP_IDICT_M, ETA.getPropDefault(ETA.PROP_IDICT_M), ...
	ETA.PROP_SCALAR_M, ETA.getPropDefault(ETA.PROP_SCALAR_M), ...
	ETA.PROP_RVECTOR_M, ETA.getPropDefault(ETA.PROP_RVECTOR_M), ...
	ETA.PROP_CVECTOR_M, ETA.getPropDefault(ETA.PROP_CVECTOR_M), ...
	ETA.PROP_MATRIX_M, ETA.getPropDefault(ETA.PROP_MATRIX_M), ...
	ETA.PROP_SMATRIX_M, ETA.getPropDefault(ETA.PROP_SMATRIX_M), ...
	ETA.PROP_CELL_M, ETA.getPropDefault(ETA.PROP_CELL_M), ...
	ETA.PROP_NET_M, ETA.getPropDefault(ETA.PROP_NET_M), ...
	ETA.PROP_EMPTY_P, ETA.getPropDefault(ETA.PROP_EMPTY_P), ...
	ETA.PROP_STRING_P, ETA.getPropDefault(ETA.PROP_STRING_P), ...
	ETA.PROP_LOGICAL_P, ETA.getPropDefault(ETA.PROP_LOGICAL_P), ...
	ETA.PROP_OPTION_P, ETA.getPropDefault(ETA.PROP_OPTION_P), ...
	ETA.PROP_CLASS_P, ETA.getPropDefault(ETA.PROP_CLASS_P), ...
	ETA.PROP_CLASSLIST_P, ETA.getPropDefault(ETA.PROP_CLASSLIST_P), ...
	ETA.PROP_ITEM_P, ETA.getPropDefault(ETA.PROP_ITEM_P), ...
	ETA.PROP_ITEMLIST_P, ETA.getPropDefault(ETA.PROP_ITEMLIST_P), ...
	ETA.PROP_IDICT_P, ETA.getPropDefault(ETA.PROP_IDICT_P), ...
	ETA.PROP_SCALAR_P, ETA.getPropDefault(ETA.PROP_SCALAR_P), ...
	ETA.PROP_RVECTOR_P, ETA.getPropDefault(ETA.PROP_RVECTOR_P), ...
	ETA.PROP_CVECTOR_P, ETA.getPropDefault(ETA.PROP_CVECTOR_P), ...
	ETA.PROP_MATRIX_P, ETA.getPropDefault(ETA.PROP_MATRIX_P), ...
	ETA.PROP_SMATRIX_P, ETA.getPropDefault(ETA.PROP_SMATRIX_P), ...
	ETA.PROP_CELL_P, ETA.getPropDefault(ETA.PROP_CELL_P), ...
	ETA.PROP_NET_P, ETA.getPropDefault(ETA.PROP_NET_P), ...
	ETA.PROP_EMPTY_D, ETA.getPropDefault(ETA.PROP_EMPTY_D), ...
	ETA.PROP_STRING_D, ETA.getPropDefault(ETA.PROP_STRING_D), ...
	ETA.PROP_LOGICAL_D, ETA.getPropDefault(ETA.PROP_LOGICAL_D), ...
	ETA.PROP_OPTION_D, ETA.getPropDefault(ETA.PROP_OPTION_D), ...
	ETA.PROP_CLASS_D, ETA.getPropDefault(ETA.PROP_CLASS_D), ...
	ETA.PROP_CLASSLIST_D, ETA.getPropDefault(ETA.PROP_CLASSLIST_D), ...
	ETA.PROP_ITEM_D, ETA.getPropDefault(ETA.PROP_ITEM_D), ...
	ETA.PROP_ITEMLIST_D, ETA.getPropDefault(ETA.PROP_ITEMLIST_D), ...
	ETA.PROP_IDICT_D, ETA.getPropDefault(ETA.PROP_IDICT_D), ...
	ETA.PROP_SCALAR_D, ETA.getPropDefault(ETA.PROP_SCALAR_D), ...
	ETA.PROP_RVECTOR_D, ETA.getPropDefault(ETA.PROP_RVECTOR_D), ...
	ETA.PROP_CVECTOR_D, ETA.getPropDefault(ETA.PROP_CVECTOR_D), ...
	ETA.PROP_MATRIX_D, ETA.getPropDefault(ETA.PROP_MATRIX_D), ...
	ETA.PROP_SMATRIX_D, ETA.getPropDefault(ETA.PROP_SMATRIX_D), ...
	ETA.PROP_CELL_D, ETA.getPropDefault(ETA.PROP_CELL_D), ...
	ETA.PROP_NET_D, ETA.getPropDefault(ETA.PROP_NET_D), ...
	ETA.PROP_EMPTY_F, ETA.getPropDefault(ETA.PROP_EMPTY_F), ...
	ETA.PROP_STRING_F, ETA.getPropDefault(ETA.PROP_STRING_F), ...
	ETA.PROP_LOGICAL_F, ETA.getPropDefault(ETA.PROP_LOGICAL_F), ...
	ETA.PROP_OPTION_F, ETA.getPropDefault(ETA.PROP_OPTION_F), ...
	ETA.PROP_CLASS_F, ETA.getPropDefault(ETA.PROP_CLASS_F), ...
	ETA.PROP_CLASSLIST_F, ETA.getPropDefault(ETA.PROP_CLASSLIST_F), ...
	ETA.PROP_ITEM_F, ETA.getPropDefault(ETA.PROP_ITEM_F), ...
	ETA.PROP_ITEMLIST_F, ETA.getPropDefault(ETA.PROP_ITEMLIST_F), ...
	ETA.PROP_IDICT_F, ETA.getPropDefault(ETA.PROP_IDICT_F), ...
	ETA.PROP_SCALAR_F, ETA.getPropDefault(ETA.PROP_SCALAR_F), ...
	ETA.PROP_RVECTOR_F, ETA.getPropDefault(ETA.PROP_RVECTOR_F), ...
	ETA.PROP_CVECTOR_F, ETA.getPropDefault(ETA.PROP_CVECTOR_F), ...
	ETA.PROP_MATRIX_F, ETA.getPropDefault(ETA.PROP_MATRIX_F), ...
	ETA.PROP_SMATRIX_F, ETA.getPropDefault(ETA.PROP_SMATRIX_F), ...
	ETA.PROP_CELL_F, ETA.getPropDefault(ETA.PROP_CELL_F), ...
	ETA.PROP_NET_F, ETA.getPropDefault(ETA.PROP_NET_F), ...
	ETA.PROP_EMPTY_G, ETA.getPropDefault(ETA.PROP_EMPTY_G), ...
	ETA.PROP_STRING_G, ETA.getPropDefault(ETA.PROP_STRING_G), ...
	ETA.PROP_LOGICAL_G, ETA.getPropDefault(ETA.PROP_LOGICAL_G), ...
	ETA.PROP_OPTION_G, ETA.getPropDefault(ETA.PROP_OPTION_G), ...
	ETA.PROP_CLASS_G, ETA.getPropDefault(ETA.PROP_CLASS_G), ...
	ETA.PROP_CLASSLIST_G, ETA.getPropDefault(ETA.PROP_CLASSLIST_G), ...
	ETA.PROP_ITEM_G, ETA.getPropDefault(ETA.PROP_ITEM_G), ...
	ETA.PROP_ITEMLIST_G, ETA.getPropDefault(ETA.PROP_ITEMLIST_G), ...
	ETA.PROP_IDICT_G, ETA.getPropDefault(ETA.PROP_IDICT_G), ...
	ETA.PROP_SCALAR_G, ETA.getPropDefault(ETA.PROP_SCALAR_G), ...
	ETA.PROP_RVECTOR_G, ETA.getPropDefault(ETA.PROP_RVECTOR_G), ...
	ETA.PROP_CVECTOR_G, ETA.getPropDefault(ETA.PROP_CVECTOR_G), ...
	ETA.PROP_MATRIX_G, ETA.getPropDefault(ETA.PROP_MATRIX_G), ...
	ETA.PROP_SMATRIX_G, ETA.getPropDefault(ETA.PROP_SMATRIX_G), ...
	ETA.PROP_CELL_G, ETA.getPropDefault(ETA.PROP_CELL_G), ...
	ETA.PROP_NET_G, ETA.getPropDefault(ETA.PROP_NET_G), ...
	ETA.PROP_EMPTY_R, ETA.getPropDefault(ETA.PROP_EMPTY_R), ...
	ETA.PROP_STRING_R, ETA.getPropDefault(ETA.PROP_STRING_R), ...
	ETA.PROP_LOGICAL_R, ETA.getPropDefault(ETA.PROP_LOGICAL_R), ...
	ETA.PROP_OPTION_R, ETA.getPropDefault(ETA.PROP_OPTION_R), ...
	ETA.PROP_CLASS_R, ETA.getPropDefault(ETA.PROP_CLASS_R), ...
	ETA.PROP_CLASSLIST_R, ETA.getPropDefault(ETA.PROP_CLASSLIST_R), ...
	ETA.PROP_ITEM_R, ETA.getPropDefault(ETA.PROP_ITEM_R), ...
	ETA.PROP_ITEMLIST_R, ETA.getPropDefault(ETA.PROP_ITEMLIST_R), ...
	ETA.PROP_IDICT_R, ETA.getPropDefault(ETA.PROP_IDICT_R), ...
	ETA.PROP_SCALAR_R, ETA.getPropDefault(ETA.PROP_SCALAR_R), ...
	ETA.PROP_RVECTOR_R, ETA.getPropDefault(ETA.PROP_RVECTOR_R), ...
	ETA.PROP_CVECTOR_R, ETA.getPropDefault(ETA.PROP_CVECTOR_R), ...
	ETA.PROP_MATRIX_R, ETA.getPropDefault(ETA.PROP_MATRIX_R), ...
	ETA.PROP_SMATRIX_R, ETA.getPropDefault(ETA.PROP_SMATRIX_R), ...
	ETA.PROP_CELL_R, ETA.getPropDefault(ETA.PROP_CELL_R), ...
	ETA.PROP_NET_R, ETA.getPropDefault(ETA.PROP_NET_R), ...
	ETA.PROP_EMPTY_R_CALC, ETA.getPropDefault(ETA.PROP_EMPTY_R_CALC), ...
	ETA.PROP_STRING_R_CALC, ETA.getPropDefault(ETA.PROP_STRING_R_CALC), ...
	ETA.PROP_LOGICAL_R_CALC, ETA.getPropDefault(ETA.PROP_LOGICAL_R_CALC), ...
	ETA.PROP_OPTION_R_CALC, ETA.getPropDefault(ETA.PROP_OPTION_R_CALC), ...
	ETA.PROP_CLASS_R_CALC, ETA.getPropDefault(ETA.PROP_CLASS_R_CALC), ...
	ETA.PROP_CLASSLIST_R_CALC, ETA.getPropDefault(ETA.PROP_CLASSLIST_R_CALC), ...
	ETA.PROP_ITEM_R_CALC, ETA.getPropDefault(ETA.PROP_ITEM_R_CALC), ...
	ETA.PROP_ITEMLIST_R_CALC, ETA.getPropDefault(ETA.PROP_ITEMLIST_R_CALC), ...
	ETA.PROP_IDICT_R_CALC, ETA.getPropDefault(ETA.PROP_IDICT_R_CALC), ...
	ETA.PROP_SCALAR_R_CALC, ETA.getPropDefault(ETA.PROP_SCALAR_R_CALC), ...
	ETA.PROP_RVECTOR_R_CALC, ETA.getPropDefault(ETA.PROP_RVECTOR_R_CALC), ...
	ETA.PROP_CVECTOR_R_CALC, ETA.getPropDefault(ETA.PROP_CVECTOR_R_CALC), ...
	ETA.PROP_MATRIX_R_CALC, ETA.getPropDefault(ETA.PROP_MATRIX_R_CALC), ...
	ETA.PROP_SMATRIX_R_CALC, ETA.getPropDefault(ETA.PROP_SMATRIX_R_CALC), ...
	ETA.PROP_CELL_R_CALC, ETA.getPropDefault(ETA.PROP_CELL_R_CALC), ...
	ETA.PROP_NET_R_CALC, ETA.getPropDefault(ETA.PROP_NET_R_CALC) ...
	);
warning('on', 'BRAPH2:ETA')

prop_number = ETA.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETA.getPropTag(prop));
	switch ETA.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(et.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(et.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(et.getPropSettings(prop))
				assert( ...
					et.checkFormat(et.getPropFormat(prop), et.get(prop)), ...
					[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
					['ETA.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					et.checkFormat(et.getPropFormat(prop), et.get(prop), et.getPropSettings(prop)), ...
					[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
					['ETA.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:ETA')
et = ETA( ...
	ETA.PROP_EMPTY_M, ETA.getPropDefault(ETA.PROP_EMPTY_M), ...
	ETA.PROP_STRING_M, ETA.getPropDefault(ETA.PROP_STRING_M), ...
	ETA.PROP_LOGICAL_M, ETA.getPropDefault(ETA.PROP_LOGICAL_M), ...
	ETA.PROP_OPTION_M, ETA.getPropDefault(ETA.PROP_OPTION_M), ...
	ETA.PROP_CLASS_M, ETA.getPropDefault(ETA.PROP_CLASS_M), ...
	ETA.PROP_CLASSLIST_M, ETA.getPropDefault(ETA.PROP_CLASSLIST_M), ...
	ETA.PROP_ITEM_M, ETA.getPropDefault(ETA.PROP_ITEM_M), ...
	ETA.PROP_ITEMLIST_M, ETA.getPropDefault(ETA.PROP_ITEMLIST_M), ...
	ETA.PROP_IDICT_M, ETA.getPropDefault(ETA.PROP_IDICT_M), ...
	ETA.PROP_SCALAR_M, ETA.getPropDefault(ETA.PROP_SCALAR_M), ...
	ETA.PROP_RVECTOR_M, ETA.getPropDefault(ETA.PROP_RVECTOR_M), ...
	ETA.PROP_CVECTOR_M, ETA.getPropDefault(ETA.PROP_CVECTOR_M), ...
	ETA.PROP_MATRIX_M, ETA.getPropDefault(ETA.PROP_MATRIX_M), ...
	ETA.PROP_SMATRIX_M, ETA.getPropDefault(ETA.PROP_SMATRIX_M), ...
	ETA.PROP_CELL_M, ETA.getPropDefault(ETA.PROP_CELL_M), ...
	ETA.PROP_NET_M, ETA.getPropDefault(ETA.PROP_NET_M), ...
	ETA.PROP_EMPTY_P, ETA.getPropDefault(ETA.PROP_EMPTY_P), ...
	ETA.PROP_STRING_P, ETA.getPropDefault(ETA.PROP_STRING_P), ...
	ETA.PROP_LOGICAL_P, ETA.getPropDefault(ETA.PROP_LOGICAL_P), ...
	ETA.PROP_OPTION_P, ETA.getPropDefault(ETA.PROP_OPTION_P), ...
	ETA.PROP_CLASS_P, ETA.getPropDefault(ETA.PROP_CLASS_P), ...
	ETA.PROP_CLASSLIST_P, ETA.getPropDefault(ETA.PROP_CLASSLIST_P), ...
	ETA.PROP_ITEM_P, ETA.getPropDefault(ETA.PROP_ITEM_P), ...
	ETA.PROP_ITEMLIST_P, ETA.getPropDefault(ETA.PROP_ITEMLIST_P), ...
	ETA.PROP_IDICT_P, ETA.getPropDefault(ETA.PROP_IDICT_P), ...
	ETA.PROP_SCALAR_P, ETA.getPropDefault(ETA.PROP_SCALAR_P), ...
	ETA.PROP_RVECTOR_P, ETA.getPropDefault(ETA.PROP_RVECTOR_P), ...
	ETA.PROP_CVECTOR_P, ETA.getPropDefault(ETA.PROP_CVECTOR_P), ...
	ETA.PROP_MATRIX_P, ETA.getPropDefault(ETA.PROP_MATRIX_P), ...
	ETA.PROP_SMATRIX_P, ETA.getPropDefault(ETA.PROP_SMATRIX_P), ...
	ETA.PROP_CELL_P, ETA.getPropDefault(ETA.PROP_CELL_P), ...
	ETA.PROP_NET_P, ETA.getPropDefault(ETA.PROP_NET_P), ...
	ETA.PROP_EMPTY_D, ETA.getPropDefault(ETA.PROP_EMPTY_D), ...
	ETA.PROP_STRING_D, ETA.getPropDefault(ETA.PROP_STRING_D), ...
	ETA.PROP_LOGICAL_D, ETA.getPropDefault(ETA.PROP_LOGICAL_D), ...
	ETA.PROP_OPTION_D, ETA.getPropDefault(ETA.PROP_OPTION_D), ...
	ETA.PROP_CLASS_D, ETA.getPropDefault(ETA.PROP_CLASS_D), ...
	ETA.PROP_CLASSLIST_D, ETA.getPropDefault(ETA.PROP_CLASSLIST_D), ...
	ETA.PROP_ITEM_D, ETA.getPropDefault(ETA.PROP_ITEM_D), ...
	ETA.PROP_ITEMLIST_D, ETA.getPropDefault(ETA.PROP_ITEMLIST_D), ...
	ETA.PROP_IDICT_D, ETA.getPropDefault(ETA.PROP_IDICT_D), ...
	ETA.PROP_SCALAR_D, ETA.getPropDefault(ETA.PROP_SCALAR_D), ...
	ETA.PROP_RVECTOR_D, ETA.getPropDefault(ETA.PROP_RVECTOR_D), ...
	ETA.PROP_CVECTOR_D, ETA.getPropDefault(ETA.PROP_CVECTOR_D), ...
	ETA.PROP_MATRIX_D, ETA.getPropDefault(ETA.PROP_MATRIX_D), ...
	ETA.PROP_SMATRIX_D, ETA.getPropDefault(ETA.PROP_SMATRIX_D), ...
	ETA.PROP_CELL_D, ETA.getPropDefault(ETA.PROP_CELL_D), ...
	ETA.PROP_NET_D, ETA.getPropDefault(ETA.PROP_NET_D), ...
	ETA.PROP_EMPTY_F, ETA.getPropDefault(ETA.PROP_EMPTY_F), ...
	ETA.PROP_STRING_F, ETA.getPropDefault(ETA.PROP_STRING_F), ...
	ETA.PROP_LOGICAL_F, ETA.getPropDefault(ETA.PROP_LOGICAL_F), ...
	ETA.PROP_OPTION_F, ETA.getPropDefault(ETA.PROP_OPTION_F), ...
	ETA.PROP_CLASS_F, ETA.getPropDefault(ETA.PROP_CLASS_F), ...
	ETA.PROP_CLASSLIST_F, ETA.getPropDefault(ETA.PROP_CLASSLIST_F), ...
	ETA.PROP_ITEM_F, ETA.getPropDefault(ETA.PROP_ITEM_F), ...
	ETA.PROP_ITEMLIST_F, ETA.getPropDefault(ETA.PROP_ITEMLIST_F), ...
	ETA.PROP_IDICT_F, ETA.getPropDefault(ETA.PROP_IDICT_F), ...
	ETA.PROP_SCALAR_F, ETA.getPropDefault(ETA.PROP_SCALAR_F), ...
	ETA.PROP_RVECTOR_F, ETA.getPropDefault(ETA.PROP_RVECTOR_F), ...
	ETA.PROP_CVECTOR_F, ETA.getPropDefault(ETA.PROP_CVECTOR_F), ...
	ETA.PROP_MATRIX_F, ETA.getPropDefault(ETA.PROP_MATRIX_F), ...
	ETA.PROP_SMATRIX_F, ETA.getPropDefault(ETA.PROP_SMATRIX_F), ...
	ETA.PROP_CELL_F, ETA.getPropDefault(ETA.PROP_CELL_F), ...
	ETA.PROP_NET_F, ETA.getPropDefault(ETA.PROP_NET_F), ...
	ETA.PROP_EMPTY_G, ETA.getPropDefault(ETA.PROP_EMPTY_G), ...
	ETA.PROP_STRING_G, ETA.getPropDefault(ETA.PROP_STRING_G), ...
	ETA.PROP_LOGICAL_G, ETA.getPropDefault(ETA.PROP_LOGICAL_G), ...
	ETA.PROP_OPTION_G, ETA.getPropDefault(ETA.PROP_OPTION_G), ...
	ETA.PROP_CLASS_G, ETA.getPropDefault(ETA.PROP_CLASS_G), ...
	ETA.PROP_CLASSLIST_G, ETA.getPropDefault(ETA.PROP_CLASSLIST_G), ...
	ETA.PROP_ITEM_G, ETA.getPropDefault(ETA.PROP_ITEM_G), ...
	ETA.PROP_ITEMLIST_G, ETA.getPropDefault(ETA.PROP_ITEMLIST_G), ...
	ETA.PROP_IDICT_G, ETA.getPropDefault(ETA.PROP_IDICT_G), ...
	ETA.PROP_SCALAR_G, ETA.getPropDefault(ETA.PROP_SCALAR_G), ...
	ETA.PROP_RVECTOR_G, ETA.getPropDefault(ETA.PROP_RVECTOR_G), ...
	ETA.PROP_CVECTOR_G, ETA.getPropDefault(ETA.PROP_CVECTOR_G), ...
	ETA.PROP_MATRIX_G, ETA.getPropDefault(ETA.PROP_MATRIX_G), ...
	ETA.PROP_SMATRIX_G, ETA.getPropDefault(ETA.PROP_SMATRIX_G), ...
	ETA.PROP_CELL_G, ETA.getPropDefault(ETA.PROP_CELL_G), ...
	ETA.PROP_NET_G, ETA.getPropDefault(ETA.PROP_NET_G), ...
	ETA.PROP_EMPTY_R, ETA.getPropDefault(ETA.PROP_EMPTY_R), ...
	ETA.PROP_STRING_R, ETA.getPropDefault(ETA.PROP_STRING_R), ...
	ETA.PROP_LOGICAL_R, ETA.getPropDefault(ETA.PROP_LOGICAL_R), ...
	ETA.PROP_OPTION_R, ETA.getPropDefault(ETA.PROP_OPTION_R), ...
	ETA.PROP_CLASS_R, ETA.getPropDefault(ETA.PROP_CLASS_R), ...
	ETA.PROP_CLASSLIST_R, ETA.getPropDefault(ETA.PROP_CLASSLIST_R), ...
	ETA.PROP_ITEM_R, ETA.getPropDefault(ETA.PROP_ITEM_R), ...
	ETA.PROP_ITEMLIST_R, ETA.getPropDefault(ETA.PROP_ITEMLIST_R), ...
	ETA.PROP_IDICT_R, ETA.getPropDefault(ETA.PROP_IDICT_R), ...
	ETA.PROP_SCALAR_R, ETA.getPropDefault(ETA.PROP_SCALAR_R), ...
	ETA.PROP_RVECTOR_R, ETA.getPropDefault(ETA.PROP_RVECTOR_R), ...
	ETA.PROP_CVECTOR_R, ETA.getPropDefault(ETA.PROP_CVECTOR_R), ...
	ETA.PROP_MATRIX_R, ETA.getPropDefault(ETA.PROP_MATRIX_R), ...
	ETA.PROP_SMATRIX_R, ETA.getPropDefault(ETA.PROP_SMATRIX_R), ...
	ETA.PROP_CELL_R, ETA.getPropDefault(ETA.PROP_CELL_R), ...
	ETA.PROP_NET_R, ETA.getPropDefault(ETA.PROP_NET_R), ...
	ETA.PROP_EMPTY_R_CALC, ETA.getPropDefault(ETA.PROP_EMPTY_R_CALC), ...
	ETA.PROP_STRING_R_CALC, ETA.getPropDefault(ETA.PROP_STRING_R_CALC), ...
	ETA.PROP_LOGICAL_R_CALC, ETA.getPropDefault(ETA.PROP_LOGICAL_R_CALC), ...
	ETA.PROP_OPTION_R_CALC, ETA.getPropDefault(ETA.PROP_OPTION_R_CALC), ...
	ETA.PROP_CLASS_R_CALC, ETA.getPropDefault(ETA.PROP_CLASS_R_CALC), ...
	ETA.PROP_CLASSLIST_R_CALC, ETA.getPropDefault(ETA.PROP_CLASSLIST_R_CALC), ...
	ETA.PROP_ITEM_R_CALC, ETA.getPropDefault(ETA.PROP_ITEM_R_CALC), ...
	ETA.PROP_ITEMLIST_R_CALC, ETA.getPropDefault(ETA.PROP_ITEMLIST_R_CALC), ...
	ETA.PROP_IDICT_R_CALC, ETA.getPropDefault(ETA.PROP_IDICT_R_CALC), ...
	ETA.PROP_SCALAR_R_CALC, ETA.getPropDefault(ETA.PROP_SCALAR_R_CALC), ...
	ETA.PROP_RVECTOR_R_CALC, ETA.getPropDefault(ETA.PROP_RVECTOR_R_CALC), ...
	ETA.PROP_CVECTOR_R_CALC, ETA.getPropDefault(ETA.PROP_CVECTOR_R_CALC), ...
	ETA.PROP_MATRIX_R_CALC, ETA.getPropDefault(ETA.PROP_MATRIX_R_CALC), ...
	ETA.PROP_SMATRIX_R_CALC, ETA.getPropDefault(ETA.PROP_SMATRIX_R_CALC), ...
	ETA.PROP_CELL_R_CALC, ETA.getPropDefault(ETA.PROP_CELL_R_CALC), ...
	ETA.PROP_NET_R_CALC, ETA.getPropDefault(ETA.PROP_NET_R_CALC) ...
	);
warning('on', 'BRAPH2:ETA')

for prop = 1:1:ETA.getPropNumber()
	TAG = upper(ETA.getPropTag(prop));
	switch ETA.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(et.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(et.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(et.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(et.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				et.checkFormat(et.getPropFormat(prop), et.getr(prop),et.getPropSettings(prop)), ...
				[BRAPH2.STR ':ETA:' BRAPH2.BUG_FUNC], ...
				['ETA.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: Empty

et = ETA();
assert(isempty(et.get('PROP_EMPTY_R_CALC')))

%% Test 6: String

et = ETA('PROP_STRING_P', 'param', 'PROP_STRING_D', 'data');
assert(ischar(et.get('PROP_STRING_R_CALC')))

%% Test 7: Logical

et = ETA('PROP_LOGICAL_P', true, 'PROP_LOGICAL_D', false);
assert(islogical(et.get('PROP_LOGICAL_R_CALC')))

%% Test 8: Option

et = ETA('PROP_OPTION_P', 'two');
assert(any(strcmpi(et.get('PROP_OPTION_P'), et.get('PROP_OPTION_R_CALC'))))

%% Test 9: Matrix & randomness

et_1 = ETA();
value_1 = et_1.get('PROP_MATRIX_R_CALC');
assert(isequal(value_1, et_1.get('PROP_MATRIX_R_CALC')))

et_2 = ETA();
value_2 = et_2.get('PROP_MATRIX_R_CALC');
assert(isequal(value_2, et_2.get('PROP_MATRIX_R_CALC')))

assert(~isequal(value_1, value_2)) % different values!

rng(0)
et_3 = ETA();
value_3 = et_3.get('PROP_MATRIX_R_CALC');
assert(isequal(value_3, et_3.get('PROP_MATRIX_R_CALC')))

rng(0)
et_4 = ETA();
value_4 = et_4.get('PROP_MATRIX_R_CALC');
assert(isequal(value_4, et_4.get('PROP_MATRIX_R_CALC')))

assert(isequal(value_4, value_4)) % same values!

%% Test 10: Scalar & prop backup

et_1 = ETA('PROP_SCALAR_D', 2);
assert(et_1.get('PROP_SCALAR_R_CALC') == pi + 2)

et_2 = ETA('PROP_SCALAR_D', 2);
et_2.set('PROP_SCALAR_P', 1)
assert(et_2.get('PROP_SCALAR_R_CALC') == 1 + 2)

warning('off', [BRAPH2.STR ':ETA'])
et_2.set('PROP_SCALAR_P', 100)
assert(et_2.get('PROP_SCALAR_R_CALC') == 1 + 2) % i.e. it has not been updated
warning('on', [BRAPH2.STR ':ETA'])

et_3 = ETA('PROP_SCALAR_D', 2);
assert_with_error('varargin{1}.set(''PROP_SCALAR_P'', -2)', ...
    [BRAPH2.STR ':ETA:' BRAPH2.WRONG_INPUT], ...
    et_3)
assert(et_3.get('PROP_SCALAR_R_CALC') == pi + 2)

et_4 = ETA('PROP_SCALAR_D', 2);
assert_with_error('varargin{1}.set(''PROP_SCALAR_P'', ''a'')', ...
    [BRAPH2.STR ':ETA:' BRAPH2.WRONG_INPUT], ...
    et_4)
assert(et_4.get('PROP_SCALAR_R_CALC') == pi + 2)

%% Test 11: Cell & conditioning

assert_with_error('et = ETA(''PROP_SCALAR_P'', rand(5))', ...
    [BRAPH2.STR ':ETA:' BRAPH2.WRONG_INPUT])
et = ETA('PROP_CELL_D', rand(5));

%% Test 12: Deep copy NoValue

et = ETA();
et_copy = et.copy();
assert(et_copy.getr(5) == et.getr(5) && ...
    et_copy.getr(5) ~= NoValue() && ...
    et.getr(5) ~= NoValue(), ...
    [BRAPH2.STR ':ETA:' BRAPH2.BUG_COPY], ...
    'All NoValue objects must point to the same object instance for computational efficiency.')


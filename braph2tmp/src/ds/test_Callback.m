%TEST_CALLBACK

%% Test 1.1: Instantiation - empty

cb = Callback();

prop_number = Callback.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(Callback.getPropTag(prop));
	assert( ...
		isa(cb.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
		['Callback.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in Callback.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(cb.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
		['Callback.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in Callback.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:Callback')
cb = Callback( ...
	Callback.EL, Callback.getPropDefault(Callback.EL), ...
	Callback.PROP, Callback.getPropDefault(Callback.PROP), ...
	Callback.TAG, Callback.getPropDefault(Callback.TAG) ...
	);
warning('on', 'BRAPH2:Callback')

for prop = 1:1:Callback.getPropNumber()
	TAG = upper(Callback.getPropTag(prop));
	switch Callback.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(cb.getr(prop), Callback.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Callback.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by Callback.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in Callback.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(cb.getr(TAG), Callback.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Callback.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by Callback.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in Callback.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(cb.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Being a result, Callback.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in Callback.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(cb.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Being a result, Callback.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in Callback.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

% this test is not implemented for Callback

%% Test 3: Result

warning('off', 'BRAPH2:Callback')
cb = Callback( ...
	Callback.EL, Callback.getPropDefault(Callback.EL), ...
	Callback.PROP, Callback.getPropDefault(Callback.PROP), ...
	Callback.TAG, Callback.getPropDefault(Callback.TAG) ...
	);
warning('on', 'BRAPH2:Callback')

prop_number = Callback.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(Callback.getPropTag(prop));
	switch Callback.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(cb.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Callback.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(cb.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Callback.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(cb.getPropSettings(prop))
				assert( ...
					cb.checkFormat(cb.getPropFormat(prop), cb.get(prop)), ...
					[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
					['Callback.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					cb.checkFormat(cb.getPropFormat(prop), cb.get(prop), cb.getPropSettings(prop)), ...
					[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
					['Callback.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:Callback')
cb = Callback( ...
	Callback.EL, Callback.getPropDefault(Callback.EL), ...
	Callback.PROP, Callback.getPropDefault(Callback.PROP), ...
	Callback.TAG, Callback.getPropDefault(Callback.TAG) ...
	);
warning('on', 'BRAPH2:Callback')

for prop = 1:1:Callback.getPropNumber()
	TAG = upper(Callback.getPropTag(prop));
	switch Callback.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(cb.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Callback.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(cb.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Callback.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(cb.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Callback.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(cb.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Callback.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				cb.checkFormat(cb.getPropFormat(prop), cb.getr(prop),cb.getPropSettings(prop)), ...
				[BRAPH2.STR ':Callback:' BRAPH2.BUG_FUNC], ...
				['Callback.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end


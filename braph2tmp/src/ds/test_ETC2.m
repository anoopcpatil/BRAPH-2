%TEST_ETC2

%% Test 1.1: Instantiation - empty

et = ETC2();

prop_number = ETC2.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETC2.getPropTag(prop));
	assert( ...
		isa(et.getr(prop), 'NoValue'), ...
		[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
		['ETC2.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
		'Or there could be an error in ETC2.getr(' int2str(prop) ').'] ...
		)
	assert( ...
		isa(et.getr(TAG), 'NoValue'), ...
		[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
		['ETC2.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
		'Or there could be an error in ETC2.getr(''' TAG ''').'] ...
		)
end

%% Test 1.2: Instantiation - defaults

warning('off', 'BRAPH2:ETC2')
et = ETC2( ...
	ETC2.NM, ETC2.getPropDefault(ETC2.NM), ...
	ETC2.NP, ETC2.getPropDefault(ETC2.NP), ...
	ETC2.ND, ETC2.getPropDefault(ETC2.ND), ...
	ETC2.NG, ETC2.getPropDefault(ETC2.NG), ...
	ETC2.NF, ETC2.getPropDefault(ETC2.NF), ...
	ETC2.NR, ETC2.getPropDefault(ETC2.NR), ...
	ETC2.SM, ETC2.getPropDefault(ETC2.SM), ...
	ETC2.SP, ETC2.getPropDefault(ETC2.SP), ...
	ETC2.SD, ETC2.getPropDefault(ETC2.SD), ...
	ETC2.SG, ETC2.getPropDefault(ETC2.SG), ...
	ETC2.SF, ETC2.getPropDefault(ETC2.SF), ...
	ETC2.SR, ETC2.getPropDefault(ETC2.SR), ...
	ETC2.CM, ETC2.getPropDefault(ETC2.CM), ...
	ETC2.CP, ETC2.getPropDefault(ETC2.CP), ...
	ETC2.CD, ETC2.getPropDefault(ETC2.CD), ...
	ETC2.CG, ETC2.getPropDefault(ETC2.CG), ...
	ETC2.CF, ETC2.getPropDefault(ETC2.CF), ...
	ETC2.CR, ETC2.getPropDefault(ETC2.CR), ...
	ETC2.RM, ETC2.getPropDefault(ETC2.RM), ...
	ETC2.RP, ETC2.getPropDefault(ETC2.RP), ...
	ETC2.RD, ETC2.getPropDefault(ETC2.RD), ...
	ETC2.RG, ETC2.getPropDefault(ETC2.RG), ...
	ETC2.RF, ETC2.getPropDefault(ETC2.RF), ...
	ETC2.RR, ETC2.getPropDefault(ETC2.RR) ...
	);
warning('on', 'BRAPH2:ETC2')

for prop = 1:1:ETC2.getPropNumber()
	TAG = upper(ETC2.getPropTag(prop));
	switch ETC2.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isequal(et.getr(prop), ETC2.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must be inizialized to its default value ' ...
				'given by ETC2.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in ETC2.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isequal(et.getr(TAG), ETC2.getPropDefaultConditioned(prop)), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(''' TAG ''') must be inizialized to its default value ' ...
				'given by ETC2.getPropDefaultConditioned(' int2str(prop) '). ' ...
				'Or there could be an error in ETC2.getr(''' TAG ''').'] ...
				)
		case Category.RESULT
			assert( ...
				isa(et.getr(prop), 'NoValue'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['Being a result, ETC2.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
				'Or there could be an error in ETC2.getr(' int2str(prop) ').'] ...
				)
			assert( ...
				isa(et.getr(TAG), 'NoValue'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['Being a result, ETC2.getr(''' TAG ''') must be inizialized to NoValue(). ' ...
				'Or there could be an error in ETC2.getr(''' TAG ''').'] ...
				)
	end
end

%% Test 2: Callbacks

warning('off', 'BRAPH2:ETC2')
et_0 = ETC2( ...
	ETC2.NM, ETC2.getPropDefault(ETC2.NM), ...
	ETC2.NP, ETC2.getPropDefault(ETC2.NP), ...
	ETC2.ND, ETC2.getPropDefault(ETC2.ND), ...
	ETC2.NG, ETC2.getPropDefault(ETC2.NG), ...
	ETC2.NF, ETC2.getPropDefault(ETC2.NF), ...
	ETC2.NR, ETC2.getPropDefault(ETC2.NR), ...
	ETC2.SM, ETC2.getPropDefault(ETC2.SM), ...
	ETC2.SP, ETC2.getPropDefault(ETC2.SP), ...
	ETC2.SD, ETC2.getPropDefault(ETC2.SD), ...
	ETC2.SG, ETC2.getPropDefault(ETC2.SG), ...
	ETC2.SF, ETC2.getPropDefault(ETC2.SF), ...
	ETC2.SR, ETC2.getPropDefault(ETC2.SR), ...
	ETC2.CM, ETC2.getPropDefault(ETC2.CM), ...
	ETC2.CP, ETC2.getPropDefault(ETC2.CP), ...
	ETC2.CD, ETC2.getPropDefault(ETC2.CD), ...
	ETC2.CG, ETC2.getPropDefault(ETC2.CG), ...
	ETC2.CF, ETC2.getPropDefault(ETC2.CF), ...
	ETC2.CR, ETC2.getPropDefault(ETC2.CR), ...
	ETC2.RM, ETC2.getPropDefault(ETC2.RM), ...
	ETC2.RP, ETC2.getPropDefault(ETC2.RP), ...
	ETC2.RD, ETC2.getPropDefault(ETC2.RD), ...
	ETC2.RG, ETC2.getPropDefault(ETC2.RG), ...
	ETC2.RF, ETC2.getPropDefault(ETC2.RF), ...
	ETC2.RR, ETC2.getPropDefault(ETC2.RR) ...
	);
warning('on', 'BRAPH2:ETC2')

et_1 = ETC2( ...
	ETC2.NM, ETC2.getPropDefault(ETC2.NM), ...
	ETC2.NP, Callback('EL', et_0, 'PROP', 2), ...
	ETC2.ND, Callback('EL', et_0, 'PROP', 3), ...
	ETC2.NG, Callback('EL', et_0, 'PROP', 4), ...
	ETC2.NF, Callback('EL', et_0, 'PROP', 5), ...
	ETC2.NR, NoValue(), ...
	ETC2.SM, ETC2.getPropDefault(ETC2.SM), ...
	ETC2.SP, Callback('EL', et_0, 'PROP', 8), ...
	ETC2.SD, Callback('EL', et_0, 'PROP', 9), ...
	ETC2.SG, Callback('EL', et_0, 'PROP', 10), ...
	ETC2.SF, Callback('EL', et_0, 'PROP', 11), ...
	ETC2.SR, NoValue(), ...
	ETC2.CM, ETC2.getPropDefault(ETC2.CM), ...
	ETC2.CP, Callback('EL', et_0, 'PROP', 14), ...
	ETC2.CD, Callback('EL', et_0, 'PROP', 15), ...
	ETC2.CG, Callback('EL', et_0, 'PROP', 16), ...
	ETC2.CF, Callback('EL', et_0, 'PROP', 17), ...
	ETC2.CR, NoValue(), ...
	ETC2.RM, ETC2.getPropDefault(ETC2.RM), ...
	ETC2.RP, Callback('EL', et_0, 'PROP', 20), ...
	ETC2.RD, Callback('EL', et_0, 'PROP', 21), ...
	ETC2.RG, Callback('EL', et_0, 'PROP', 22), ...
	ETC2.RF, Callback('EL', et_0, 'PROP', 23), ...
	ETC2.RR, NoValue() ...
	);
	
prop_number = ETC2.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETC2.getPropTag(prop));
	switch ETC2.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(et_1.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(et_1.get(prop), et_0.get(prop)) && ~isa(et_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(et_1.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
et_2 = ETC2( ...
	ETC2.NM, ETC2.getPropDefault(ETC2.NM), ...
	ETC2.NP, Callback('EL', et_1, 'PROP', 2), ...
	ETC2.ND, Callback('EL', et_1, 'PROP', 3), ...
	ETC2.NG, Callback('EL', et_1, 'PROP', 4), ...
	ETC2.NF, Callback('EL', et_1, 'PROP', 5), ...
	ETC2.NR, NoValue(), ...
	ETC2.SM, ETC2.getPropDefault(ETC2.SM), ...
	ETC2.SP, Callback('EL', et_1, 'PROP', 8), ...
	ETC2.SD, Callback('EL', et_1, 'PROP', 9), ...
	ETC2.SG, Callback('EL', et_1, 'PROP', 10), ...
	ETC2.SF, Callback('EL', et_1, 'PROP', 11), ...
	ETC2.SR, NoValue(), ...
	ETC2.CM, ETC2.getPropDefault(ETC2.CM), ...
	ETC2.CP, Callback('EL', et_1, 'PROP', 14), ...
	ETC2.CD, Callback('EL', et_1, 'PROP', 15), ...
	ETC2.CG, Callback('EL', et_1, 'PROP', 16), ...
	ETC2.CF, Callback('EL', et_1, 'PROP', 17), ...
	ETC2.CR, NoValue(), ...
	ETC2.RM, ETC2.getPropDefault(ETC2.RM), ...
	ETC2.RP, Callback('EL', et_1, 'PROP', 20), ...
	ETC2.RD, Callback('EL', et_1, 'PROP', 21), ...
	ETC2.RG, Callback('EL', et_1, 'PROP', 22), ...
	ETC2.RF, Callback('EL', et_1, 'PROP', 23), ...
	ETC2.RR, NoValue() ...
	);
	
prop_number = ETC2.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETC2.getPropTag(prop));
	switch ETC2.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(et_2.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(et_2.get(prop), et_0.get(prop)) && ~isa(et_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(et_2.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end
et_3 = ETC2( ...
	ETC2.NM, ETC2.getPropDefault(ETC2.NM), ...
	ETC2.NP, Callback('EL', et_2, 'PROP', 2), ...
	ETC2.ND, Callback('EL', et_2, 'PROP', 3), ...
	ETC2.NG, Callback('EL', et_2, 'PROP', 4), ...
	ETC2.NF, Callback('EL', et_2, 'PROP', 5), ...
	ETC2.NR, NoValue(), ...
	ETC2.SM, ETC2.getPropDefault(ETC2.SM), ...
	ETC2.SP, Callback('EL', et_2, 'PROP', 8), ...
	ETC2.SD, Callback('EL', et_2, 'PROP', 9), ...
	ETC2.SG, Callback('EL', et_2, 'PROP', 10), ...
	ETC2.SF, Callback('EL', et_2, 'PROP', 11), ...
	ETC2.SR, NoValue(), ...
	ETC2.CM, ETC2.getPropDefault(ETC2.CM), ...
	ETC2.CP, Callback('EL', et_2, 'PROP', 14), ...
	ETC2.CD, Callback('EL', et_2, 'PROP', 15), ...
	ETC2.CG, Callback('EL', et_2, 'PROP', 16), ...
	ETC2.CF, Callback('EL', et_2, 'PROP', 17), ...
	ETC2.CR, NoValue(), ...
	ETC2.RM, ETC2.getPropDefault(ETC2.RM), ...
	ETC2.RP, Callback('EL', et_2, 'PROP', 20), ...
	ETC2.RD, Callback('EL', et_2, 'PROP', 21), ...
	ETC2.RG, Callback('EL', et_2, 'PROP', 22), ...
	ETC2.RF, Callback('EL', et_2, 'PROP', 23), ...
	ETC2.RR, NoValue() ...
	);
	
prop_number = ETC2.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETC2.getPropTag(prop));
	switch ETC2.getPropCategory(prop)
		case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
			assert( ...
				isa(et_3.getr(prop),  'Callback'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must be a callback.'] ...
				)
			assert( ...
				isequal(et_3.get(prop), et_0.get(prop)) && ~isa(et_1.get(prop), 'Callback'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
				)
		case {Category.METADATA, Category.RESULT}
			assert( ...
				~isa(et_3.getr(prop), 'Callback'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must NOT be a callback.'] ...
				)
	end
end

%% Test 3: Result

warning('off', 'BRAPH2:ETC2')
et = ETC2( ...
	ETC2.NM, ETC2.getPropDefault(ETC2.NM), ...
	ETC2.NP, ETC2.getPropDefault(ETC2.NP), ...
	ETC2.ND, ETC2.getPropDefault(ETC2.ND), ...
	ETC2.NG, ETC2.getPropDefault(ETC2.NG), ...
	ETC2.NF, ETC2.getPropDefault(ETC2.NF), ...
	ETC2.NR, ETC2.getPropDefault(ETC2.NR), ...
	ETC2.SM, ETC2.getPropDefault(ETC2.SM), ...
	ETC2.SP, ETC2.getPropDefault(ETC2.SP), ...
	ETC2.SD, ETC2.getPropDefault(ETC2.SD), ...
	ETC2.SG, ETC2.getPropDefault(ETC2.SG), ...
	ETC2.SF, ETC2.getPropDefault(ETC2.SF), ...
	ETC2.SR, ETC2.getPropDefault(ETC2.SR), ...
	ETC2.CM, ETC2.getPropDefault(ETC2.CM), ...
	ETC2.CP, ETC2.getPropDefault(ETC2.CP), ...
	ETC2.CD, ETC2.getPropDefault(ETC2.CD), ...
	ETC2.CG, ETC2.getPropDefault(ETC2.CG), ...
	ETC2.CF, ETC2.getPropDefault(ETC2.CF), ...
	ETC2.CR, ETC2.getPropDefault(ETC2.CR), ...
	ETC2.RM, ETC2.getPropDefault(ETC2.RM), ...
	ETC2.RP, ETC2.getPropDefault(ETC2.RP), ...
	ETC2.RD, ETC2.getPropDefault(ETC2.RD), ...
	ETC2.RG, ETC2.getPropDefault(ETC2.RG), ...
	ETC2.RF, ETC2.getPropDefault(ETC2.RF), ...
	ETC2.RR, ETC2.getPropDefault(ETC2.RR) ...
	);
warning('on', 'BRAPH2:ETC2')

prop_number = ETC2.getPropNumber();
for prop = 1:1:prop_number
	TAG = upper(ETC2.getPropTag(prop));
	switch ETC2.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(et.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(et.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must be a NoValue, because it has not been memorized.'] ...
				)
			if isempty(et.getPropSettings(prop))
				assert( ...
					et.checkFormat(et.getPropFormat(prop), et.get(prop)), ...
					[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
					['ETC2.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			else
				assert( ...
					et.checkFormat(et.getPropFormat(prop), et.get(prop), et.getPropSettings(prop)), ...
					[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
					['ETC2.get(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			end
	end
end

%% Test 4: Memorize

warning('off', 'BRAPH2:ETC2')
et = ETC2( ...
	ETC2.NM, ETC2.getPropDefault(ETC2.NM), ...
	ETC2.NP, ETC2.getPropDefault(ETC2.NP), ...
	ETC2.ND, ETC2.getPropDefault(ETC2.ND), ...
	ETC2.NG, ETC2.getPropDefault(ETC2.NG), ...
	ETC2.NF, ETC2.getPropDefault(ETC2.NF), ...
	ETC2.NR, ETC2.getPropDefault(ETC2.NR), ...
	ETC2.SM, ETC2.getPropDefault(ETC2.SM), ...
	ETC2.SP, ETC2.getPropDefault(ETC2.SP), ...
	ETC2.SD, ETC2.getPropDefault(ETC2.SD), ...
	ETC2.SG, ETC2.getPropDefault(ETC2.SG), ...
	ETC2.SF, ETC2.getPropDefault(ETC2.SF), ...
	ETC2.SR, ETC2.getPropDefault(ETC2.SR), ...
	ETC2.CM, ETC2.getPropDefault(ETC2.CM), ...
	ETC2.CP, ETC2.getPropDefault(ETC2.CP), ...
	ETC2.CD, ETC2.getPropDefault(ETC2.CD), ...
	ETC2.CG, ETC2.getPropDefault(ETC2.CG), ...
	ETC2.CF, ETC2.getPropDefault(ETC2.CF), ...
	ETC2.CR, ETC2.getPropDefault(ETC2.CR), ...
	ETC2.RM, ETC2.getPropDefault(ETC2.RM), ...
	ETC2.RP, ETC2.getPropDefault(ETC2.RP), ...
	ETC2.RD, ETC2.getPropDefault(ETC2.RD), ...
	ETC2.RG, ETC2.getPropDefault(ETC2.RG), ...
	ETC2.RF, ETC2.getPropDefault(ETC2.RF), ...
	ETC2.RR, ETC2.getPropDefault(ETC2.RR) ...
	);
warning('on', 'BRAPH2:ETC2')

for prop = 1:1:ETC2.getPropNumber()
	TAG = upper(ETC2.getPropTag(prop));
	switch ETC2.getPropCategory(prop)
		case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
		case Category.RESULT
			assert( ...
				~isa(et.get(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				isa(et.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
				)
			assert( ...
				~isa(et.memorize(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
				)
			assert( ...
				~isa(et.getr(prop),  'NoValue'), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
				)
			assert( ...
				et.checkFormat(et.getPropFormat(prop), et.getr(prop),et.getPropSettings(prop)), ...
				[BRAPH2.STR ':ETC2:' BRAPH2.BUG_FUNC], ...
				['ETC2.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
				)
	end
end

%% Test 5: Conditioning

et = ETC2();

assert(et.get(ETC2.NM) == -1)
assert(et.get(ETC2.NP) == -2)
assert(et.get(ETC2.ND) == -3)
assert(et.get(ETC2.NG) == -4)
assert(et.get(ETC2.NF) == -5)
assert(et.get(ETC2.NR) == -6)

assert(strcmp(et.get(ETC2.SM), 'SM2'))
assert(strcmp(et.get(ETC2.SP), 'SP2'))
assert(strcmp(et.get(ETC2.SD), 'SD2'))
assert(strcmp(et.get(ETC2.SG), 'SG2'))
assert(strcmp(et.get(ETC2.SF), 'SF2'))
assert(strcmp(et.get(ETC2.SR), 'SR2'))

assert(isequal(et.get(ETC2.CM), [0:1:10]'))
assert(isequal(et.get(ETC2.CP), [0:1:20]'))
assert(isequal(et.get(ETC2.CD), [0:1:30]'))
assert(isequal(et.get(ETC2.CG), [0:1:40]'))
assert(isequal(et.get(ETC2.CF), [0:1:50]'))
assert(isequal(et.get(ETC2.CR), [0:1:60]'))

assert(isequal(et.get(ETC2.RM), [0:1:10]))
assert(isequal(et.get(ETC2.RP), [0:1:20]))
assert(isequal(et.get(ETC2.RD), [0:1:30]))
assert(isequal(et.get(ETC2.RG), [0:1:40]))
assert(isequal(et.get(ETC2.RF), [0:1:50]))
assert(isequal(et.get(ETC2.RR), [0:1:60]))


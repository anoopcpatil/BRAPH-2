% test MeasurementMRI

br1 = BrainRegion('BR1', 'brain region 1', 1, 11, 111);
br2 = BrainRegion('BR2', 'brain region 2', 2, 22, 222);
br3 = BrainRegion('BR3', 'brain region 3', 3, 33, 333);
br4 = BrainRegion('BR4', 'brain region 4', 4, 44, 444);
br5 = BrainRegion('BR5', 'brain region 5', 5, 55, 555);
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

subject_class = Measurement.getSubjectClass('MeasurementMRI');

sub1 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 1);
sub2 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 2);
sub3 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 3);
sub4 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 4);
sub5 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 5);
group = Group(subject_class, {sub1, sub2, sub3 sub4, sub5});

measures = {'Assortativity', 'Degree', 'Distance'};

%% Test 1: Instantiation
for i = 1:1:numel(measures)
    measurement = MeasurementMRI('m1', atlas, group, 'MeasurementMRI.measure_code', measures{i});
end

%% Test 2: Correct size defaults
for i=1:1:numel(measures)
    measurement = MeasurementMRI('m1', atlas, group, 'MeasurementMRI.measure_code', measures{i});
    
    value = measurement.getMeasureValue();
    
    if Measure.is_global(measures{i})
        assert(iscell(value) & ...
            isequal(numel(value), 1) & ...
            all(cellfun(@(x) isequal(size(x), [1, 1]), value)), ...
            ['BRAPH:MeasurementMRI:Instantiation'], ...
            ['MeasurementMRI does not initialize correctly with global measures.']) %#ok<*NBRAK>
    elseif Measure.is_nodal(measures{i})
        assert(iscell(value) & ...
            isequal(numel(value), 1) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), 1]), value)), ...
            ['BRAPH:MeasurementMRI:Instantiation'], ...
            ['MeasurementMRI does not initialize correctly with nodal measures.']) %#ok<*NBRAK>
    elseif Measure.is_binodal(measures{i})
        assert(iscell(value) & ...
            isequal(numel(value), 1) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]), value)), ...
            ['BRAPH:MeasurementMRI:Instantiation'], ...
            ['MeasurementMRI does not initialize correctly with binodal measures.']) %#ok<*NBRAK>
    end
end

%% Test 3: Initialize with value
for i=1:1:numel(measures)
    % setup
    
    A = rand(5);
    g = Graph.getGraph('GraphWU', A);
    m  = Measure.getMeasure(measures{i}, g);
    
    % act
    measurement = MeasurementMRI('m1', atlas, group, 'MeasurementMRI.measure_code', measures{i}, ...
        'MeasurementMRI.value', {m.getValue()} ...
        );
    
    % assert
    if Measure.is_global(measures{i})
        assert(iscell(measurement.getMeasureValue()) & ...
            isequal(numel(measurement.getMeasureValue()), 1) & ...
            all(cellfun(@(x) isequal(size(x), [1, 1]), measurement.getMeasureValue())) ...
            & isequal(size(measurement.getMeasureValue()), size({m.getValue()})), ...
            ['BRAPH:MeasurementMRI:Instantiation'], ...
            ['MeasurementMRI does not initialize correctly with global measures.']) %#ok<*NBRAK>
    elseif Measure.is_nodal(measures{i})
        assert(iscell(measurement.getMeasureValue()) & ...
            isequal(numel(measurement.getMeasureValue()), 1) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), 1]), measurement.getMeasureValue()) ...
            & isequal(size(measurement.getMeasureValue()), size({m.getValue()}))), ...
            ['BRAPH:MeasurementMRI:Instantiation'], ...
            ['MeasurementMRI does not initialize correctly with nodal measures.']) %#ok<*NBRAK>
    elseif Measure.is_binodal(measures{i})
        assert(iscell(measurement.getMeasureValue()) & ...
            isequal(numel(measurement.getMeasureValue()), 1) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]), measurement.getMeasureValue()) ...
            & isequal(size(measurement.getMeasureValue()), size({m.getValue()}))), ...
            ['BRAPH:MeasurementMRI:Instantiation'], ...
            ['MeasurementMRI does not initialize correctly with binodal measures.']) %#ok<*NBRAK>
    end
end